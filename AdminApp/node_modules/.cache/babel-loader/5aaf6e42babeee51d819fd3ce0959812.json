{"ast":null,"code":"/**\r\n * DevExtreme (animation/position.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _renderer = _interopRequireDefault(require(\"../core/renderer\"));\n\nvar _common = require(\"../core/utils/common\");\n\nvar _iterator = require(\"../core/utils/iterator\");\n\nvar _window = require(\"../core/utils/window\");\n\nvar _dom_adapter = _interopRequireDefault(require(\"../core/dom_adapter\"));\n\nvar _type = require(\"../core/utils/type\");\n\nvar _extend = require(\"../core/utils/extend\");\n\nvar _position = require(\"../core/utils/position\");\n\nvar _browser = _interopRequireDefault(require(\"../core/utils/browser\"));\n\nvar _translator = require(\"./translator\");\n\nvar _support = require(\"../core/utils/support\");\n\nvar _devices = _interopRequireDefault(require(\"../core/devices\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar window = (0, _window.getWindow)();\nvar horzRe = /left|right/;\nvar vertRe = /top|bottom/;\nvar collisionRe = /fit|flip|none/;\nvar scaleRe = /scale(.+)/;\nvar IS_SAFARI = _browser.default.safari;\n\nvar normalizeAlign = function (raw) {\n  var result = {\n    h: \"center\",\n    v: \"center\"\n  };\n  var pair = (0, _common.splitPair)(raw);\n\n  if (pair) {\n    (0, _iterator.each)(pair, function () {\n      var w = String(this).toLowerCase();\n\n      if (horzRe.test(w)) {\n        result.h = w;\n      } else {\n        if (vertRe.test(w)) {\n          result.v = w;\n        }\n      }\n    });\n  }\n\n  return result;\n};\n\nvar normalizeOffset = function (raw) {\n  return (0, _common.pairToObject)(raw);\n};\n\nvar normalizeCollision = function (raw) {\n  var pair = (0, _common.splitPair)(raw);\n  var h = String(pair && pair[0]).toLowerCase();\n  var v = String(pair && pair[1]).toLowerCase();\n\n  if (!collisionRe.test(h)) {\n    h = \"none\";\n  }\n\n  if (!collisionRe.test(v)) {\n    v = h;\n  }\n\n  return {\n    h: h,\n    v: v\n  };\n};\n\nvar getAlignFactor = function (align) {\n  switch (align) {\n    case \"center\":\n      return .5;\n\n    case \"right\":\n    case \"bottom\":\n      return 1;\n\n    default:\n      return 0;\n  }\n};\n\nvar inverseAlign = function (align) {\n  switch (align) {\n    case \"left\":\n      return \"right\";\n\n    case \"right\":\n      return \"left\";\n\n    case \"top\":\n      return \"bottom\";\n\n    case \"bottom\":\n      return \"top\";\n\n    default:\n      return align;\n  }\n};\n\nvar calculateOversize = function (data, bounds) {\n  var oversize = 0;\n\n  if (data.myLocation < bounds.min) {\n    oversize += bounds.min - data.myLocation;\n  }\n\n  if (data.myLocation > bounds.max) {\n    oversize += data.myLocation - bounds.max;\n  }\n\n  return oversize;\n};\n\nvar collisionSide = function (direction, data, bounds) {\n  if (data.myLocation < bounds.min) {\n    return \"h\" === direction ? \"left\" : \"top\";\n  }\n\n  if (data.myLocation > bounds.max) {\n    return \"h\" === direction ? \"right\" : \"bottom\";\n  }\n\n  return \"none\";\n};\n\nvar initMyLocation = function (data) {\n  data.myLocation = data.atLocation + getAlignFactor(data.atAlign) * data.atSize - getAlignFactor(data.myAlign) * data.mySize + data.offset;\n};\n\nvar collisionResolvers = {\n  fit: function (data, bounds) {\n    var result = false;\n\n    if (data.myLocation > bounds.max) {\n      data.myLocation = bounds.max;\n      result = true;\n    }\n\n    if (data.myLocation < bounds.min) {\n      data.myLocation = bounds.min;\n      result = true;\n    }\n\n    data.fit = result;\n  },\n  flip: function (data, bounds) {\n    data.flip = false;\n\n    if (\"center\" === data.myAlign && \"center\" === data.atAlign) {\n      return;\n    }\n\n    if (data.myLocation < bounds.min || data.myLocation > bounds.max) {\n      var inverseData = (0, _extend.extend)({}, data, {\n        myAlign: inverseAlign(data.myAlign),\n        atAlign: inverseAlign(data.atAlign),\n        offset: -data.offset\n      });\n      initMyLocation(inverseData);\n      inverseData.oversize = calculateOversize(inverseData, bounds);\n\n      if (inverseData.myLocation >= bounds.min && inverseData.myLocation <= bounds.max || data.oversize > inverseData.oversize) {\n        data.myLocation = inverseData.myLocation;\n        data.oversize = inverseData.oversize;\n        data.flip = true;\n      }\n    }\n  },\n  flipfit: function (data, bounds) {\n    this.flip(data, bounds);\n    this.fit(data, bounds);\n  },\n  none: function (data) {\n    data.oversize = 0;\n  }\n};\nvar scrollbarWidth;\n\nvar calculateScrollbarWidth = function () {\n  var $scrollDiv = (0, _renderer.default)(\"<div>\").css({\n    width: 100,\n    height: 100,\n    overflow: \"scroll\",\n    position: \"absolute\",\n    top: -9999\n  }).appendTo((0, _renderer.default)(\"body\"));\n  var result = $scrollDiv.get(0).offsetWidth - $scrollDiv.get(0).clientWidth;\n  $scrollDiv.remove();\n  scrollbarWidth = result;\n};\n\nvar defaultPositionResult = {\n  h: {\n    location: 0,\n    flip: false,\n    fit: false,\n    oversize: 0\n  },\n  v: {\n    location: 0,\n    flip: false,\n    fit: false,\n    oversize: 0\n  }\n};\n\nvar calculatePosition = function (what, options) {\n  var $what = (0, _renderer.default)(what);\n  var currentOffset = $what.offset();\n  var result = (0, _extend.extend)(true, {}, defaultPositionResult, {\n    h: {\n      location: currentOffset.left\n    },\n    v: {\n      location: currentOffset.top\n    }\n  });\n\n  if (!options) {\n    return result;\n  }\n\n  var my = normalizeAlign(options.my);\n  var at = normalizeAlign(options.at);\n  var of = (0, _renderer.default)(options.of).length && options.of || window;\n  var offset = normalizeOffset(options.offset);\n  var collision = normalizeCollision(options.collision);\n  var boundary = options.boundary;\n  var boundaryOffset = normalizeOffset(options.boundaryOffset);\n  var h = {\n    mySize: $what.outerWidth(),\n    myAlign: my.h,\n    atAlign: at.h,\n    offset: offset.h,\n    collision: collision.h,\n    boundaryOffset: boundaryOffset.h\n  };\n  var v = {\n    mySize: $what.outerHeight(),\n    myAlign: my.v,\n    atAlign: at.v,\n    offset: offset.v,\n    collision: collision.v,\n    boundaryOffset: boundaryOffset.v\n  };\n\n  if (of.preventDefault) {\n    h.atLocation = of.pageX;\n    v.atLocation = of.pageY;\n    h.atSize = 0;\n    v.atSize = 0;\n  } else {\n    of = (0, _renderer.default)(of);\n\n    if ((0, _type.isWindow)(of[0])) {\n      h.atLocation = of.scrollLeft();\n      v.atLocation = of.scrollTop();\n\n      if (\"phone\" === _devices.default.real().deviceType && of[0].visualViewport) {\n        h.atLocation = Math.max(h.atLocation, of[0].visualViewport.offsetLeft);\n        v.atLocation = Math.max(v.atLocation, of[0].visualViewport.offsetTop);\n        h.atSize = of[0].visualViewport.width;\n        v.atSize = of[0].visualViewport.height;\n      } else {\n        h.atSize = of[0].innerWidth > of[0].outerWidth ? of[0].innerWidth : of.width();\n        v.atSize = of[0].innerHeight > of[0].outerHeight || IS_SAFARI ? of[0].innerHeight : of.height();\n      }\n    } else {\n      if (9 === of[0].nodeType) {\n        h.atLocation = 0;\n        v.atLocation = 0;\n        h.atSize = of.width();\n        v.atSize = of.height();\n      } else {\n        var ofRect = (0, _position.getBoundingRect)(of.get(0));\n        var o = getOffsetWithoutScale(of);\n        h.atLocation = o.left;\n        v.atLocation = o.top;\n        h.atSize = Math.max(ofRect.width, of.outerWidth());\n        v.atSize = Math.max(ofRect.height, of.outerHeight());\n      }\n    }\n  }\n\n  initMyLocation(h);\n  initMyLocation(v);\n\n  var bounds = function () {\n    var win = (0, _renderer.default)(window);\n    var windowWidth = win.width();\n    var windowHeight = win.height();\n    var left = win.scrollLeft();\n    var top = win.scrollTop();\n\n    var documentElement = _dom_adapter.default.getDocumentElement();\n\n    var hZoomLevel = _support.touch ? documentElement.clientWidth / windowWidth : 1;\n    var vZoomLevel = _support.touch ? documentElement.clientHeight / windowHeight : 1;\n\n    if (void 0 === scrollbarWidth) {\n      calculateScrollbarWidth();\n    }\n\n    var boundaryWidth = windowWidth;\n    var boundaryHeight = windowHeight;\n\n    if (boundary) {\n      var $boundary = (0, _renderer.default)(boundary);\n      var boundaryPosition = $boundary.offset();\n      left = boundaryPosition.left;\n      top = boundaryPosition.top;\n      boundaryWidth = $boundary.width();\n      boundaryHeight = $boundary.height();\n    }\n\n    return {\n      h: {\n        min: left + h.boundaryOffset,\n        max: left + boundaryWidth / hZoomLevel - h.mySize - h.boundaryOffset\n      },\n      v: {\n        min: top + v.boundaryOffset,\n        max: top + boundaryHeight / vZoomLevel - v.mySize - v.boundaryOffset\n      }\n    };\n  }();\n\n  h.oversize = calculateOversize(h, bounds.h);\n  v.oversize = calculateOversize(v, bounds.v);\n  h.collisionSide = collisionSide(\"h\", h, bounds.h);\n  v.collisionSide = collisionSide(\"v\", v, bounds.v);\n\n  if (collisionResolvers[h.collision]) {\n    collisionResolvers[h.collision](h, bounds.h);\n  }\n\n  if (collisionResolvers[v.collision]) {\n    collisionResolvers[v.collision](v, bounds.v);\n  }\n\n  var preciser = function (number) {\n    return options.precise ? number : Math.round(number);\n  };\n\n  (0, _extend.extend)(true, result, {\n    h: {\n      location: preciser(h.myLocation),\n      oversize: preciser(h.oversize),\n      fit: h.fit,\n      flip: h.flip,\n      collisionSide: h.collisionSide\n    },\n    v: {\n      location: preciser(v.myLocation),\n      oversize: preciser(v.oversize),\n      fit: v.fit,\n      flip: v.flip,\n      collisionSide: v.collisionSide\n    },\n    precise: options.precise\n  });\n  return result;\n};\n\nvar getOffsetWithoutScale = function getOffsetWithoutScale($startElement) {\n  var _currentElement$getAt, _style$match;\n\n  var $currentElement = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : $startElement;\n  var currentElement = $currentElement.get(0);\n\n  if (!currentElement) {\n    return $startElement.offset();\n  }\n\n  var style = (null === (_currentElement$getAt = currentElement.getAttribute) || void 0 === _currentElement$getAt ? void 0 : _currentElement$getAt.call(currentElement, \"style\")) || \"\";\n  var scale = null === (_style$match = style.match(scaleRe)) || void 0 === _style$match ? void 0 : _style$match[0];\n  var offset;\n\n  if (scale) {\n    currentElement.setAttribute(\"style\", style.replace(scale, \"\"));\n    offset = getOffsetWithoutScale($startElement, $currentElement.parent());\n    currentElement.setAttribute(\"style\", style);\n  } else {\n    offset = getOffsetWithoutScale($startElement, $currentElement.parent());\n  }\n\n  return offset;\n};\n\nvar position = function (what, options) {\n  var $what = (0, _renderer.default)(what);\n\n  if (!options) {\n    return $what.offset();\n  }\n\n  (0, _translator.resetPosition)($what, true);\n  var offset = getOffsetWithoutScale($what);\n  var targetPosition = options.h && options.v ? options : calculatePosition($what, options);\n\n  var preciser = function (number) {\n    return options.precise ? number : Math.round(number);\n  };\n\n  (0, _translator.move)($what, {\n    left: targetPosition.h.location - preciser(offset.left),\n    top: targetPosition.v.location - preciser(offset.top)\n  });\n  return targetPosition;\n};\n\nvar offset = function (element) {\n  element = (0, _renderer.default)(element).get(0);\n\n  if ((0, _type.isWindow)(element)) {\n    return null;\n  } else {\n    if (element && \"pageY\" in element && \"pageX\" in element) {\n      return {\n        top: element.pageY,\n        left: element.pageX\n      };\n    }\n  }\n\n  return (0, _renderer.default)(element).offset();\n};\n\nif (!position.inverseAlign) {\n  position.inverseAlign = inverseAlign;\n}\n\nif (!position.normalizeAlign) {\n  position.normalizeAlign = normalizeAlign;\n}\n\nvar _default = {\n  calculateScrollbarWidth: calculateScrollbarWidth,\n  calculate: calculatePosition,\n  setup: position,\n  offset: offset\n};\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/node_modules/devextreme/animation/position.js"],"names":["exports","default","_renderer","_interopRequireDefault","require","_common","_iterator","_window","_dom_adapter","_type","_extend","_position","_browser","_translator","_support","_devices","obj","__esModule","window","getWindow","horzRe","vertRe","collisionRe","scaleRe","IS_SAFARI","safari","normalizeAlign","raw","result","h","v","pair","splitPair","each","w","String","toLowerCase","test","normalizeOffset","pairToObject","normalizeCollision","getAlignFactor","align","inverseAlign","calculateOversize","data","bounds","oversize","myLocation","min","max","collisionSide","direction","initMyLocation","atLocation","atAlign","atSize","myAlign","mySize","offset","collisionResolvers","fit","flip","inverseData","extend","flipfit","none","scrollbarWidth","calculateScrollbarWidth","$scrollDiv","css","width","height","overflow","position","top","appendTo","get","offsetWidth","clientWidth","remove","defaultPositionResult","location","calculatePosition","what","options","$what","currentOffset","left","my","at","of","length","collision","boundary","boundaryOffset","outerWidth","outerHeight","preventDefault","pageX","pageY","isWindow","scrollLeft","scrollTop","real","deviceType","visualViewport","Math","offsetLeft","offsetTop","innerWidth","innerHeight","nodeType","ofRect","getBoundingRect","o","getOffsetWithoutScale","win","windowWidth","windowHeight","documentElement","getDocumentElement","hZoomLevel","touch","vZoomLevel","clientHeight","boundaryWidth","boundaryHeight","$boundary","boundaryPosition","preciser","number","precise","round","$startElement","_currentElement$getAt","_style$match","$currentElement","arguments","currentElement","style","getAttribute","call","scale","match","setAttribute","replace","parent","resetPosition","targetPosition","move","element","_default","calculate","setup","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (animation/position.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../core/renderer\"));\r\nvar _common = require(\"../core/utils/common\");\r\nvar _iterator = require(\"../core/utils/iterator\");\r\nvar _window = require(\"../core/utils/window\");\r\nvar _dom_adapter = _interopRequireDefault(require(\"../core/dom_adapter\"));\r\nvar _type = require(\"../core/utils/type\");\r\nvar _extend = require(\"../core/utils/extend\");\r\nvar _position = require(\"../core/utils/position\");\r\nvar _browser = _interopRequireDefault(require(\"../core/utils/browser\"));\r\nvar _translator = require(\"./translator\");\r\nvar _support = require(\"../core/utils/support\");\r\nvar _devices = _interopRequireDefault(require(\"../core/devices\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar window = (0, _window.getWindow)();\r\nvar horzRe = /left|right/;\r\nvar vertRe = /top|bottom/;\r\nvar collisionRe = /fit|flip|none/;\r\nvar scaleRe = /scale(.+)/;\r\nvar IS_SAFARI = _browser.default.safari;\r\nvar normalizeAlign = function(raw) {\r\n    var result = {\r\n        h: \"center\",\r\n        v: \"center\"\r\n    };\r\n    var pair = (0, _common.splitPair)(raw);\r\n    if (pair) {\r\n        (0, _iterator.each)(pair, function() {\r\n            var w = String(this).toLowerCase();\r\n            if (horzRe.test(w)) {\r\n                result.h = w\r\n            } else {\r\n                if (vertRe.test(w)) {\r\n                    result.v = w\r\n                }\r\n            }\r\n        })\r\n    }\r\n    return result\r\n};\r\nvar normalizeOffset = function(raw) {\r\n    return (0, _common.pairToObject)(raw)\r\n};\r\nvar normalizeCollision = function(raw) {\r\n    var pair = (0, _common.splitPair)(raw);\r\n    var h = String(pair && pair[0]).toLowerCase();\r\n    var v = String(pair && pair[1]).toLowerCase();\r\n    if (!collisionRe.test(h)) {\r\n        h = \"none\"\r\n    }\r\n    if (!collisionRe.test(v)) {\r\n        v = h\r\n    }\r\n    return {\r\n        h: h,\r\n        v: v\r\n    }\r\n};\r\nvar getAlignFactor = function(align) {\r\n    switch (align) {\r\n        case \"center\":\r\n            return .5;\r\n        case \"right\":\r\n        case \"bottom\":\r\n            return 1;\r\n        default:\r\n            return 0\r\n    }\r\n};\r\nvar inverseAlign = function(align) {\r\n    switch (align) {\r\n        case \"left\":\r\n            return \"right\";\r\n        case \"right\":\r\n            return \"left\";\r\n        case \"top\":\r\n            return \"bottom\";\r\n        case \"bottom\":\r\n            return \"top\";\r\n        default:\r\n            return align\r\n    }\r\n};\r\nvar calculateOversize = function(data, bounds) {\r\n    var oversize = 0;\r\n    if (data.myLocation < bounds.min) {\r\n        oversize += bounds.min - data.myLocation\r\n    }\r\n    if (data.myLocation > bounds.max) {\r\n        oversize += data.myLocation - bounds.max\r\n    }\r\n    return oversize\r\n};\r\nvar collisionSide = function(direction, data, bounds) {\r\n    if (data.myLocation < bounds.min) {\r\n        return \"h\" === direction ? \"left\" : \"top\"\r\n    }\r\n    if (data.myLocation > bounds.max) {\r\n        return \"h\" === direction ? \"right\" : \"bottom\"\r\n    }\r\n    return \"none\"\r\n};\r\nvar initMyLocation = function(data) {\r\n    data.myLocation = data.atLocation + getAlignFactor(data.atAlign) * data.atSize - getAlignFactor(data.myAlign) * data.mySize + data.offset\r\n};\r\nvar collisionResolvers = {\r\n    fit: function(data, bounds) {\r\n        var result = false;\r\n        if (data.myLocation > bounds.max) {\r\n            data.myLocation = bounds.max;\r\n            result = true\r\n        }\r\n        if (data.myLocation < bounds.min) {\r\n            data.myLocation = bounds.min;\r\n            result = true\r\n        }\r\n        data.fit = result\r\n    },\r\n    flip: function(data, bounds) {\r\n        data.flip = false;\r\n        if (\"center\" === data.myAlign && \"center\" === data.atAlign) {\r\n            return\r\n        }\r\n        if (data.myLocation < bounds.min || data.myLocation > bounds.max) {\r\n            var inverseData = (0, _extend.extend)({}, data, {\r\n                myAlign: inverseAlign(data.myAlign),\r\n                atAlign: inverseAlign(data.atAlign),\r\n                offset: -data.offset\r\n            });\r\n            initMyLocation(inverseData);\r\n            inverseData.oversize = calculateOversize(inverseData, bounds);\r\n            if (inverseData.myLocation >= bounds.min && inverseData.myLocation <= bounds.max || data.oversize > inverseData.oversize) {\r\n                data.myLocation = inverseData.myLocation;\r\n                data.oversize = inverseData.oversize;\r\n                data.flip = true\r\n            }\r\n        }\r\n    },\r\n    flipfit: function(data, bounds) {\r\n        this.flip(data, bounds);\r\n        this.fit(data, bounds)\r\n    },\r\n    none: function(data) {\r\n        data.oversize = 0\r\n    }\r\n};\r\nvar scrollbarWidth;\r\nvar calculateScrollbarWidth = function() {\r\n    var $scrollDiv = (0, _renderer.default)(\"<div>\").css({\r\n        width: 100,\r\n        height: 100,\r\n        overflow: \"scroll\",\r\n        position: \"absolute\",\r\n        top: -9999\r\n    }).appendTo((0, _renderer.default)(\"body\"));\r\n    var result = $scrollDiv.get(0).offsetWidth - $scrollDiv.get(0).clientWidth;\r\n    $scrollDiv.remove();\r\n    scrollbarWidth = result\r\n};\r\nvar defaultPositionResult = {\r\n    h: {\r\n        location: 0,\r\n        flip: false,\r\n        fit: false,\r\n        oversize: 0\r\n    },\r\n    v: {\r\n        location: 0,\r\n        flip: false,\r\n        fit: false,\r\n        oversize: 0\r\n    }\r\n};\r\nvar calculatePosition = function(what, options) {\r\n    var $what = (0, _renderer.default)(what);\r\n    var currentOffset = $what.offset();\r\n    var result = (0, _extend.extend)(true, {}, defaultPositionResult, {\r\n        h: {\r\n            location: currentOffset.left\r\n        },\r\n        v: {\r\n            location: currentOffset.top\r\n        }\r\n    });\r\n    if (!options) {\r\n        return result\r\n    }\r\n    var my = normalizeAlign(options.my);\r\n    var at = normalizeAlign(options.at);\r\n    var of = (0, _renderer.default)(options.of).length && options.of || window;\r\n    var offset = normalizeOffset(options.offset);\r\n    var collision = normalizeCollision(options.collision);\r\n    var boundary = options.boundary;\r\n    var boundaryOffset = normalizeOffset(options.boundaryOffset);\r\n    var h = {\r\n        mySize: $what.outerWidth(),\r\n        myAlign: my.h,\r\n        atAlign: at.h,\r\n        offset: offset.h,\r\n        collision: collision.h,\r\n        boundaryOffset: boundaryOffset.h\r\n    };\r\n    var v = {\r\n        mySize: $what.outerHeight(),\r\n        myAlign: my.v,\r\n        atAlign: at.v,\r\n        offset: offset.v,\r\n        collision: collision.v,\r\n        boundaryOffset: boundaryOffset.v\r\n    };\r\n    if ( of .preventDefault) {\r\n        h.atLocation = of .pageX;\r\n        v.atLocation = of .pageY;\r\n        h.atSize = 0;\r\n        v.atSize = 0\r\n    } else {\r\n        of = (0, _renderer.default)( of );\r\n        if ((0, _type.isWindow)( of [0])) {\r\n            h.atLocation = of .scrollLeft();\r\n            v.atLocation = of .scrollTop();\r\n            if (\"phone\" === _devices.default.real().deviceType && of [0].visualViewport) {\r\n                h.atLocation = Math.max(h.atLocation, of [0].visualViewport.offsetLeft);\r\n                v.atLocation = Math.max(v.atLocation, of [0].visualViewport.offsetTop);\r\n                h.atSize = of [0].visualViewport.width;\r\n                v.atSize = of [0].visualViewport.height\r\n            } else {\r\n                h.atSize = of [0].innerWidth > of [0].outerWidth ? of [0].innerWidth : of .width();\r\n                v.atSize = of [0].innerHeight > of [0].outerHeight || IS_SAFARI ? of [0].innerHeight : of .height()\r\n            }\r\n        } else {\r\n            if (9 === of [0].nodeType) {\r\n                h.atLocation = 0;\r\n                v.atLocation = 0;\r\n                h.atSize = of .width();\r\n                v.atSize = of .height()\r\n            } else {\r\n                var ofRect = (0, _position.getBoundingRect)( of .get(0));\r\n                var o = getOffsetWithoutScale( of );\r\n                h.atLocation = o.left;\r\n                v.atLocation = o.top;\r\n                h.atSize = Math.max(ofRect.width, of .outerWidth());\r\n                v.atSize = Math.max(ofRect.height, of .outerHeight())\r\n            }\r\n        }\r\n    }\r\n    initMyLocation(h);\r\n    initMyLocation(v);\r\n    var bounds = function() {\r\n        var win = (0, _renderer.default)(window);\r\n        var windowWidth = win.width();\r\n        var windowHeight = win.height();\r\n        var left = win.scrollLeft();\r\n        var top = win.scrollTop();\r\n        var documentElement = _dom_adapter.default.getDocumentElement();\r\n        var hZoomLevel = _support.touch ? documentElement.clientWidth / windowWidth : 1;\r\n        var vZoomLevel = _support.touch ? documentElement.clientHeight / windowHeight : 1;\r\n        if (void 0 === scrollbarWidth) {\r\n            calculateScrollbarWidth()\r\n        }\r\n        var boundaryWidth = windowWidth;\r\n        var boundaryHeight = windowHeight;\r\n        if (boundary) {\r\n            var $boundary = (0, _renderer.default)(boundary);\r\n            var boundaryPosition = $boundary.offset();\r\n            left = boundaryPosition.left;\r\n            top = boundaryPosition.top;\r\n            boundaryWidth = $boundary.width();\r\n            boundaryHeight = $boundary.height()\r\n        }\r\n        return {\r\n            h: {\r\n                min: left + h.boundaryOffset,\r\n                max: left + boundaryWidth / hZoomLevel - h.mySize - h.boundaryOffset\r\n            },\r\n            v: {\r\n                min: top + v.boundaryOffset,\r\n                max: top + boundaryHeight / vZoomLevel - v.mySize - v.boundaryOffset\r\n            }\r\n        }\r\n    }();\r\n    h.oversize = calculateOversize(h, bounds.h);\r\n    v.oversize = calculateOversize(v, bounds.v);\r\n    h.collisionSide = collisionSide(\"h\", h, bounds.h);\r\n    v.collisionSide = collisionSide(\"v\", v, bounds.v);\r\n    if (collisionResolvers[h.collision]) {\r\n        collisionResolvers[h.collision](h, bounds.h)\r\n    }\r\n    if (collisionResolvers[v.collision]) {\r\n        collisionResolvers[v.collision](v, bounds.v)\r\n    }\r\n    var preciser = function(number) {\r\n        return options.precise ? number : Math.round(number)\r\n    };\r\n    (0, _extend.extend)(true, result, {\r\n        h: {\r\n            location: preciser(h.myLocation),\r\n            oversize: preciser(h.oversize),\r\n            fit: h.fit,\r\n            flip: h.flip,\r\n            collisionSide: h.collisionSide\r\n        },\r\n        v: {\r\n            location: preciser(v.myLocation),\r\n            oversize: preciser(v.oversize),\r\n            fit: v.fit,\r\n            flip: v.flip,\r\n            collisionSide: v.collisionSide\r\n        },\r\n        precise: options.precise\r\n    });\r\n    return result\r\n};\r\nvar getOffsetWithoutScale = function getOffsetWithoutScale($startElement) {\r\n    var _currentElement$getAt, _style$match;\r\n    var $currentElement = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : $startElement;\r\n    var currentElement = $currentElement.get(0);\r\n    if (!currentElement) {\r\n        return $startElement.offset()\r\n    }\r\n    var style = (null === (_currentElement$getAt = currentElement.getAttribute) || void 0 === _currentElement$getAt ? void 0 : _currentElement$getAt.call(currentElement, \"style\")) || \"\";\r\n    var scale = null === (_style$match = style.match(scaleRe)) || void 0 === _style$match ? void 0 : _style$match[0];\r\n    var offset;\r\n    if (scale) {\r\n        currentElement.setAttribute(\"style\", style.replace(scale, \"\"));\r\n        offset = getOffsetWithoutScale($startElement, $currentElement.parent());\r\n        currentElement.setAttribute(\"style\", style)\r\n    } else {\r\n        offset = getOffsetWithoutScale($startElement, $currentElement.parent())\r\n    }\r\n    return offset\r\n};\r\nvar position = function(what, options) {\r\n    var $what = (0, _renderer.default)(what);\r\n    if (!options) {\r\n        return $what.offset()\r\n    }(0, _translator.resetPosition)($what, true);\r\n    var offset = getOffsetWithoutScale($what);\r\n    var targetPosition = options.h && options.v ? options : calculatePosition($what, options);\r\n    var preciser = function(number) {\r\n        return options.precise ? number : Math.round(number)\r\n    };\r\n    (0, _translator.move)($what, {\r\n        left: targetPosition.h.location - preciser(offset.left),\r\n        top: targetPosition.v.location - preciser(offset.top)\r\n    });\r\n    return targetPosition\r\n};\r\nvar offset = function(element) {\r\n    element = (0, _renderer.default)(element).get(0);\r\n    if ((0, _type.isWindow)(element)) {\r\n        return null\r\n    } else {\r\n        if (element && \"pageY\" in element && \"pageX\" in element) {\r\n            return {\r\n                top: element.pageY,\r\n                left: element.pageX\r\n            }\r\n        }\r\n    }\r\n    return (0, _renderer.default)(element).offset()\r\n};\r\nif (!position.inverseAlign) {\r\n    position.inverseAlign = inverseAlign\r\n}\r\nif (!position.normalizeAlign) {\r\n    position.normalizeAlign = normalizeAlign\r\n}\r\nvar _default = {\r\n    calculateScrollbarWidth: calculateScrollbarWidth,\r\n    calculate: calculatePosition,\r\n    setup: position,\r\n    offset: offset\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}