{"ast":null,"code":"/**\r\n * DevExtreme (core/options/option_manager.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.OptionManager = void 0;\n\nvar _data = require(\"../utils/data\");\n\nvar _common = require(\"../utils/common\");\n\nvar _comparator = require(\"../utils/comparator\");\n\nvar _extend = require(\"../utils/extend\");\n\nvar _type = require(\"../utils/type\");\n\nvar _utils = require(\"./utils\");\n\nvar cachedGetters = {};\nvar cachedSetters = {};\n\nvar OptionManager = function () {\n  function OptionManager(options, optionsByReference) {\n    this._options = options;\n    this._optionsByReference = optionsByReference;\n    this._changingCallback;\n    this._changedCallback;\n    this._namePreparedCallbacks;\n  }\n\n  var _proto = OptionManager.prototype;\n\n  _proto._setByReference = function (options, rulesOptions) {\n    (0, _extend.extend)(true, options, rulesOptions);\n\n    for (var fieldName in this._optionsByReference) {\n      if (Object.prototype.hasOwnProperty.call(rulesOptions, fieldName)) {\n        options[fieldName] = rulesOptions[fieldName];\n      }\n    }\n  };\n\n  _proto._setPreparedValue = function (name, value, merge, silent) {\n    var previousValue = this.get(this._options, name, false);\n\n    if (!(0, _comparator.equals)(previousValue, value)) {\n      var path = name.split(/[.[]/);\n      !silent && this._changingCallback(name, previousValue, value);\n      cachedSetters[name] = cachedSetters[name] || (0, _data.compileSetter)(name);\n      cachedSetters[name](this._options, value, {\n        functionsAsIs: true,\n        merge: (0, _type.isDefined)(merge) ? merge : !this._optionsByReference[name],\n        unwrapObservables: path.length > 1 && !!this._optionsByReference[path[0]]\n      });\n      !silent && this._changedCallback(name, value, previousValue);\n    }\n  };\n\n  _proto._prepareRelevantNames = function (options, name, value, silent) {\n    if ((0, _type.isPlainObject)(value)) {\n      for (var valueName in value) {\n        this._prepareRelevantNames(options, \"\".concat(name, \".\").concat(valueName), value[valueName]);\n      }\n    }\n\n    this._namePreparedCallbacks(options, name, value, silent);\n  };\n\n  _proto.get = function () {\n    var options = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._options;\n    var name = arguments.length > 1 ? arguments[1] : void 0;\n    var unwrapObservables = arguments.length > 2 ? arguments[2] : void 0;\n    cachedGetters[name] = cachedGetters[name] || (0, _data.compileGetter)(name);\n    return cachedGetters[name](options, {\n      functionsAsIs: true,\n      unwrapObservables: unwrapObservables\n    });\n  };\n\n  _proto.set = function (options, value, merge, silent) {\n    options = (0, _utils.normalizeOptions)(options, value);\n\n    for (var name in options) {\n      this._prepareRelevantNames(options, name, options[name], silent);\n    }\n\n    for (var _name in options) {\n      this._setPreparedValue(_name, options[_name], merge, silent);\n    }\n  };\n\n  _proto.onRelevantNamesPrepared = function (callBack) {\n    this._namePreparedCallbacks = callBack;\n  };\n\n  _proto.onChanging = function (callBack) {\n    this._changingCallback = callBack;\n  };\n\n  _proto.onChanged = function (callBack) {\n    this._changedCallback = callBack;\n  };\n\n  _proto.dispose = function () {\n    this._changingCallback = _common.noop;\n    this._changedCallback = _common.noop;\n  };\n\n  return OptionManager;\n}();\n\nexports.OptionManager = OptionManager;","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/node_modules/devextreme/core/options/option_manager.js"],"names":["exports","OptionManager","_data","require","_common","_comparator","_extend","_type","_utils","cachedGetters","cachedSetters","options","optionsByReference","_options","_optionsByReference","_changingCallback","_changedCallback","_namePreparedCallbacks","_proto","prototype","_setByReference","rulesOptions","extend","fieldName","Object","hasOwnProperty","call","_setPreparedValue","name","value","merge","silent","previousValue","get","equals","path","split","compileSetter","functionsAsIs","isDefined","unwrapObservables","length","_prepareRelevantNames","isPlainObject","valueName","concat","arguments","compileGetter","set","normalizeOptions","_name","onRelevantNamesPrepared","callBack","onChanging","onChanged","dispose","noop"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (core/options/option_manager.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.OptionManager = void 0;\r\nvar _data = require(\"../utils/data\");\r\nvar _common = require(\"../utils/common\");\r\nvar _comparator = require(\"../utils/comparator\");\r\nvar _extend = require(\"../utils/extend\");\r\nvar _type = require(\"../utils/type\");\r\nvar _utils = require(\"./utils\");\r\nvar cachedGetters = {};\r\nvar cachedSetters = {};\r\nvar OptionManager = function() {\r\n    function OptionManager(options, optionsByReference) {\r\n        this._options = options;\r\n        this._optionsByReference = optionsByReference;\r\n        this._changingCallback;\r\n        this._changedCallback;\r\n        this._namePreparedCallbacks\r\n    }\r\n    var _proto = OptionManager.prototype;\r\n    _proto._setByReference = function(options, rulesOptions) {\r\n        (0, _extend.extend)(true, options, rulesOptions);\r\n        for (var fieldName in this._optionsByReference) {\r\n            if (Object.prototype.hasOwnProperty.call(rulesOptions, fieldName)) {\r\n                options[fieldName] = rulesOptions[fieldName]\r\n            }\r\n        }\r\n    };\r\n    _proto._setPreparedValue = function(name, value, merge, silent) {\r\n        var previousValue = this.get(this._options, name, false);\r\n        if (!(0, _comparator.equals)(previousValue, value)) {\r\n            var path = name.split(/[.[]/);\r\n            !silent && this._changingCallback(name, previousValue, value);\r\n            cachedSetters[name] = cachedSetters[name] || (0, _data.compileSetter)(name);\r\n            cachedSetters[name](this._options, value, {\r\n                functionsAsIs: true,\r\n                merge: (0, _type.isDefined)(merge) ? merge : !this._optionsByReference[name],\r\n                unwrapObservables: path.length > 1 && !!this._optionsByReference[path[0]]\r\n            });\r\n            !silent && this._changedCallback(name, value, previousValue)\r\n        }\r\n    };\r\n    _proto._prepareRelevantNames = function(options, name, value, silent) {\r\n        if ((0, _type.isPlainObject)(value)) {\r\n            for (var valueName in value) {\r\n                this._prepareRelevantNames(options, \"\".concat(name, \".\").concat(valueName), value[valueName])\r\n            }\r\n        }\r\n        this._namePreparedCallbacks(options, name, value, silent)\r\n    };\r\n    _proto.get = function() {\r\n        var options = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._options;\r\n        var name = arguments.length > 1 ? arguments[1] : void 0;\r\n        var unwrapObservables = arguments.length > 2 ? arguments[2] : void 0;\r\n        cachedGetters[name] = cachedGetters[name] || (0, _data.compileGetter)(name);\r\n        return cachedGetters[name](options, {\r\n            functionsAsIs: true,\r\n            unwrapObservables: unwrapObservables\r\n        })\r\n    };\r\n    _proto.set = function(options, value, merge, silent) {\r\n        options = (0, _utils.normalizeOptions)(options, value);\r\n        for (var name in options) {\r\n            this._prepareRelevantNames(options, name, options[name], silent)\r\n        }\r\n        for (var _name in options) {\r\n            this._setPreparedValue(_name, options[_name], merge, silent)\r\n        }\r\n    };\r\n    _proto.onRelevantNamesPrepared = function(callBack) {\r\n        this._namePreparedCallbacks = callBack\r\n    };\r\n    _proto.onChanging = function(callBack) {\r\n        this._changingCallback = callBack\r\n    };\r\n    _proto.onChanged = function(callBack) {\r\n        this._changedCallback = callBack\r\n    };\r\n    _proto.dispose = function() {\r\n        this._changingCallback = _common.noop;\r\n        this._changedCallback = _common.noop\r\n    };\r\n    return OptionManager\r\n}();\r\nexports.OptionManager = OptionManager;\r\n"]},"metadata":{},"sourceType":"script"}