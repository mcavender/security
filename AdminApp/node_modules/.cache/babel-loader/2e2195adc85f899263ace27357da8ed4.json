{"ast":null,"code":"/**\r\n * DevExtreme (ui/hierarchical_collection/ui.data_adapter.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _class = _interopRequireDefault(require(\"../../core/class\"));\n\nvar _common = require(\"../../core/utils/common\");\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _ui = _interopRequireDefault(require(\"../../ui/widget/ui.errors\"));\n\nvar _ui2 = _interopRequireDefault(require(\"../../ui/widget/ui.search_box_mixin\"));\n\nvar _array = require(\"../../core/utils/array\");\n\nvar _query = _interopRequireDefault(require(\"../../data/query\"));\n\nvar _store_helper = _interopRequireDefault(require(\"../../data/store_helper\"));\n\nvar _ui3 = _interopRequireDefault(require(\"./ui.data_converter\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar EXPANDED = \"expanded\";\nvar SELECTED = \"selected\";\nvar DISABLED = \"disabled\";\n\nvar DataAdapter = _class.default.inherit({\n  ctor: function (options) {\n    this.options = {};\n    (0, _extend.extend)(this.options, this._defaultOptions(), options);\n    this.options.dataConverter.setDataAccessors(this.options.dataAccessors);\n    this._selectedNodesKeys = [];\n    this._expandedNodesKeys = [];\n    this._dataStructure = [];\n\n    this._createInternalDataStructure();\n\n    this.getTreeNodes();\n  },\n  setOption: function (name, value) {\n    this.options[name] = value;\n\n    if (\"recursiveSelection\" === name) {\n      this._updateSelection();\n    }\n  },\n  _defaultOptions: function () {\n    return {\n      dataAccessors: void 0,\n      items: [],\n      multipleSelection: true,\n      recursiveSelection: false,\n      recursiveExpansion: false,\n      rootValue: 0,\n      searchValue: \"\",\n      dataType: \"tree\",\n      searchMode: \"contains\",\n      dataConverter: new _ui3.default(),\n      onNodeChanged: _common.noop,\n      sort: null\n    };\n  },\n  _createInternalDataStructure: function () {\n    this._initialDataStructure = this.options.dataConverter.createPlainStructure(this.options.items, this.options.rootValue, this.options.dataType);\n    this._dataStructure = this.options.searchValue.length ? this.search(this.options.searchValue) : this._initialDataStructure;\n    this.options.dataConverter._dataStructure = this._dataStructure;\n\n    this._updateSelection();\n\n    this._updateExpansion();\n  },\n  _updateSelection: function () {\n    if (this.options.recursiveSelection) {\n      this._setChildrenSelection();\n\n      this._setParentSelection();\n    }\n\n    this._selectedNodesKeys = this._updateNodesKeysArray(SELECTED);\n  },\n  _updateExpansion: function (key) {\n    if (this.options.recursiveExpansion) {\n      key ? this._updateOneBranch(key) : this._setParentExpansion();\n    }\n\n    this._expandedNodesKeys = this._updateNodesKeysArray(EXPANDED);\n  },\n  _updateNodesKeysArray: function (property) {\n    var that = this;\n    var array = [];\n    (0, _iterator.each)(that._getDataBySelectionMode(), function (_, node) {\n      if (!that._isNodeVisible(node)) {\n        return;\n      }\n\n      if (node.internalFields[property]) {\n        if (property === EXPANDED || that.options.multipleSelection) {\n          array.push(node.internalFields.key);\n        } else {\n          array.length && that.toggleSelection(array[0], false, true);\n          array = [node.internalFields.key];\n        }\n      }\n    });\n    return array;\n  },\n  _getDataBySelectionMode: function () {\n    return this.options.multipleSelection ? this.getData() : this.getFullData();\n  },\n  _isNodeVisible: function (node) {\n    return false !== node.internalFields.item.visible;\n  },\n  _getByKey: function (data, key) {\n    return data === this._dataStructure ? this.options.dataConverter._getByKey(key) : this.options.dataConverter.getByKey(data, key);\n  },\n  _setChildrenSelection: function () {\n    var that = this;\n    (0, _iterator.each)(this._dataStructure, function (_, node) {\n      if (!node.internalFields.childrenKeys.length) {\n        return;\n      }\n\n      var isSelected = node.internalFields.selected;\n      true === isSelected && that._toggleChildrenSelection(node, isSelected);\n    });\n  },\n  _setParentSelection: function () {\n    var that = this;\n    (0, _iterator.each)(this._dataStructure, function (_, node) {\n      var parent = that.options.dataConverter.getParentNode(node);\n\n      if (parent && node.internalFields.parentKey !== that.options.rootValue) {\n        that._iterateParents(node, function (parent) {\n          var newParentState = that._calculateSelectedState(parent);\n\n          that._setFieldState(parent, SELECTED, newParentState);\n        });\n      }\n    });\n  },\n  _setParentExpansion: function () {\n    var that = this;\n    (0, _iterator.each)(this._dataStructure, function (_, node) {\n      if (!node.internalFields.expanded) {\n        return;\n      }\n\n      that._updateOneBranch(node.internalFields.key);\n    });\n  },\n  _updateOneBranch: function (key) {\n    var that = this;\n    var node = this.getNodeByKey(key);\n\n    that._iterateParents(node, function (parent) {\n      that._setFieldState(parent, EXPANDED, true);\n    });\n  },\n  _iterateChildren: function (node, recursive, callback, processedKeys) {\n    if (!(0, _type.isFunction)(callback)) {\n      return;\n    }\n\n    var that = this;\n    var nodeKey = node.internalFields.key;\n    processedKeys = processedKeys || [];\n\n    if (processedKeys.indexOf(nodeKey) === -1) {\n      processedKeys.push(nodeKey);\n      (0, _iterator.each)(node.internalFields.childrenKeys, function (_, key) {\n        var child = that.getNodeByKey(key);\n        callback(child);\n\n        if (child.internalFields.childrenKeys.length && recursive) {\n          that._iterateChildren(child, recursive, callback, processedKeys);\n        }\n      });\n    }\n  },\n  _iterateParents: function (node, callback, processedKeys) {\n    if (node.internalFields.parentKey === this.options.rootValue || !(0, _type.isFunction)(callback)) {\n      return;\n    }\n\n    processedKeys = processedKeys || [];\n    var key = node.internalFields.key;\n\n    if (processedKeys.indexOf(key) === -1) {\n      processedKeys.push(key);\n      var parent = this.options.dataConverter.getParentNode(node);\n\n      if (parent) {\n        callback(parent);\n\n        if (parent.internalFields.parentKey !== this.options.rootValue) {\n          this._iterateParents(parent, callback, processedKeys);\n        }\n      }\n    }\n  },\n  _calculateSelectedState: function (node) {\n    var itemsCount = node.internalFields.childrenKeys.length;\n    var selectedItemsCount = 0;\n    var invisibleItemsCount = 0;\n    var result = false;\n\n    for (var i = 0; i <= itemsCount - 1; i++) {\n      var childNode = this.getNodeByKey(node.internalFields.childrenKeys[i]);\n      var isChildInvisible = false === childNode.internalFields.item.visible;\n      var childState = childNode.internalFields.selected;\n\n      if (isChildInvisible) {\n        invisibleItemsCount++;\n        continue;\n      }\n\n      if (childState) {\n        selectedItemsCount++;\n      } else {\n        if (void 0 === childState) {\n          selectedItemsCount += .5;\n        }\n      }\n    }\n\n    if (selectedItemsCount) {\n      result = selectedItemsCount === itemsCount - invisibleItemsCount ? true : void 0;\n    }\n\n    return result;\n  },\n  _toggleChildrenSelection: function (node, state) {\n    var that = this;\n\n    this._iterateChildren(node, true, function (child) {\n      if (that._isNodeVisible(child)) {\n        that._setFieldState(child, SELECTED, state);\n      }\n    });\n  },\n  _setFieldState: function (node, field, state) {\n    if (node.internalFields[field] === state) {\n      return;\n    }\n\n    node.internalFields[field] = state;\n\n    if (node.internalFields.publicNode) {\n      node.internalFields.publicNode[field] = state;\n    }\n\n    this.options.dataAccessors.setters[field](node.internalFields.item, state);\n    this.options.onNodeChanged(node);\n  },\n  _markChildren: function (keys) {\n    var that = this;\n    (0, _iterator.each)(keys, function (_, key) {\n      var index = that.getIndexByKey(key);\n      var node = that.getNodeByKey(key);\n      that._dataStructure[index] = 0;\n      node.internalFields.childrenKeys.length && that._markChildren(node.internalFields.childrenKeys);\n    });\n  },\n  _removeNode: function (key) {\n    var node = this.getNodeByKey(key);\n    this._dataStructure[this.getIndexByKey(key)] = 0;\n\n    this._markChildren(node.internalFields.childrenKeys);\n\n    var that = this;\n    var counter = 0;\n    var items = (0, _extend.extend)([], this._dataStructure);\n    (0, _iterator.each)(items, function (index, item) {\n      if (!item) {\n        that._dataStructure.splice(index - counter, 1);\n\n        counter++;\n      }\n    });\n  },\n  _addNode: function (item) {\n    var dataConverter = this.options.dataConverter;\n\n    var node = dataConverter._convertItemToNode(item, this.options.dataAccessors.getters.parentKey(item));\n\n    this._dataStructure = this._dataStructure.concat(node);\n    this._initialDataStructure = this._initialDataStructure.concat(node);\n    dataConverter._dataStructure = dataConverter._dataStructure.concat(node);\n  },\n  _updateFields: function () {\n    this.options.dataConverter.updateChildrenKeys();\n\n    this._updateSelection();\n\n    this._updateExpansion();\n  },\n  getSelectedNodesKeys: function () {\n    return this._selectedNodesKeys;\n  },\n  getExpandedNodesKeys: function () {\n    return this._expandedNodesKeys;\n  },\n  getData: function () {\n    return this._dataStructure;\n  },\n  getFullData: function () {\n    return this._initialDataStructure;\n  },\n  getNodeByItem: function (item) {\n    var result = null;\n    (0, _iterator.each)(this._dataStructure, function (_, node) {\n      if (node.internalFields.item === item) {\n        result = node;\n        return false;\n      }\n    });\n    return result;\n  },\n  getNodesByItems: function (items) {\n    var that = this;\n    var nodes = [];\n    (0, _iterator.each)(items, function (_, item) {\n      var node = that.getNodeByItem(item);\n      node && nodes.push(node);\n    });\n    return nodes;\n  },\n  getNodeByKey: function (key, data) {\n    return this._getByKey(data || this._getDataBySelectionMode(), key);\n  },\n  getTreeNodes: function () {\n    return this.options.dataConverter.convertToPublicNodes(this.getRootNodes());\n  },\n  getItemsCount: function () {\n    return this.options.dataConverter.getItemsCount();\n  },\n  getVisibleItemsCount: function () {\n    return this.options.dataConverter.getVisibleItemsCount();\n  },\n  getPublicNode: function (node) {\n    return node.internalFields.publicNode;\n  },\n  getRootNodes: function () {\n    return this.getChildrenNodes(this.options.rootValue);\n  },\n  getChildrenNodes: function (parentKey) {\n    return (0, _query.default)(this._dataStructure).filter([\"internalFields.parentKey\", parentKey]).toArray();\n  },\n  getIndexByKey: function (key) {\n    return this.options.dataConverter.getIndexByKey(key);\n  },\n  addItem: function (item) {\n    this._addNode(item);\n\n    this._updateFields();\n  },\n  removeItem: function (key) {\n    this._removeNode(key);\n\n    this._updateFields();\n  },\n  toggleSelection: function (key, state, selectRecursive) {\n    var isSingleModeUnselect = this._isSingleModeUnselect(state);\n\n    var node = this._getByKey(selectRecursive || isSingleModeUnselect ? this._initialDataStructure : this._dataStructure, key);\n\n    this._setFieldState(node, SELECTED, state);\n\n    if (this.options.recursiveSelection && !selectRecursive) {\n      state ? this._setChildrenSelection() : this._toggleChildrenSelection(node, state);\n\n      this._setParentSelection();\n    }\n\n    this._selectedNodesKeys = this._updateNodesKeysArray(SELECTED);\n  },\n  _isSingleModeUnselect: function (selectionState) {\n    return !this.options.multipleSelection && !selectionState;\n  },\n  toggleNodeDisabledState: function (key, state) {\n    var node = this.getNodeByKey(key);\n\n    this._setFieldState(node, DISABLED, state);\n  },\n  toggleSelectAll: function (state) {\n    if (!(0, _type.isDefined)(state)) {\n      return;\n    }\n\n    var that = this;\n    var lastSelectedKey = that._selectedNodesKeys[that._selectedNodesKeys.length - 1];\n    var dataStructure = that._isSingleModeUnselect(state) ? this._initialDataStructure : this._dataStructure;\n    (0, _iterator.each)(dataStructure, function (index, node) {\n      if (!that._isNodeVisible(node)) {\n        return;\n      }\n\n      that._setFieldState(node, SELECTED, state);\n    });\n    that._selectedNodesKeys = that._updateNodesKeysArray(SELECTED);\n\n    if (!state && that.options.selectionRequired) {\n      that.toggleSelection(lastSelectedKey, true);\n    }\n  },\n  isAllSelected: function () {\n    if (this.getSelectedNodesKeys().length) {\n      return this.getSelectedNodesKeys().length === this.getVisibleItemsCount() ? true : void 0;\n    } else {\n      return false;\n    }\n  },\n  toggleExpansion: function (key, state) {\n    var node = this.getNodeByKey(key);\n\n    this._setFieldState(node, EXPANDED, state);\n\n    if (state) {\n      this._updateExpansion(key);\n    }\n\n    this._expandedNodesKeys = this._updateNodesKeysArray(EXPANDED);\n  },\n  isFiltered: function (item) {\n    return !this.options.searchValue.length || !!this._filterDataStructure(this.options.searchValue, [item]).length;\n  },\n  _createCriteria: function (selector, value, operation) {\n    var searchFilter = [];\n\n    if (!Array.isArray(selector)) {\n      return [selector, operation, value];\n    }\n\n    (0, _iterator.each)(selector, function (i, item) {\n      searchFilter.push([item, operation, value], \"or\");\n    });\n    searchFilter.pop();\n    return searchFilter;\n  },\n  _filterDataStructure: function (filterValue, dataStructure) {\n    var selector = this.options.searchExpr || this.options.dataAccessors.getters.display;\n\n    var operation = _ui2.default.getOperationBySearchMode(this.options.searchMode);\n\n    var criteria = this._createCriteria(selector, filterValue, operation);\n\n    dataStructure = dataStructure || this._initialDataStructure;\n    return (0, _query.default)(dataStructure).filter(criteria).toArray();\n  },\n  search: function (searchValue) {\n    var that = this;\n\n    var matches = this._filterDataStructure(searchValue);\n\n    var dataConverter = this.options.dataConverter;\n\n    function lookForParents(matches, index) {\n      var length = matches.length;\n\n      while (index < length) {\n        var node = matches[index];\n\n        if (node.internalFields.parentKey === that.options.rootValue) {\n          index++;\n          continue;\n        }\n\n        var parent = dataConverter.getParentNode(node);\n\n        if (!parent) {\n          _ui.default.log(\"W1007\", node.internalFields.parentKey, node.internalFields.key);\n\n          index++;\n          continue;\n        }\n\n        if (!parent.internalFields.expanded) {\n          that._setFieldState(parent, EXPANDED, true);\n        }\n\n        if ((0, _array.inArray)(parent, matches) > -1) {\n          index++;\n          continue;\n        }\n\n        matches.splice(index, 0, parent);\n        lookForParents(matches, index);\n      }\n    }\n\n    lookForParents(matches, 0);\n\n    if (this.options.sort) {\n      matches = _store_helper.default.queryByOptions((0, _query.default)(matches), {\n        sort: this.options.sort\n      }).toArray();\n    }\n\n    dataConverter._indexByKey = {};\n    (0, _iterator.each)(matches, function (index, node) {\n      node.internalFields.childrenKeys = [];\n      dataConverter._indexByKey[node.internalFields.key] = index;\n    });\n    dataConverter._dataStructure = matches;\n    dataConverter.setChildrenKeys();\n    return dataConverter._dataStructure;\n  }\n});\n\nvar _default = DataAdapter;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/node_modules/devextreme/ui/hierarchical_collection/ui.data_adapter.js"],"names":["exports","default","_class","_interopRequireDefault","require","_common","_iterator","_type","_extend","_ui","_ui2","_array","_query","_store_helper","_ui3","obj","__esModule","EXPANDED","SELECTED","DISABLED","DataAdapter","inherit","ctor","options","extend","_defaultOptions","dataConverter","setDataAccessors","dataAccessors","_selectedNodesKeys","_expandedNodesKeys","_dataStructure","_createInternalDataStructure","getTreeNodes","setOption","name","value","_updateSelection","items","multipleSelection","recursiveSelection","recursiveExpansion","rootValue","searchValue","dataType","searchMode","onNodeChanged","noop","sort","_initialDataStructure","createPlainStructure","length","search","_updateExpansion","_setChildrenSelection","_setParentSelection","_updateNodesKeysArray","key","_updateOneBranch","_setParentExpansion","property","that","array","each","_getDataBySelectionMode","_","node","_isNodeVisible","internalFields","push","toggleSelection","getData","getFullData","item","visible","_getByKey","data","getByKey","childrenKeys","isSelected","selected","_toggleChildrenSelection","parent","getParentNode","parentKey","_iterateParents","newParentState","_calculateSelectedState","_setFieldState","expanded","getNodeByKey","_iterateChildren","recursive","callback","processedKeys","isFunction","nodeKey","indexOf","child","itemsCount","selectedItemsCount","invisibleItemsCount","result","i","childNode","isChildInvisible","childState","state","field","publicNode","setters","_markChildren","keys","index","getIndexByKey","_removeNode","counter","splice","_addNode","_convertItemToNode","getters","concat","_updateFields","updateChildrenKeys","getSelectedNodesKeys","getExpandedNodesKeys","getNodeByItem","getNodesByItems","nodes","convertToPublicNodes","getRootNodes","getItemsCount","getVisibleItemsCount","getPublicNode","getChildrenNodes","filter","toArray","addItem","removeItem","selectRecursive","isSingleModeUnselect","_isSingleModeUnselect","selectionState","toggleNodeDisabledState","toggleSelectAll","isDefined","lastSelectedKey","dataStructure","selectionRequired","isAllSelected","toggleExpansion","isFiltered","_filterDataStructure","_createCriteria","selector","operation","searchFilter","Array","isArray","pop","filterValue","searchExpr","display","getOperationBySearchMode","criteria","matches","lookForParents","log","inArray","queryByOptions","_indexByKey","setChildrenKeys","_default","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/hierarchical_collection/ui.data_adapter.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _class = _interopRequireDefault(require(\"../../core/class\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _ui = _interopRequireDefault(require(\"../../ui/widget/ui.errors\"));\r\nvar _ui2 = _interopRequireDefault(require(\"../../ui/widget/ui.search_box_mixin\"));\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _query = _interopRequireDefault(require(\"../../data/query\"));\r\nvar _store_helper = _interopRequireDefault(require(\"../../data/store_helper\"));\r\nvar _ui3 = _interopRequireDefault(require(\"./ui.data_converter\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar EXPANDED = \"expanded\";\r\nvar SELECTED = \"selected\";\r\nvar DISABLED = \"disabled\";\r\nvar DataAdapter = _class.default.inherit({\r\n    ctor: function(options) {\r\n        this.options = {};\r\n        (0, _extend.extend)(this.options, this._defaultOptions(), options);\r\n        this.options.dataConverter.setDataAccessors(this.options.dataAccessors);\r\n        this._selectedNodesKeys = [];\r\n        this._expandedNodesKeys = [];\r\n        this._dataStructure = [];\r\n        this._createInternalDataStructure();\r\n        this.getTreeNodes()\r\n    },\r\n    setOption: function(name, value) {\r\n        this.options[name] = value;\r\n        if (\"recursiveSelection\" === name) {\r\n            this._updateSelection()\r\n        }\r\n    },\r\n    _defaultOptions: function() {\r\n        return {\r\n            dataAccessors: void 0,\r\n            items: [],\r\n            multipleSelection: true,\r\n            recursiveSelection: false,\r\n            recursiveExpansion: false,\r\n            rootValue: 0,\r\n            searchValue: \"\",\r\n            dataType: \"tree\",\r\n            searchMode: \"contains\",\r\n            dataConverter: new _ui3.default,\r\n            onNodeChanged: _common.noop,\r\n            sort: null\r\n        }\r\n    },\r\n    _createInternalDataStructure: function() {\r\n        this._initialDataStructure = this.options.dataConverter.createPlainStructure(this.options.items, this.options.rootValue, this.options.dataType);\r\n        this._dataStructure = this.options.searchValue.length ? this.search(this.options.searchValue) : this._initialDataStructure;\r\n        this.options.dataConverter._dataStructure = this._dataStructure;\r\n        this._updateSelection();\r\n        this._updateExpansion()\r\n    },\r\n    _updateSelection: function() {\r\n        if (this.options.recursiveSelection) {\r\n            this._setChildrenSelection();\r\n            this._setParentSelection()\r\n        }\r\n        this._selectedNodesKeys = this._updateNodesKeysArray(SELECTED)\r\n    },\r\n    _updateExpansion: function(key) {\r\n        if (this.options.recursiveExpansion) {\r\n            key ? this._updateOneBranch(key) : this._setParentExpansion()\r\n        }\r\n        this._expandedNodesKeys = this._updateNodesKeysArray(EXPANDED)\r\n    },\r\n    _updateNodesKeysArray: function(property) {\r\n        var that = this;\r\n        var array = [];\r\n        (0, _iterator.each)(that._getDataBySelectionMode(), function(_, node) {\r\n            if (!that._isNodeVisible(node)) {\r\n                return\r\n            }\r\n            if (node.internalFields[property]) {\r\n                if (property === EXPANDED || that.options.multipleSelection) {\r\n                    array.push(node.internalFields.key)\r\n                } else {\r\n                    array.length && that.toggleSelection(array[0], false, true);\r\n                    array = [node.internalFields.key]\r\n                }\r\n            }\r\n        });\r\n        return array\r\n    },\r\n    _getDataBySelectionMode: function() {\r\n        return this.options.multipleSelection ? this.getData() : this.getFullData()\r\n    },\r\n    _isNodeVisible: function(node) {\r\n        return false !== node.internalFields.item.visible\r\n    },\r\n    _getByKey: function(data, key) {\r\n        return data === this._dataStructure ? this.options.dataConverter._getByKey(key) : this.options.dataConverter.getByKey(data, key)\r\n    },\r\n    _setChildrenSelection: function() {\r\n        var that = this;\r\n        (0, _iterator.each)(this._dataStructure, function(_, node) {\r\n            if (!node.internalFields.childrenKeys.length) {\r\n                return\r\n            }\r\n            var isSelected = node.internalFields.selected;\r\n            true === isSelected && that._toggleChildrenSelection(node, isSelected)\r\n        })\r\n    },\r\n    _setParentSelection: function() {\r\n        var that = this;\r\n        (0, _iterator.each)(this._dataStructure, function(_, node) {\r\n            var parent = that.options.dataConverter.getParentNode(node);\r\n            if (parent && node.internalFields.parentKey !== that.options.rootValue) {\r\n                that._iterateParents(node, function(parent) {\r\n                    var newParentState = that._calculateSelectedState(parent);\r\n                    that._setFieldState(parent, SELECTED, newParentState)\r\n                })\r\n            }\r\n        })\r\n    },\r\n    _setParentExpansion: function() {\r\n        var that = this;\r\n        (0, _iterator.each)(this._dataStructure, function(_, node) {\r\n            if (!node.internalFields.expanded) {\r\n                return\r\n            }\r\n            that._updateOneBranch(node.internalFields.key)\r\n        })\r\n    },\r\n    _updateOneBranch: function(key) {\r\n        var that = this;\r\n        var node = this.getNodeByKey(key);\r\n        that._iterateParents(node, function(parent) {\r\n            that._setFieldState(parent, EXPANDED, true)\r\n        })\r\n    },\r\n    _iterateChildren: function(node, recursive, callback, processedKeys) {\r\n        if (!(0, _type.isFunction)(callback)) {\r\n            return\r\n        }\r\n        var that = this;\r\n        var nodeKey = node.internalFields.key;\r\n        processedKeys = processedKeys || [];\r\n        if (processedKeys.indexOf(nodeKey) === -1) {\r\n            processedKeys.push(nodeKey);\r\n            (0, _iterator.each)(node.internalFields.childrenKeys, function(_, key) {\r\n                var child = that.getNodeByKey(key);\r\n                callback(child);\r\n                if (child.internalFields.childrenKeys.length && recursive) {\r\n                    that._iterateChildren(child, recursive, callback, processedKeys)\r\n                }\r\n            })\r\n        }\r\n    },\r\n    _iterateParents: function(node, callback, processedKeys) {\r\n        if (node.internalFields.parentKey === this.options.rootValue || !(0, _type.isFunction)(callback)) {\r\n            return\r\n        }\r\n        processedKeys = processedKeys || [];\r\n        var key = node.internalFields.key;\r\n        if (processedKeys.indexOf(key) === -1) {\r\n            processedKeys.push(key);\r\n            var parent = this.options.dataConverter.getParentNode(node);\r\n            if (parent) {\r\n                callback(parent);\r\n                if (parent.internalFields.parentKey !== this.options.rootValue) {\r\n                    this._iterateParents(parent, callback, processedKeys)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _calculateSelectedState: function(node) {\r\n        var itemsCount = node.internalFields.childrenKeys.length;\r\n        var selectedItemsCount = 0;\r\n        var invisibleItemsCount = 0;\r\n        var result = false;\r\n        for (var i = 0; i <= itemsCount - 1; i++) {\r\n            var childNode = this.getNodeByKey(node.internalFields.childrenKeys[i]);\r\n            var isChildInvisible = false === childNode.internalFields.item.visible;\r\n            var childState = childNode.internalFields.selected;\r\n            if (isChildInvisible) {\r\n                invisibleItemsCount++;\r\n                continue\r\n            }\r\n            if (childState) {\r\n                selectedItemsCount++\r\n            } else {\r\n                if (void 0 === childState) {\r\n                    selectedItemsCount += .5\r\n                }\r\n            }\r\n        }\r\n        if (selectedItemsCount) {\r\n            result = selectedItemsCount === itemsCount - invisibleItemsCount ? true : void 0\r\n        }\r\n        return result\r\n    },\r\n    _toggleChildrenSelection: function(node, state) {\r\n        var that = this;\r\n        this._iterateChildren(node, true, function(child) {\r\n            if (that._isNodeVisible(child)) {\r\n                that._setFieldState(child, SELECTED, state)\r\n            }\r\n        })\r\n    },\r\n    _setFieldState: function(node, field, state) {\r\n        if (node.internalFields[field] === state) {\r\n            return\r\n        }\r\n        node.internalFields[field] = state;\r\n        if (node.internalFields.publicNode) {\r\n            node.internalFields.publicNode[field] = state\r\n        }\r\n        this.options.dataAccessors.setters[field](node.internalFields.item, state);\r\n        this.options.onNodeChanged(node)\r\n    },\r\n    _markChildren: function(keys) {\r\n        var that = this;\r\n        (0, _iterator.each)(keys, function(_, key) {\r\n            var index = that.getIndexByKey(key);\r\n            var node = that.getNodeByKey(key);\r\n            that._dataStructure[index] = 0;\r\n            node.internalFields.childrenKeys.length && that._markChildren(node.internalFields.childrenKeys)\r\n        })\r\n    },\r\n    _removeNode: function(key) {\r\n        var node = this.getNodeByKey(key);\r\n        this._dataStructure[this.getIndexByKey(key)] = 0;\r\n        this._markChildren(node.internalFields.childrenKeys);\r\n        var that = this;\r\n        var counter = 0;\r\n        var items = (0, _extend.extend)([], this._dataStructure);\r\n        (0, _iterator.each)(items, function(index, item) {\r\n            if (!item) {\r\n                that._dataStructure.splice(index - counter, 1);\r\n                counter++\r\n            }\r\n        })\r\n    },\r\n    _addNode: function(item) {\r\n        var dataConverter = this.options.dataConverter;\r\n        var node = dataConverter._convertItemToNode(item, this.options.dataAccessors.getters.parentKey(item));\r\n        this._dataStructure = this._dataStructure.concat(node);\r\n        this._initialDataStructure = this._initialDataStructure.concat(node);\r\n        dataConverter._dataStructure = dataConverter._dataStructure.concat(node)\r\n    },\r\n    _updateFields: function() {\r\n        this.options.dataConverter.updateChildrenKeys();\r\n        this._updateSelection();\r\n        this._updateExpansion()\r\n    },\r\n    getSelectedNodesKeys: function() {\r\n        return this._selectedNodesKeys\r\n    },\r\n    getExpandedNodesKeys: function() {\r\n        return this._expandedNodesKeys\r\n    },\r\n    getData: function() {\r\n        return this._dataStructure\r\n    },\r\n    getFullData: function() {\r\n        return this._initialDataStructure\r\n    },\r\n    getNodeByItem: function(item) {\r\n        var result = null;\r\n        (0, _iterator.each)(this._dataStructure, function(_, node) {\r\n            if (node.internalFields.item === item) {\r\n                result = node;\r\n                return false\r\n            }\r\n        });\r\n        return result\r\n    },\r\n    getNodesByItems: function(items) {\r\n        var that = this;\r\n        var nodes = [];\r\n        (0, _iterator.each)(items, function(_, item) {\r\n            var node = that.getNodeByItem(item);\r\n            node && nodes.push(node)\r\n        });\r\n        return nodes\r\n    },\r\n    getNodeByKey: function(key, data) {\r\n        return this._getByKey(data || this._getDataBySelectionMode(), key)\r\n    },\r\n    getTreeNodes: function() {\r\n        return this.options.dataConverter.convertToPublicNodes(this.getRootNodes())\r\n    },\r\n    getItemsCount: function() {\r\n        return this.options.dataConverter.getItemsCount()\r\n    },\r\n    getVisibleItemsCount: function() {\r\n        return this.options.dataConverter.getVisibleItemsCount()\r\n    },\r\n    getPublicNode: function(node) {\r\n        return node.internalFields.publicNode\r\n    },\r\n    getRootNodes: function() {\r\n        return this.getChildrenNodes(this.options.rootValue)\r\n    },\r\n    getChildrenNodes: function(parentKey) {\r\n        return (0, _query.default)(this._dataStructure).filter([\"internalFields.parentKey\", parentKey]).toArray()\r\n    },\r\n    getIndexByKey: function(key) {\r\n        return this.options.dataConverter.getIndexByKey(key)\r\n    },\r\n    addItem: function(item) {\r\n        this._addNode(item);\r\n        this._updateFields()\r\n    },\r\n    removeItem: function(key) {\r\n        this._removeNode(key);\r\n        this._updateFields()\r\n    },\r\n    toggleSelection: function(key, state, selectRecursive) {\r\n        var isSingleModeUnselect = this._isSingleModeUnselect(state);\r\n        var node = this._getByKey(selectRecursive || isSingleModeUnselect ? this._initialDataStructure : this._dataStructure, key);\r\n        this._setFieldState(node, SELECTED, state);\r\n        if (this.options.recursiveSelection && !selectRecursive) {\r\n            state ? this._setChildrenSelection() : this._toggleChildrenSelection(node, state);\r\n            this._setParentSelection()\r\n        }\r\n        this._selectedNodesKeys = this._updateNodesKeysArray(SELECTED)\r\n    },\r\n    _isSingleModeUnselect: function(selectionState) {\r\n        return !this.options.multipleSelection && !selectionState\r\n    },\r\n    toggleNodeDisabledState: function(key, state) {\r\n        var node = this.getNodeByKey(key);\r\n        this._setFieldState(node, DISABLED, state)\r\n    },\r\n    toggleSelectAll: function(state) {\r\n        if (!(0, _type.isDefined)(state)) {\r\n            return\r\n        }\r\n        var that = this;\r\n        var lastSelectedKey = that._selectedNodesKeys[that._selectedNodesKeys.length - 1];\r\n        var dataStructure = that._isSingleModeUnselect(state) ? this._initialDataStructure : this._dataStructure;\r\n        (0, _iterator.each)(dataStructure, function(index, node) {\r\n            if (!that._isNodeVisible(node)) {\r\n                return\r\n            }\r\n            that._setFieldState(node, SELECTED, state)\r\n        });\r\n        that._selectedNodesKeys = that._updateNodesKeysArray(SELECTED);\r\n        if (!state && that.options.selectionRequired) {\r\n            that.toggleSelection(lastSelectedKey, true)\r\n        }\r\n    },\r\n    isAllSelected: function() {\r\n        if (this.getSelectedNodesKeys().length) {\r\n            return this.getSelectedNodesKeys().length === this.getVisibleItemsCount() ? true : void 0\r\n        } else {\r\n            return false\r\n        }\r\n    },\r\n    toggleExpansion: function(key, state) {\r\n        var node = this.getNodeByKey(key);\r\n        this._setFieldState(node, EXPANDED, state);\r\n        if (state) {\r\n            this._updateExpansion(key)\r\n        }\r\n        this._expandedNodesKeys = this._updateNodesKeysArray(EXPANDED)\r\n    },\r\n    isFiltered: function(item) {\r\n        return !this.options.searchValue.length || !!this._filterDataStructure(this.options.searchValue, [item]).length\r\n    },\r\n    _createCriteria: function(selector, value, operation) {\r\n        var searchFilter = [];\r\n        if (!Array.isArray(selector)) {\r\n            return [selector, operation, value]\r\n        }(0, _iterator.each)(selector, function(i, item) {\r\n            searchFilter.push([item, operation, value], \"or\")\r\n        });\r\n        searchFilter.pop();\r\n        return searchFilter\r\n    },\r\n    _filterDataStructure: function(filterValue, dataStructure) {\r\n        var selector = this.options.searchExpr || this.options.dataAccessors.getters.display;\r\n        var operation = _ui2.default.getOperationBySearchMode(this.options.searchMode);\r\n        var criteria = this._createCriteria(selector, filterValue, operation);\r\n        dataStructure = dataStructure || this._initialDataStructure;\r\n        return (0, _query.default)(dataStructure).filter(criteria).toArray()\r\n    },\r\n    search: function(searchValue) {\r\n        var that = this;\r\n        var matches = this._filterDataStructure(searchValue);\r\n        var dataConverter = this.options.dataConverter;\r\n\r\n        function lookForParents(matches, index) {\r\n            var length = matches.length;\r\n            while (index < length) {\r\n                var node = matches[index];\r\n                if (node.internalFields.parentKey === that.options.rootValue) {\r\n                    index++;\r\n                    continue\r\n                }\r\n                var parent = dataConverter.getParentNode(node);\r\n                if (!parent) {\r\n                    _ui.default.log(\"W1007\", node.internalFields.parentKey, node.internalFields.key);\r\n                    index++;\r\n                    continue\r\n                }\r\n                if (!parent.internalFields.expanded) {\r\n                    that._setFieldState(parent, EXPANDED, true)\r\n                }\r\n                if ((0, _array.inArray)(parent, matches) > -1) {\r\n                    index++;\r\n                    continue\r\n                }\r\n                matches.splice(index, 0, parent);\r\n                lookForParents(matches, index)\r\n            }\r\n        }\r\n        lookForParents(matches, 0);\r\n        if (this.options.sort) {\r\n            matches = _store_helper.default.queryByOptions((0, _query.default)(matches), {\r\n                sort: this.options.sort\r\n            }).toArray()\r\n        }\r\n        dataConverter._indexByKey = {};\r\n        (0, _iterator.each)(matches, function(index, node) {\r\n            node.internalFields.childrenKeys = [];\r\n            dataConverter._indexByKey[node.internalFields.key] = index\r\n        });\r\n        dataConverter._dataStructure = matches;\r\n        dataConverter.setChildrenKeys();\r\n        return dataConverter._dataStructure\r\n    }\r\n});\r\nvar _default = DataAdapter;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}