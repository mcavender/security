{"ast":null,"code":"/**\r\n * DevExtreme (ui/shared/grouped_data_converter_mixin.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _type = require(\"../../core/utils/type\");\n\nvar isCorrectStructure = function (data) {\n  return Array.isArray(data) && data.every(function (item) {\n    var hasTwoFields = 2 === Object.keys(item).length;\n    var hasCorrectFields = \"key\" in item && \"items\" in item;\n    return hasTwoFields && hasCorrectFields && Array.isArray(item.items);\n  });\n};\n\nvar _default = {\n  _getSpecificDataSourceOption: function () {\n    var groupKey = \"key\";\n    var dataSource = this.option(\"dataSource\");\n    var hasSimpleItems = false;\n    var data = {};\n\n    if (this._getGroupedOption() && isCorrectStructure(dataSource)) {\n      data = dataSource.reduce(function (accumulator, item) {\n        var items = item.items.map(function (innerItem) {\n          if (!(0, _type.isObject)(innerItem)) {\n            innerItem = {\n              text: innerItem\n            };\n            hasSimpleItems = true;\n          }\n\n          if (!(groupKey in innerItem)) {\n            innerItem[groupKey] = item.key;\n          }\n\n          return innerItem;\n        });\n        return accumulator.concat(items);\n      }, []);\n      dataSource = {\n        store: {\n          type: \"array\",\n          data: data\n        },\n        group: {\n          selector: \"key\",\n          keepInitialKeyOrder: true\n        }\n      };\n\n      if (hasSimpleItems) {\n        dataSource.searchExpr = \"text\";\n      }\n    }\n\n    return dataSource;\n  }\n};\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/node_modules/devextreme/ui/shared/grouped_data_converter_mixin.js"],"names":["exports","default","_type","require","isCorrectStructure","data","Array","isArray","every","item","hasTwoFields","Object","keys","length","hasCorrectFields","items","_default","_getSpecificDataSourceOption","groupKey","dataSource","option","hasSimpleItems","_getGroupedOption","reduce","accumulator","map","innerItem","isObject","text","key","concat","store","type","group","selector","keepInitialKeyOrder","searchExpr","module"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,OAAO,CAACC,OAAR,GAAkB,KAAK,CAAvB;;AACA,IAAIC,KAAK,GAAGC,OAAO,CAAC,uBAAD,CAAnB;;AACA,IAAIC,kBAAkB,GAAG,UAASC,IAAT,EAAe;AACpC,SAAOC,KAAK,CAACC,OAAN,CAAcF,IAAd,KAAuBA,IAAI,CAACG,KAAL,CAAW,UAASC,IAAT,EAAe;AACpD,QAAIC,YAAY,GAAG,MAAMC,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkBI,MAA3C;AACA,QAAIC,gBAAgB,GAAG,SAASL,IAAT,IAAiB,WAAWA,IAAnD;AACA,WAAOC,YAAY,IAAII,gBAAhB,IAAoCR,KAAK,CAACC,OAAN,CAAcE,IAAI,CAACM,KAAnB,CAA3C;AACH,GAJ6B,CAA9B;AAKH,CAND;;AAOA,IAAIC,QAAQ,GAAG;AACXC,EAAAA,4BAA4B,EAAE,YAAW;AACrC,QAAIC,QAAQ,GAAG,KAAf;AACA,QAAIC,UAAU,GAAG,KAAKC,MAAL,CAAY,YAAZ,CAAjB;AACA,QAAIC,cAAc,GAAG,KAArB;AACA,QAAIhB,IAAI,GAAG,EAAX;;AACA,QAAI,KAAKiB,iBAAL,MAA4BlB,kBAAkB,CAACe,UAAD,CAAlD,EAAgE;AAC5Dd,MAAAA,IAAI,GAAGc,UAAU,CAACI,MAAX,CAAkB,UAASC,WAAT,EAAsBf,IAAtB,EAA4B;AACjD,YAAIM,KAAK,GAAGN,IAAI,CAACM,KAAL,CAAWU,GAAX,CAAe,UAASC,SAAT,EAAoB;AAC3C,cAAI,CAAC,CAAC,GAAGxB,KAAK,CAACyB,QAAV,EAAoBD,SAApB,CAAL,EAAqC;AACjCA,YAAAA,SAAS,GAAG;AACRE,cAAAA,IAAI,EAAEF;AADE,aAAZ;AAGAL,YAAAA,cAAc,GAAG,IAAjB;AACH;;AACD,cAAI,EAAEH,QAAQ,IAAIQ,SAAd,CAAJ,EAA8B;AAC1BA,YAAAA,SAAS,CAACR,QAAD,CAAT,GAAsBT,IAAI,CAACoB,GAA3B;AACH;;AACD,iBAAOH,SAAP;AACH,SAXW,CAAZ;AAYA,eAAOF,WAAW,CAACM,MAAZ,CAAmBf,KAAnB,CAAP;AACH,OAdM,EAcJ,EAdI,CAAP;AAeAI,MAAAA,UAAU,GAAG;AACTY,QAAAA,KAAK,EAAE;AACHC,UAAAA,IAAI,EAAE,OADH;AAEH3B,UAAAA,IAAI,EAAEA;AAFH,SADE;AAKT4B,QAAAA,KAAK,EAAE;AACHC,UAAAA,QAAQ,EAAE,KADP;AAEHC,UAAAA,mBAAmB,EAAE;AAFlB;AALE,OAAb;;AAUA,UAAId,cAAJ,EAAoB;AAChBF,QAAAA,UAAU,CAACiB,UAAX,GAAwB,MAAxB;AACH;AACJ;;AACD,WAAOjB,UAAP;AACH;AArCU,CAAf;AAuCAnB,OAAO,CAACC,OAAR,GAAkBe,QAAlB;AACAqB,MAAM,CAACrC,OAAP,GAAiBA,OAAO,CAACC,OAAzB","sourcesContent":["/**\r\n * DevExtreme (ui/shared/grouped_data_converter_mixin.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _type = require(\"../../core/utils/type\");\r\nvar isCorrectStructure = function(data) {\r\n    return Array.isArray(data) && data.every(function(item) {\r\n        var hasTwoFields = 2 === Object.keys(item).length;\r\n        var hasCorrectFields = \"key\" in item && \"items\" in item;\r\n        return hasTwoFields && hasCorrectFields && Array.isArray(item.items)\r\n    })\r\n};\r\nvar _default = {\r\n    _getSpecificDataSourceOption: function() {\r\n        var groupKey = \"key\";\r\n        var dataSource = this.option(\"dataSource\");\r\n        var hasSimpleItems = false;\r\n        var data = {};\r\n        if (this._getGroupedOption() && isCorrectStructure(dataSource)) {\r\n            data = dataSource.reduce(function(accumulator, item) {\r\n                var items = item.items.map(function(innerItem) {\r\n                    if (!(0, _type.isObject)(innerItem)) {\r\n                        innerItem = {\r\n                            text: innerItem\r\n                        };\r\n                        hasSimpleItems = true\r\n                    }\r\n                    if (!(groupKey in innerItem)) {\r\n                        innerItem[groupKey] = item.key\r\n                    }\r\n                    return innerItem\r\n                });\r\n                return accumulator.concat(items)\r\n            }, []);\r\n            dataSource = {\r\n                store: {\r\n                    type: \"array\",\r\n                    data: data\r\n                },\r\n                group: {\r\n                    selector: \"key\",\r\n                    keepInitialKeyOrder: true\r\n                }\r\n            };\r\n            if (hasSimpleItems) {\r\n                dataSource.searchExpr = \"text\"\r\n            }\r\n        }\r\n        return dataSource\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}