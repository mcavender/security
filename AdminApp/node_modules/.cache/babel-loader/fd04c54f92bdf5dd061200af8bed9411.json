{"ast":null,"code":"/**\r\n * DevExtreme (ui/number_box/number_box.base.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\n\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\n\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\n\nvar _common = require(\"../../core/utils/common\");\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _math = require(\"../../core/utils/math\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _array = require(\"../../core/utils/array\");\n\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\n\nvar _browser = _interopRequireDefault(require(\"../../core/utils/browser\"));\n\nvar _ui = _interopRequireDefault(require(\"../text_box/ui.text_editor\"));\n\nvar _index = require(\"../../events/utils/index\");\n\nvar _number_box = _interopRequireDefault(require(\"./number_box.spins\"));\n\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\n\nvar _deferred = require(\"../../core/utils/deferred\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar math = Math;\nvar WIDGET_CLASS = \"dx-numberbox\";\nvar FIREFOX_CONTROL_KEYS = [\"tab\", \"del\", \"backspace\", \"leftArrow\", \"rightArrow\", \"home\", \"end\", \"enter\"];\nvar FORCE_VALUECHANGE_EVENT_NAMESPACE = \"NumberBoxForceValueChange\";\n\nvar NumberBoxBase = _ui.default.inherit({\n  _supportedKeys: function () {\n    return (0, _extend.extend)(this.callBase(), {\n      upArrow: function (e) {\n        if (!(0, _index.isCommandKeyPressed)(e)) {\n          e.preventDefault();\n          e.stopPropagation();\n\n          this._spinUpChangeHandler(e);\n        }\n      },\n      downArrow: function (e) {\n        if (!(0, _index.isCommandKeyPressed)(e)) {\n          e.preventDefault();\n          e.stopPropagation();\n\n          this._spinDownChangeHandler(e);\n        }\n      },\n      enter: function () {}\n    });\n  },\n  _getDefaultOptions: function () {\n    return (0, _extend.extend)(this.callBase(), {\n      value: 0,\n      min: void 0,\n      max: void 0,\n      step: 1,\n      showSpinButtons: false,\n      useLargeSpinButtons: true,\n      mode: \"text\",\n      invalidValueMessage: _message.default.format(\"dxNumberBox-invalidValueMessage\"),\n      buttons: void 0\n    });\n  },\n  _getDefaultButtons: function () {\n    return this.callBase().concat([{\n      name: \"spins\",\n      Ctor: _number_box.default\n    }]);\n  },\n  _isSupportInputMode: function () {\n    var version = parseFloat(_browser.default.version);\n    return _browser.default.chrome && version >= 66 || _browser.default.safari && version >= 12 || _browser.default.msie && version >= 75;\n  },\n  _defaultOptionsRules: function () {\n    return this.callBase().concat([{\n      device: function () {\n        return _devices.default.real().generic && !_devices.default.isSimulator();\n      },\n      options: {\n        useLargeSpinButtons: false\n      }\n    }, {\n      device: function () {\n        return \"desktop\" !== _devices.default.real().deviceType && !this._isSupportInputMode();\n      }.bind(this),\n      options: {\n        mode: \"number\"\n      }\n    }]);\n  },\n  _initMarkup: function () {\n    this._renderSubmitElement();\n\n    this.$element().addClass(WIDGET_CLASS);\n    this.callBase();\n  },\n  _getDefaultAttributes: function () {\n    var attributes = this.callBase();\n    attributes.inputmode = \"decimal\";\n    return attributes;\n  },\n  _renderContentImpl: function () {\n    this.option(\"isValid\") && this._validateValue(this.option(\"value\"));\n    this.setAria(\"role\", \"spinbutton\");\n  },\n  _renderSubmitElement: function () {\n    this._$submitElement = (0, _renderer.default)(\"<input>\").attr(\"type\", \"hidden\").appendTo(this.$element());\n\n    this._setSubmitValue(this.option(\"value\"));\n  },\n  _setSubmitValue: function (value) {\n    this._getSubmitElement().val((0, _common.applyServerDecimalSeparator)(value));\n  },\n  _getSubmitElement: function () {\n    return this._$submitElement;\n  },\n  _keyPressHandler: function (e) {\n    this.callBase(e);\n    var char = (0, _index.getChar)(e);\n    var validCharRegExp = /[\\d.,eE\\-+]|Subtract/;\n    var isInputCharValid = validCharRegExp.test(char);\n\n    if (!isInputCharValid) {\n      var keyName = (0, _index.normalizeKeyName)(e);\n\n      if ((0, _index.isCommandKeyPressed)(e) || keyName && (0, _array.inArray)(keyName, FIREFOX_CONTROL_KEYS) >= 0) {\n        return;\n      }\n\n      e.preventDefault();\n      return false;\n    }\n\n    this._keyPressed = true;\n  },\n  _onMouseWheel: function (dxEvent) {\n    dxEvent.delta > 0 ? this._spinValueChange(1, dxEvent) : this._spinValueChange(-1, dxEvent);\n  },\n  _renderValue: function () {\n    var inputValue = this._input().val();\n\n    var value = this.option(\"value\");\n\n    if (!inputValue.length || Number(inputValue) !== value) {\n      this._forceValueRender();\n\n      this._toggleEmptinessEventHandler();\n    }\n\n    var valueText = (0, _type.isDefined)(value) ? null : _message.default.format(\"dxNumberBox-noDataText\");\n    this.setAria({\n      valuenow: (0, _common.ensureDefined)(value, \"\"),\n      valuetext: valueText\n    });\n    this.option(\"text\", this._input().val());\n\n    this._updateButtons();\n\n    return new _deferred.Deferred().resolve();\n  },\n  _forceValueRender: function () {\n    var value = this.option(\"value\");\n    var number = Number(value);\n    var formattedValue = isNaN(number) ? \"\" : this._applyDisplayValueFormatter(value);\n\n    this._renderDisplayText(formattedValue);\n  },\n  _applyDisplayValueFormatter: function (value) {\n    return this.option(\"displayValueFormatter\")(value);\n  },\n  _renderProps: function () {\n    this.callBase();\n\n    this._input().prop({\n      min: this.option(\"min\"),\n      max: this.option(\"max\"),\n      step: this.option(\"step\")\n    });\n\n    this.setAria({\n      valuemin: (0, _common.ensureDefined)(this.option(\"min\"), \"\"),\n      valuemax: (0, _common.ensureDefined)(this.option(\"max\"), \"\")\n    });\n  },\n  _spinButtonsPointerDownHandler: function () {\n    var $input = this._input();\n\n    if (!this.option(\"useLargeSpinButtons\") && _dom_adapter.default.getActiveElement() !== $input[0]) {\n      _events_engine.default.trigger($input, \"focus\");\n    }\n  },\n  _spinUpChangeHandler: function (e) {\n    if (!this.option(\"readOnly\")) {\n      this._spinValueChange(1, e.event || e);\n    }\n  },\n  _spinDownChangeHandler: function (e) {\n    if (!this.option(\"readOnly\")) {\n      this._spinValueChange(-1, e.event || e);\n    }\n  },\n  _spinValueChange: function (sign, dxEvent) {\n    var step = parseFloat(this.option(\"step\"));\n\n    if (0 === step) {\n      return;\n    }\n\n    var value = parseFloat(this._normalizeInputValue()) || 0;\n    value = this._correctRounding(value, step * sign);\n    var min = this.option(\"min\");\n    var max = this.option(\"max\");\n\n    if ((0, _type.isDefined)(min)) {\n      value = Math.max(min, value);\n    }\n\n    if ((0, _type.isDefined)(max)) {\n      value = Math.min(max, value);\n    }\n\n    this._saveValueChangeEvent(dxEvent);\n\n    this.option(\"value\", value);\n  },\n  _correctRounding: function (value, step) {\n    var regex = /[,.](.*)/;\n    var isFloatValue = regex.test(value);\n    var isFloatStep = regex.test(step);\n\n    if (isFloatValue || isFloatStep) {\n      var valueAccuracy = isFloatValue ? regex.exec(value)[0].length : 0;\n      var stepAccuracy = isFloatStep ? regex.exec(step)[0].length : 0;\n      var accuracy = math.max(valueAccuracy, stepAccuracy);\n      value = this._round(value + step, accuracy);\n      return value;\n    }\n\n    return value + step;\n  },\n  _round: function (value, precision) {\n    precision = precision || 0;\n    var multiplier = Math.pow(10, precision);\n    value *= multiplier;\n    value = Math.round(value) / multiplier;\n    return value;\n  },\n  _renderValueChangeEvent: function () {\n    this.callBase();\n    var forceValueChangeEvent = (0, _index.addNamespace)(\"focusout\", FORCE_VALUECHANGE_EVENT_NAMESPACE);\n\n    _events_engine.default.off(this.element(), forceValueChangeEvent);\n\n    _events_engine.default.on(this.element(), forceValueChangeEvent, this._forceRefreshInputValue.bind(this));\n  },\n  _forceRefreshInputValue: function () {\n    if (\"number\" === this.option(\"mode\")) {\n      return;\n    }\n\n    var $input = this._input();\n\n    var formattedValue = this._applyDisplayValueFormatter(this.option(\"value\"));\n\n    $input.val(null);\n    $input.val(formattedValue);\n  },\n  _valueChangeEventHandler: function (e) {\n    var $input = this._input();\n\n    var inputValue = this._normalizeText();\n\n    var value = this._parseValue(inputValue);\n\n    var valueHasDigits = \".\" !== inputValue && \"-\" !== inputValue;\n\n    if (this._isValueValid() && !this._validateValue(value)) {\n      $input.val(this._applyDisplayValueFormatter(value));\n      return;\n    }\n\n    if (valueHasDigits) {\n      this.callBase(e, isNaN(value) ? null : value);\n    }\n\n    this._applyValueBoundaries(inputValue, value);\n\n    this.validationRequest.fire({\n      value: value,\n      editor: this\n    });\n  },\n  _applyValueBoundaries: function (inputValue, parsedValue) {\n    var isValueIncomplete = this._isValueIncomplete(inputValue);\n\n    var isValueCorrect = this._isValueInRange(inputValue);\n\n    if (!isValueIncomplete && !isValueCorrect && null !== parsedValue) {\n      if (Number(inputValue) !== parsedValue) {\n        this._input().val(this._applyDisplayValueFormatter(parsedValue));\n      }\n    }\n  },\n  _replaceCommaWithPoint: function (value) {\n    return value.replace(\",\", \".\");\n  },\n  _inputIsInvalid: function () {\n    var isNumberMode = \"number\" === this.option(\"mode\");\n\n    var validityState = this._input().get(0).validity;\n\n    return isNumberMode && validityState && validityState.badInput;\n  },\n  _renderDisplayText: function (text) {\n    if (this._inputIsInvalid()) {\n      return;\n    }\n\n    this.callBase(text);\n  },\n  _isValueIncomplete: function (value) {\n    var incompleteRegex = /(^-$)|(^-?\\d*\\.$)|(\\d+e-?$)/i;\n    return incompleteRegex.test(value);\n  },\n  _isValueInRange: function (value) {\n    return (0, _math.inRange)(value, this.option(\"min\"), this.option(\"max\"));\n  },\n  _isNumber: function (value) {\n    return null !== this._parseValue(value);\n  },\n  _validateValue: function (value) {\n    var inputValue = this._normalizeText();\n\n    var isValueValid = this._isValueValid();\n\n    var isValid = true;\n\n    var isNumber = this._isNumber(inputValue);\n\n    if (isNaN(Number(value))) {\n      isValid = false;\n    }\n\n    if (!value && isValueValid) {\n      isValid = true;\n    } else {\n      if (!isNumber && !isValueValid) {\n        isValid = false;\n      }\n    }\n\n    this.option({\n      isValid: isValid,\n      validationError: isValid ? null : {\n        editorSpecific: true,\n        message: this.option(\"invalidValueMessage\")\n      }\n    });\n    return isValid;\n  },\n  _normalizeInputValue: function () {\n    return this._parseValue(this._normalizeText());\n  },\n  _normalizeText: function () {\n    var value = this._input().val().trim();\n\n    return this._replaceCommaWithPoint(value);\n  },\n  _parseValue: function (value) {\n    var number = parseFloat(value);\n\n    if (isNaN(number)) {\n      return null;\n    }\n\n    return (0, _math.fitIntoRange)(number, this.option(\"min\"), this.option(\"max\"));\n  },\n  _clearValue: function () {\n    if (this._inputIsInvalid()) {\n      this._input().val(\"\");\n\n      this._validateValue();\n    }\n\n    this.callBase();\n  },\n  reset: function () {\n    if (null === this.option(\"value\")) {\n      this.option(\"text\", \"\");\n\n      this._renderValue();\n    } else {\n      this.option(\"value\", null);\n    }\n  },\n  _optionChanged: function (args) {\n    switch (args.name) {\n      case \"value\":\n        this._validateValue(args.value);\n\n        this._setSubmitValue(args.value);\n\n        this.callBase(args);\n\n        this._resumeValueChangeAction();\n\n        break;\n\n      case \"step\":\n        this._renderProps();\n\n        break;\n\n      case \"min\":\n      case \"max\":\n        this._renderProps();\n\n        this.option(\"value\", this._parseValue(this.option(\"value\")));\n        break;\n\n      case \"showSpinButtons\":\n      case \"useLargeSpinButtons\":\n        this._updateButtons([\"spins\"]);\n\n        break;\n\n      case \"invalidValueMessage\":\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  }\n});\n\nvar _default = NumberBoxBase;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/node_modules/devextreme/ui/number_box/number_box.base.js"],"names":["exports","default","_renderer","_interopRequireDefault","require","_dom_adapter","_events_engine","_common","_type","_math","_extend","_array","_devices","_browser","_ui","_index","_number_box","_message","_deferred","obj","__esModule","math","Math","WIDGET_CLASS","FIREFOX_CONTROL_KEYS","FORCE_VALUECHANGE_EVENT_NAMESPACE","NumberBoxBase","inherit","_supportedKeys","extend","callBase","upArrow","e","isCommandKeyPressed","preventDefault","stopPropagation","_spinUpChangeHandler","downArrow","_spinDownChangeHandler","enter","_getDefaultOptions","value","min","max","step","showSpinButtons","useLargeSpinButtons","mode","invalidValueMessage","format","buttons","_getDefaultButtons","concat","name","Ctor","_isSupportInputMode","version","parseFloat","chrome","safari","msie","_defaultOptionsRules","device","real","generic","isSimulator","options","deviceType","bind","_initMarkup","_renderSubmitElement","$element","addClass","_getDefaultAttributes","attributes","inputmode","_renderContentImpl","option","_validateValue","setAria","_$submitElement","attr","appendTo","_setSubmitValue","_getSubmitElement","val","applyServerDecimalSeparator","_keyPressHandler","char","getChar","validCharRegExp","isInputCharValid","test","keyName","normalizeKeyName","inArray","_keyPressed","_onMouseWheel","dxEvent","delta","_spinValueChange","_renderValue","inputValue","_input","length","Number","_forceValueRender","_toggleEmptinessEventHandler","valueText","isDefined","valuenow","ensureDefined","valuetext","_updateButtons","Deferred","resolve","number","formattedValue","isNaN","_applyDisplayValueFormatter","_renderDisplayText","_renderProps","prop","valuemin","valuemax","_spinButtonsPointerDownHandler","$input","getActiveElement","trigger","event","sign","_normalizeInputValue","_correctRounding","_saveValueChangeEvent","regex","isFloatValue","isFloatStep","valueAccuracy","exec","stepAccuracy","accuracy","_round","precision","multiplier","pow","round","_renderValueChangeEvent","forceValueChangeEvent","addNamespace","off","element","on","_forceRefreshInputValue","_valueChangeEventHandler","_normalizeText","_parseValue","valueHasDigits","_isValueValid","_applyValueBoundaries","validationRequest","fire","editor","parsedValue","isValueIncomplete","_isValueIncomplete","isValueCorrect","_isValueInRange","_replaceCommaWithPoint","replace","_inputIsInvalid","isNumberMode","validityState","get","validity","badInput","text","incompleteRegex","inRange","_isNumber","isValueValid","isValid","isNumber","validationError","editorSpecific","message","trim","fitIntoRange","_clearValue","reset","_optionChanged","args","_resumeValueChangeAction","_default","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/number_box/number_box.base.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _math = require(\"../../core/utils/math\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\r\nvar _browser = _interopRequireDefault(require(\"../../core/utils/browser\"));\r\nvar _ui = _interopRequireDefault(require(\"../text_box/ui.text_editor\"));\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _number_box = _interopRequireDefault(require(\"./number_box.spins\"));\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar math = Math;\r\nvar WIDGET_CLASS = \"dx-numberbox\";\r\nvar FIREFOX_CONTROL_KEYS = [\"tab\", \"del\", \"backspace\", \"leftArrow\", \"rightArrow\", \"home\", \"end\", \"enter\"];\r\nvar FORCE_VALUECHANGE_EVENT_NAMESPACE = \"NumberBoxForceValueChange\";\r\nvar NumberBoxBase = _ui.default.inherit({\r\n    _supportedKeys: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            upArrow: function(e) {\r\n                if (!(0, _index.isCommandKeyPressed)(e)) {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                    this._spinUpChangeHandler(e)\r\n                }\r\n            },\r\n            downArrow: function(e) {\r\n                if (!(0, _index.isCommandKeyPressed)(e)) {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                    this._spinDownChangeHandler(e)\r\n                }\r\n            },\r\n            enter: function() {}\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            value: 0,\r\n            min: void 0,\r\n            max: void 0,\r\n            step: 1,\r\n            showSpinButtons: false,\r\n            useLargeSpinButtons: true,\r\n            mode: \"text\",\r\n            invalidValueMessage: _message.default.format(\"dxNumberBox-invalidValueMessage\"),\r\n            buttons: void 0\r\n        })\r\n    },\r\n    _getDefaultButtons: function() {\r\n        return this.callBase().concat([{\r\n            name: \"spins\",\r\n            Ctor: _number_box.default\r\n        }])\r\n    },\r\n    _isSupportInputMode: function() {\r\n        var version = parseFloat(_browser.default.version);\r\n        return _browser.default.chrome && version >= 66 || _browser.default.safari && version >= 12 || _browser.default.msie && version >= 75\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return _devices.default.real().generic && !_devices.default.isSimulator()\r\n            },\r\n            options: {\r\n                useLargeSpinButtons: false\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return \"desktop\" !== _devices.default.real().deviceType && !this._isSupportInputMode()\r\n            }.bind(this),\r\n            options: {\r\n                mode: \"number\"\r\n            }\r\n        }])\r\n    },\r\n    _initMarkup: function() {\r\n        this._renderSubmitElement();\r\n        this.$element().addClass(WIDGET_CLASS);\r\n        this.callBase()\r\n    },\r\n    _getDefaultAttributes: function() {\r\n        var attributes = this.callBase();\r\n        attributes.inputmode = \"decimal\";\r\n        return attributes\r\n    },\r\n    _renderContentImpl: function() {\r\n        this.option(\"isValid\") && this._validateValue(this.option(\"value\"));\r\n        this.setAria(\"role\", \"spinbutton\")\r\n    },\r\n    _renderSubmitElement: function() {\r\n        this._$submitElement = (0, _renderer.default)(\"<input>\").attr(\"type\", \"hidden\").appendTo(this.$element());\r\n        this._setSubmitValue(this.option(\"value\"))\r\n    },\r\n    _setSubmitValue: function(value) {\r\n        this._getSubmitElement().val((0, _common.applyServerDecimalSeparator)(value))\r\n    },\r\n    _getSubmitElement: function() {\r\n        return this._$submitElement\r\n    },\r\n    _keyPressHandler: function(e) {\r\n        this.callBase(e);\r\n        var char = (0, _index.getChar)(e);\r\n        var validCharRegExp = /[\\d.,eE\\-+]|Subtract/;\r\n        var isInputCharValid = validCharRegExp.test(char);\r\n        if (!isInputCharValid) {\r\n            var keyName = (0, _index.normalizeKeyName)(e);\r\n            if ((0, _index.isCommandKeyPressed)(e) || keyName && (0, _array.inArray)(keyName, FIREFOX_CONTROL_KEYS) >= 0) {\r\n                return\r\n            }\r\n            e.preventDefault();\r\n            return false\r\n        }\r\n        this._keyPressed = true\r\n    },\r\n    _onMouseWheel: function(dxEvent) {\r\n        dxEvent.delta > 0 ? this._spinValueChange(1, dxEvent) : this._spinValueChange(-1, dxEvent)\r\n    },\r\n    _renderValue: function() {\r\n        var inputValue = this._input().val();\r\n        var value = this.option(\"value\");\r\n        if (!inputValue.length || Number(inputValue) !== value) {\r\n            this._forceValueRender();\r\n            this._toggleEmptinessEventHandler()\r\n        }\r\n        var valueText = (0, _type.isDefined)(value) ? null : _message.default.format(\"dxNumberBox-noDataText\");\r\n        this.setAria({\r\n            valuenow: (0, _common.ensureDefined)(value, \"\"),\r\n            valuetext: valueText\r\n        });\r\n        this.option(\"text\", this._input().val());\r\n        this._updateButtons();\r\n        return (new _deferred.Deferred).resolve()\r\n    },\r\n    _forceValueRender: function() {\r\n        var value = this.option(\"value\");\r\n        var number = Number(value);\r\n        var formattedValue = isNaN(number) ? \"\" : this._applyDisplayValueFormatter(value);\r\n        this._renderDisplayText(formattedValue)\r\n    },\r\n    _applyDisplayValueFormatter: function(value) {\r\n        return this.option(\"displayValueFormatter\")(value)\r\n    },\r\n    _renderProps: function() {\r\n        this.callBase();\r\n        this._input().prop({\r\n            min: this.option(\"min\"),\r\n            max: this.option(\"max\"),\r\n            step: this.option(\"step\")\r\n        });\r\n        this.setAria({\r\n            valuemin: (0, _common.ensureDefined)(this.option(\"min\"), \"\"),\r\n            valuemax: (0, _common.ensureDefined)(this.option(\"max\"), \"\")\r\n        })\r\n    },\r\n    _spinButtonsPointerDownHandler: function() {\r\n        var $input = this._input();\r\n        if (!this.option(\"useLargeSpinButtons\") && _dom_adapter.default.getActiveElement() !== $input[0]) {\r\n            _events_engine.default.trigger($input, \"focus\")\r\n        }\r\n    },\r\n    _spinUpChangeHandler: function(e) {\r\n        if (!this.option(\"readOnly\")) {\r\n            this._spinValueChange(1, e.event || e)\r\n        }\r\n    },\r\n    _spinDownChangeHandler: function(e) {\r\n        if (!this.option(\"readOnly\")) {\r\n            this._spinValueChange(-1, e.event || e)\r\n        }\r\n    },\r\n    _spinValueChange: function(sign, dxEvent) {\r\n        var step = parseFloat(this.option(\"step\"));\r\n        if (0 === step) {\r\n            return\r\n        }\r\n        var value = parseFloat(this._normalizeInputValue()) || 0;\r\n        value = this._correctRounding(value, step * sign);\r\n        var min = this.option(\"min\");\r\n        var max = this.option(\"max\");\r\n        if ((0, _type.isDefined)(min)) {\r\n            value = Math.max(min, value)\r\n        }\r\n        if ((0, _type.isDefined)(max)) {\r\n            value = Math.min(max, value)\r\n        }\r\n        this._saveValueChangeEvent(dxEvent);\r\n        this.option(\"value\", value)\r\n    },\r\n    _correctRounding: function(value, step) {\r\n        var regex = /[,.](.*)/;\r\n        var isFloatValue = regex.test(value);\r\n        var isFloatStep = regex.test(step);\r\n        if (isFloatValue || isFloatStep) {\r\n            var valueAccuracy = isFloatValue ? regex.exec(value)[0].length : 0;\r\n            var stepAccuracy = isFloatStep ? regex.exec(step)[0].length : 0;\r\n            var accuracy = math.max(valueAccuracy, stepAccuracy);\r\n            value = this._round(value + step, accuracy);\r\n            return value\r\n        }\r\n        return value + step\r\n    },\r\n    _round: function(value, precision) {\r\n        precision = precision || 0;\r\n        var multiplier = Math.pow(10, precision);\r\n        value *= multiplier;\r\n        value = Math.round(value) / multiplier;\r\n        return value\r\n    },\r\n    _renderValueChangeEvent: function() {\r\n        this.callBase();\r\n        var forceValueChangeEvent = (0, _index.addNamespace)(\"focusout\", FORCE_VALUECHANGE_EVENT_NAMESPACE);\r\n        _events_engine.default.off(this.element(), forceValueChangeEvent);\r\n        _events_engine.default.on(this.element(), forceValueChangeEvent, this._forceRefreshInputValue.bind(this))\r\n    },\r\n    _forceRefreshInputValue: function() {\r\n        if (\"number\" === this.option(\"mode\")) {\r\n            return\r\n        }\r\n        var $input = this._input();\r\n        var formattedValue = this._applyDisplayValueFormatter(this.option(\"value\"));\r\n        $input.val(null);\r\n        $input.val(formattedValue)\r\n    },\r\n    _valueChangeEventHandler: function(e) {\r\n        var $input = this._input();\r\n        var inputValue = this._normalizeText();\r\n        var value = this._parseValue(inputValue);\r\n        var valueHasDigits = \".\" !== inputValue && \"-\" !== inputValue;\r\n        if (this._isValueValid() && !this._validateValue(value)) {\r\n            $input.val(this._applyDisplayValueFormatter(value));\r\n            return\r\n        }\r\n        if (valueHasDigits) {\r\n            this.callBase(e, isNaN(value) ? null : value)\r\n        }\r\n        this._applyValueBoundaries(inputValue, value);\r\n        this.validationRequest.fire({\r\n            value: value,\r\n            editor: this\r\n        })\r\n    },\r\n    _applyValueBoundaries: function(inputValue, parsedValue) {\r\n        var isValueIncomplete = this._isValueIncomplete(inputValue);\r\n        var isValueCorrect = this._isValueInRange(inputValue);\r\n        if (!isValueIncomplete && !isValueCorrect && null !== parsedValue) {\r\n            if (Number(inputValue) !== parsedValue) {\r\n                this._input().val(this._applyDisplayValueFormatter(parsedValue))\r\n            }\r\n        }\r\n    },\r\n    _replaceCommaWithPoint: function(value) {\r\n        return value.replace(\",\", \".\")\r\n    },\r\n    _inputIsInvalid: function() {\r\n        var isNumberMode = \"number\" === this.option(\"mode\");\r\n        var validityState = this._input().get(0).validity;\r\n        return isNumberMode && validityState && validityState.badInput\r\n    },\r\n    _renderDisplayText: function(text) {\r\n        if (this._inputIsInvalid()) {\r\n            return\r\n        }\r\n        this.callBase(text)\r\n    },\r\n    _isValueIncomplete: function(value) {\r\n        var incompleteRegex = /(^-$)|(^-?\\d*\\.$)|(\\d+e-?$)/i;\r\n        return incompleteRegex.test(value)\r\n    },\r\n    _isValueInRange: function(value) {\r\n        return (0, _math.inRange)(value, this.option(\"min\"), this.option(\"max\"))\r\n    },\r\n    _isNumber: function(value) {\r\n        return null !== this._parseValue(value)\r\n    },\r\n    _validateValue: function(value) {\r\n        var inputValue = this._normalizeText();\r\n        var isValueValid = this._isValueValid();\r\n        var isValid = true;\r\n        var isNumber = this._isNumber(inputValue);\r\n        if (isNaN(Number(value))) {\r\n            isValid = false\r\n        }\r\n        if (!value && isValueValid) {\r\n            isValid = true\r\n        } else {\r\n            if (!isNumber && !isValueValid) {\r\n                isValid = false\r\n            }\r\n        }\r\n        this.option({\r\n            isValid: isValid,\r\n            validationError: isValid ? null : {\r\n                editorSpecific: true,\r\n                message: this.option(\"invalidValueMessage\")\r\n            }\r\n        });\r\n        return isValid\r\n    },\r\n    _normalizeInputValue: function() {\r\n        return this._parseValue(this._normalizeText())\r\n    },\r\n    _normalizeText: function() {\r\n        var value = this._input().val().trim();\r\n        return this._replaceCommaWithPoint(value)\r\n    },\r\n    _parseValue: function(value) {\r\n        var number = parseFloat(value);\r\n        if (isNaN(number)) {\r\n            return null\r\n        }\r\n        return (0, _math.fitIntoRange)(number, this.option(\"min\"), this.option(\"max\"))\r\n    },\r\n    _clearValue: function() {\r\n        if (this._inputIsInvalid()) {\r\n            this._input().val(\"\");\r\n            this._validateValue()\r\n        }\r\n        this.callBase()\r\n    },\r\n    reset: function() {\r\n        if (null === this.option(\"value\")) {\r\n            this.option(\"text\", \"\");\r\n            this._renderValue()\r\n        } else {\r\n            this.option(\"value\", null)\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"value\":\r\n                this._validateValue(args.value);\r\n                this._setSubmitValue(args.value);\r\n                this.callBase(args);\r\n                this._resumeValueChangeAction();\r\n                break;\r\n            case \"step\":\r\n                this._renderProps();\r\n                break;\r\n            case \"min\":\r\n            case \"max\":\r\n                this._renderProps();\r\n                this.option(\"value\", this._parseValue(this.option(\"value\")));\r\n                break;\r\n            case \"showSpinButtons\":\r\n            case \"useLargeSpinButtons\":\r\n                this._updateButtons([\"spins\"]);\r\n                break;\r\n            case \"invalidValueMessage\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nvar _default = NumberBoxBase;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}