{"ast":null,"code":"/**\r\n * DevExtreme (ui/data_grid/ui.data_grid.grouping.core.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.createOffsetFilter = createOffsetFilter;\nexports.GroupingHelper = void 0;\n\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\n\nvar _class = _interopRequireDefault(require(\"../../core/class\"));\n\nvar _uiData_grid = _interopRequireDefault(require(\"./ui.data_grid.core\"));\n\nvar _utils = _interopRequireDefault(require(\"../../data/utils\"));\n\nvar _deferred = require(\"../../core/utils/deferred\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction createOffsetFilter(path, storeLoadOptions) {\n  var groups = _utils.default.normalizeSortingInfo(storeLoadOptions.group);\n\n  var filter = [];\n\n  for (var i = 0; i < path.length; i++) {\n    var filterElement = [];\n\n    for (var j = 0; j <= i; j++) {\n      var selector = groups[j].selector;\n\n      if (i === j && (null === path[j] || false === path[j] || true === path[j])) {\n        if (false === path[j]) {\n          filterElement.push([selector, \"=\", groups[j].desc ? true : null]);\n        } else {\n          if (path[j] ? !groups[j].desc : groups[j].desc) {\n            filterElement.push([selector, \"<>\", path[j]]);\n          } else {\n            filterElement.push([selector, \"<>\", null]);\n            filterElement.push([selector, \"=\", null]);\n          }\n        }\n      } else {\n        var currentFilter = [selector, i === j ? groups[j].desc ? \">\" : \"<\" : \"=\", path[j]];\n\n        if (\"<\" === currentFilter[1]) {\n          filterElement.push([currentFilter, \"or\", [selector, \"=\", null]]);\n        } else {\n          filterElement.push(currentFilter);\n        }\n      }\n    }\n\n    filter.push(_uiData_grid.default.combineFilters(filterElement));\n  }\n\n  filter = _uiData_grid.default.combineFilters(filter, \"or\");\n  return _uiData_grid.default.combineFilters([filter, storeLoadOptions.filter]);\n}\n\nvar GroupingHelper = _class.default.inherit(function () {\n  var findGroupInfoByKey = function (groupsInfo, key) {\n    var hash = groupsInfo.hash;\n    return hash && hash[JSON.stringify(key)];\n  };\n\n  var getGroupInfoIndexByOffset = function (groupsInfo, offset) {\n    var leftIndex = 0;\n    var rightIndex = groupsInfo.length - 1;\n\n    if (!groupsInfo.length) {\n      return 0;\n    }\n\n    do {\n      var middleIndex = rightIndex + leftIndex >> 1;\n\n      if (groupsInfo[middleIndex].offset > offset) {\n        rightIndex = middleIndex;\n      } else {\n        leftIndex = middleIndex;\n      }\n    } while (rightIndex - leftIndex > 1);\n\n    var index;\n\n    for (index = leftIndex; index <= rightIndex; index++) {\n      if (groupsInfo[index].offset > offset) {\n        break;\n      }\n    }\n\n    return index;\n  };\n\n  var cleanGroupsInfo = function cleanGroupsInfo(groupsInfo, groupIndex, groupsCount) {\n    for (var i = 0; i < groupsInfo.length; i++) {\n      if (groupIndex + 1 >= groupsCount) {\n        groupsInfo[i].children = [];\n      } else {\n        cleanGroupsInfo(groupsInfo[i].children, groupIndex + 1, groupsCount);\n      }\n    }\n  };\n\n  var calculateItemsCount = function calculateItemsCount(that, items, groupsCount) {\n    var result = 0;\n\n    if (items) {\n      if (!groupsCount) {\n        result = items.length;\n      } else {\n        for (var i = 0; i < items.length; i++) {\n          if (that.isGroupItemCountable(items[i])) {\n            result++;\n          }\n\n          result += calculateItemsCount(that, items[i].items, groupsCount - 1);\n        }\n      }\n    }\n\n    return result;\n  };\n\n  return {\n    ctor: function (dataSourceAdapter) {\n      this._dataSource = dataSourceAdapter;\n      this.reset();\n    },\n    reset: function () {\n      this._groupsInfo = [];\n      this._totalCountCorrection = 0;\n    },\n    totalCountCorrection: function () {\n      return this._totalCountCorrection;\n    },\n    updateTotalItemsCount: function (totalCountCorrection) {\n      this._totalCountCorrection = totalCountCorrection || 0;\n    },\n    isGroupItemCountable: function (item) {\n      return !this._isVirtualPaging() || !item.isContinuation;\n    },\n    _isVirtualPaging: function () {\n      var scrollingMode = this._dataSource.option(\"scrolling.mode\");\n\n      return \"virtual\" === scrollingMode || \"infinite\" === scrollingMode;\n    },\n    itemsCount: function itemsCount() {\n      var dataSourceAdapter = this._dataSource;\n      var dataSource = dataSourceAdapter._dataSource;\n\n      var groupCount = _uiData_grid.default.normalizeSortingInfo(dataSource.group() || []).length;\n\n      var itemsCount = calculateItemsCount(this, dataSource.items(), groupCount);\n      return itemsCount;\n    },\n    foreachGroups: function (callback, childrenAtFirst, foreachCollapsedGroups, updateOffsets, updateParentOffsets) {\n      var that = this;\n\n      function foreachGroupsCore(groupsInfo, callback, childrenAtFirst, parents) {\n        var callbackResults = [];\n\n        function executeCallback(callback, data, parents, callbackResults) {\n          var callbackResult = data && callback(data, parents);\n          callbackResult && callbackResults.push(callbackResult);\n          return callbackResult;\n        }\n\n        for (var i = 0; i < groupsInfo.length; i++) {\n          parents.push(groupsInfo[i].data);\n\n          if (!childrenAtFirst && false === executeCallback(callback, groupsInfo[i].data, parents, callbackResults)) {\n            return false;\n          }\n\n          if (!groupsInfo[i].data || groupsInfo[i].data.isExpanded || foreachCollapsedGroups) {\n            var children = groupsInfo[i].children;\n            var callbackResult = children.length && foreachGroupsCore(children, callback, childrenAtFirst, parents);\n            callbackResult && callbackResults.push(callbackResult);\n\n            if (false === callbackResult) {\n              return false;\n            }\n          }\n\n          if (childrenAtFirst && false === executeCallback(callback, groupsInfo[i].data, parents, callbackResults)) {\n            return false;\n          }\n\n          if (!groupsInfo[i].data || groupsInfo[i].data.offset !== groupsInfo[i].offset) {\n            updateOffsets = true;\n          }\n\n          parents.pop();\n        }\n\n        var currentParents = updateParentOffsets && parents.slice(0);\n        return updateOffsets && _deferred.when.apply(_renderer.default, callbackResults).always(function () {\n          that._updateGroupInfoOffsets(groupsInfo, currentParents);\n        });\n      }\n\n      return foreachGroupsCore(that._groupsInfo, callback, childrenAtFirst, []);\n    },\n    _updateGroupInfoOffsets: function (groupsInfo, parents) {\n      parents = parents || [];\n\n      for (var index = 0; index < groupsInfo.length; index++) {\n        var groupInfo = groupsInfo[index];\n\n        if (groupInfo.data && groupInfo.data.offset !== groupInfo.offset) {\n          groupInfo.offset = groupInfo.data.offset;\n\n          for (var parentIndex = 0; parentIndex < parents.length; parentIndex++) {\n            parents[parentIndex].offset = groupInfo.offset;\n          }\n        }\n      }\n\n      groupsInfo.sort(function (a, b) {\n        return a.offset - b.offset;\n      });\n    },\n    findGroupInfo: function (path) {\n      var that = this;\n      var groupInfo;\n      var groupsInfo = that._groupsInfo;\n\n      for (var pathIndex = 0; groupsInfo && pathIndex < path.length; pathIndex++) {\n        groupInfo = findGroupInfoByKey(groupsInfo, path[pathIndex]);\n        groupsInfo = groupInfo && groupInfo.children;\n      }\n\n      return groupInfo && groupInfo.data;\n    },\n    addGroupInfo: function (groupInfoData) {\n      var that = this;\n      var groupInfo;\n      var path = groupInfoData.path;\n      var groupsInfo = that._groupsInfo;\n\n      for (var pathIndex = 0; pathIndex < path.length; pathIndex++) {\n        groupInfo = findGroupInfoByKey(groupsInfo, path[pathIndex]);\n\n        if (!groupInfo) {\n          groupInfo = {\n            key: path[pathIndex],\n            offset: groupInfoData.offset,\n            data: {\n              offset: groupInfoData.offset,\n              isExpanded: true,\n              path: path.slice(0, pathIndex + 1)\n            },\n            children: []\n          };\n          var index = getGroupInfoIndexByOffset(groupsInfo, groupInfoData.offset);\n          groupsInfo.splice(index, 0, groupInfo);\n          groupsInfo.hash = groupsInfo.hash || {};\n          groupsInfo.hash[JSON.stringify(groupInfo.key)] = groupInfo;\n        }\n\n        if (pathIndex === path.length - 1) {\n          groupInfo.data = groupInfoData;\n\n          if (groupInfo.offset !== groupInfoData.offset) {\n            that._updateGroupInfoOffsets(groupsInfo);\n          }\n        }\n\n        groupsInfo = groupInfo.children;\n      }\n    },\n    allowCollapseAll: function () {\n      return true;\n    },\n    refresh: function (options) {\n      var that = this;\n      var storeLoadOptions = options.storeLoadOptions;\n\n      var groups = _utils.default.normalizeSortingInfo(storeLoadOptions.group || []);\n\n      var oldGroups = \"_group\" in that ? _utils.default.normalizeSortingInfo(that._group || []) : groups;\n      var groupsCount = Math.min(oldGroups.length, groups.length);\n      that._group = storeLoadOptions.group;\n\n      for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n        if (oldGroups[groupIndex].selector !== groups[groupIndex].selector) {\n          groupsCount = groupIndex;\n          break;\n        }\n      }\n\n      if (!groupsCount) {\n        that.reset();\n      } else {\n        cleanGroupsInfo(that._groupsInfo, 0, groupsCount);\n      }\n    },\n    handleDataLoading: function () {},\n    handleDataLoaded: function (options, callBase) {\n      callBase(options);\n    },\n    handleDataLoadedCore: function (options, callBase) {\n      callBase(options);\n    }\n  };\n}());\n\nexports.GroupingHelper = GroupingHelper;","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/node_modules/devextreme/ui/data_grid/ui.data_grid.grouping.core.js"],"names":["exports","createOffsetFilter","GroupingHelper","_renderer","_interopRequireDefault","require","_class","_uiData_grid","_utils","_deferred","obj","__esModule","path","storeLoadOptions","groups","default","normalizeSortingInfo","group","filter","i","length","filterElement","j","selector","push","desc","currentFilter","combineFilters","inherit","findGroupInfoByKey","groupsInfo","key","hash","JSON","stringify","getGroupInfoIndexByOffset","offset","leftIndex","rightIndex","middleIndex","index","cleanGroupsInfo","groupIndex","groupsCount","children","calculateItemsCount","that","items","result","isGroupItemCountable","ctor","dataSourceAdapter","_dataSource","reset","_groupsInfo","_totalCountCorrection","totalCountCorrection","updateTotalItemsCount","item","_isVirtualPaging","isContinuation","scrollingMode","option","itemsCount","dataSource","groupCount","foreachGroups","callback","childrenAtFirst","foreachCollapsedGroups","updateOffsets","updateParentOffsets","foreachGroupsCore","parents","callbackResults","executeCallback","data","callbackResult","isExpanded","pop","currentParents","slice","when","apply","always","_updateGroupInfoOffsets","groupInfo","parentIndex","sort","a","b","findGroupInfo","pathIndex","addGroupInfo","groupInfoData","splice","allowCollapseAll","refresh","options","oldGroups","_group","Math","min","handleDataLoading","handleDataLoaded","callBase","handleDataLoadedCore"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/data_grid/ui.data_grid.grouping.core.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.createOffsetFilter = createOffsetFilter;\r\nexports.GroupingHelper = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _class = _interopRequireDefault(require(\"../../core/class\"));\r\nvar _uiData_grid = _interopRequireDefault(require(\"./ui.data_grid.core\"));\r\nvar _utils = _interopRequireDefault(require(\"../../data/utils\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction createOffsetFilter(path, storeLoadOptions) {\r\n    var groups = _utils.default.normalizeSortingInfo(storeLoadOptions.group);\r\n    var filter = [];\r\n    for (var i = 0; i < path.length; i++) {\r\n        var filterElement = [];\r\n        for (var j = 0; j <= i; j++) {\r\n            var selector = groups[j].selector;\r\n            if (i === j && (null === path[j] || false === path[j] || true === path[j])) {\r\n                if (false === path[j]) {\r\n                    filterElement.push([selector, \"=\", groups[j].desc ? true : null])\r\n                } else {\r\n                    if (path[j] ? !groups[j].desc : groups[j].desc) {\r\n                        filterElement.push([selector, \"<>\", path[j]])\r\n                    } else {\r\n                        filterElement.push([selector, \"<>\", null]);\r\n                        filterElement.push([selector, \"=\", null])\r\n                    }\r\n                }\r\n            } else {\r\n                var currentFilter = [selector, i === j ? groups[j].desc ? \">\" : \"<\" : \"=\", path[j]];\r\n                if (\"<\" === currentFilter[1]) {\r\n                    filterElement.push([currentFilter, \"or\", [selector, \"=\", null]])\r\n                } else {\r\n                    filterElement.push(currentFilter)\r\n                }\r\n            }\r\n        }\r\n        filter.push(_uiData_grid.default.combineFilters(filterElement))\r\n    }\r\n    filter = _uiData_grid.default.combineFilters(filter, \"or\");\r\n    return _uiData_grid.default.combineFilters([filter, storeLoadOptions.filter])\r\n}\r\nvar GroupingHelper = _class.default.inherit(function() {\r\n    var findGroupInfoByKey = function(groupsInfo, key) {\r\n        var hash = groupsInfo.hash;\r\n        return hash && hash[JSON.stringify(key)]\r\n    };\r\n    var getGroupInfoIndexByOffset = function(groupsInfo, offset) {\r\n        var leftIndex = 0;\r\n        var rightIndex = groupsInfo.length - 1;\r\n        if (!groupsInfo.length) {\r\n            return 0\r\n        }\r\n        do {\r\n            var middleIndex = rightIndex + leftIndex >> 1;\r\n            if (groupsInfo[middleIndex].offset > offset) {\r\n                rightIndex = middleIndex\r\n            } else {\r\n                leftIndex = middleIndex\r\n            }\r\n        } while (rightIndex - leftIndex > 1);\r\n        var index;\r\n        for (index = leftIndex; index <= rightIndex; index++) {\r\n            if (groupsInfo[index].offset > offset) {\r\n                break\r\n            }\r\n        }\r\n        return index\r\n    };\r\n    var cleanGroupsInfo = function cleanGroupsInfo(groupsInfo, groupIndex, groupsCount) {\r\n        for (var i = 0; i < groupsInfo.length; i++) {\r\n            if (groupIndex + 1 >= groupsCount) {\r\n                groupsInfo[i].children = []\r\n            } else {\r\n                cleanGroupsInfo(groupsInfo[i].children, groupIndex + 1, groupsCount)\r\n            }\r\n        }\r\n    };\r\n    var calculateItemsCount = function calculateItemsCount(that, items, groupsCount) {\r\n        var result = 0;\r\n        if (items) {\r\n            if (!groupsCount) {\r\n                result = items.length\r\n            } else {\r\n                for (var i = 0; i < items.length; i++) {\r\n                    if (that.isGroupItemCountable(items[i])) {\r\n                        result++\r\n                    }\r\n                    result += calculateItemsCount(that, items[i].items, groupsCount - 1)\r\n                }\r\n            }\r\n        }\r\n        return result\r\n    };\r\n    return {\r\n        ctor: function(dataSourceAdapter) {\r\n            this._dataSource = dataSourceAdapter;\r\n            this.reset()\r\n        },\r\n        reset: function() {\r\n            this._groupsInfo = [];\r\n            this._totalCountCorrection = 0\r\n        },\r\n        totalCountCorrection: function() {\r\n            return this._totalCountCorrection\r\n        },\r\n        updateTotalItemsCount: function(totalCountCorrection) {\r\n            this._totalCountCorrection = totalCountCorrection || 0\r\n        },\r\n        isGroupItemCountable: function(item) {\r\n            return !this._isVirtualPaging() || !item.isContinuation\r\n        },\r\n        _isVirtualPaging: function() {\r\n            var scrollingMode = this._dataSource.option(\"scrolling.mode\");\r\n            return \"virtual\" === scrollingMode || \"infinite\" === scrollingMode\r\n        },\r\n        itemsCount: function itemsCount() {\r\n            var dataSourceAdapter = this._dataSource;\r\n            var dataSource = dataSourceAdapter._dataSource;\r\n            var groupCount = _uiData_grid.default.normalizeSortingInfo(dataSource.group() || []).length;\r\n            var itemsCount = calculateItemsCount(this, dataSource.items(), groupCount);\r\n            return itemsCount\r\n        },\r\n        foreachGroups: function(callback, childrenAtFirst, foreachCollapsedGroups, updateOffsets, updateParentOffsets) {\r\n            var that = this;\r\n\r\n            function foreachGroupsCore(groupsInfo, callback, childrenAtFirst, parents) {\r\n                var callbackResults = [];\r\n\r\n                function executeCallback(callback, data, parents, callbackResults) {\r\n                    var callbackResult = data && callback(data, parents);\r\n                    callbackResult && callbackResults.push(callbackResult);\r\n                    return callbackResult\r\n                }\r\n                for (var i = 0; i < groupsInfo.length; i++) {\r\n                    parents.push(groupsInfo[i].data);\r\n                    if (!childrenAtFirst && false === executeCallback(callback, groupsInfo[i].data, parents, callbackResults)) {\r\n                        return false\r\n                    }\r\n                    if (!groupsInfo[i].data || groupsInfo[i].data.isExpanded || foreachCollapsedGroups) {\r\n                        var children = groupsInfo[i].children;\r\n                        var callbackResult = children.length && foreachGroupsCore(children, callback, childrenAtFirst, parents);\r\n                        callbackResult && callbackResults.push(callbackResult);\r\n                        if (false === callbackResult) {\r\n                            return false\r\n                        }\r\n                    }\r\n                    if (childrenAtFirst && false === executeCallback(callback, groupsInfo[i].data, parents, callbackResults)) {\r\n                        return false\r\n                    }\r\n                    if (!groupsInfo[i].data || groupsInfo[i].data.offset !== groupsInfo[i].offset) {\r\n                        updateOffsets = true\r\n                    }\r\n                    parents.pop()\r\n                }\r\n                var currentParents = updateParentOffsets && parents.slice(0);\r\n                return updateOffsets && _deferred.when.apply(_renderer.default, callbackResults).always(function() {\r\n                    that._updateGroupInfoOffsets(groupsInfo, currentParents)\r\n                })\r\n            }\r\n            return foreachGroupsCore(that._groupsInfo, callback, childrenAtFirst, [])\r\n        },\r\n        _updateGroupInfoOffsets: function(groupsInfo, parents) {\r\n            parents = parents || [];\r\n            for (var index = 0; index < groupsInfo.length; index++) {\r\n                var groupInfo = groupsInfo[index];\r\n                if (groupInfo.data && groupInfo.data.offset !== groupInfo.offset) {\r\n                    groupInfo.offset = groupInfo.data.offset;\r\n                    for (var parentIndex = 0; parentIndex < parents.length; parentIndex++) {\r\n                        parents[parentIndex].offset = groupInfo.offset\r\n                    }\r\n                }\r\n            }\r\n            groupsInfo.sort(function(a, b) {\r\n                return a.offset - b.offset\r\n            })\r\n        },\r\n        findGroupInfo: function(path) {\r\n            var that = this;\r\n            var groupInfo;\r\n            var groupsInfo = that._groupsInfo;\r\n            for (var pathIndex = 0; groupsInfo && pathIndex < path.length; pathIndex++) {\r\n                groupInfo = findGroupInfoByKey(groupsInfo, path[pathIndex]);\r\n                groupsInfo = groupInfo && groupInfo.children\r\n            }\r\n            return groupInfo && groupInfo.data\r\n        },\r\n        addGroupInfo: function(groupInfoData) {\r\n            var that = this;\r\n            var groupInfo;\r\n            var path = groupInfoData.path;\r\n            var groupsInfo = that._groupsInfo;\r\n            for (var pathIndex = 0; pathIndex < path.length; pathIndex++) {\r\n                groupInfo = findGroupInfoByKey(groupsInfo, path[pathIndex]);\r\n                if (!groupInfo) {\r\n                    groupInfo = {\r\n                        key: path[pathIndex],\r\n                        offset: groupInfoData.offset,\r\n                        data: {\r\n                            offset: groupInfoData.offset,\r\n                            isExpanded: true,\r\n                            path: path.slice(0, pathIndex + 1)\r\n                        },\r\n                        children: []\r\n                    };\r\n                    var index = getGroupInfoIndexByOffset(groupsInfo, groupInfoData.offset);\r\n                    groupsInfo.splice(index, 0, groupInfo);\r\n                    groupsInfo.hash = groupsInfo.hash || {};\r\n                    groupsInfo.hash[JSON.stringify(groupInfo.key)] = groupInfo\r\n                }\r\n                if (pathIndex === path.length - 1) {\r\n                    groupInfo.data = groupInfoData;\r\n                    if (groupInfo.offset !== groupInfoData.offset) {\r\n                        that._updateGroupInfoOffsets(groupsInfo)\r\n                    }\r\n                }\r\n                groupsInfo = groupInfo.children\r\n            }\r\n        },\r\n        allowCollapseAll: function() {\r\n            return true\r\n        },\r\n        refresh: function(options) {\r\n            var that = this;\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var groups = _utils.default.normalizeSortingInfo(storeLoadOptions.group || []);\r\n            var oldGroups = \"_group\" in that ? _utils.default.normalizeSortingInfo(that._group || []) : groups;\r\n            var groupsCount = Math.min(oldGroups.length, groups.length);\r\n            that._group = storeLoadOptions.group;\r\n            for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\r\n                if (oldGroups[groupIndex].selector !== groups[groupIndex].selector) {\r\n                    groupsCount = groupIndex;\r\n                    break\r\n                }\r\n            }\r\n            if (!groupsCount) {\r\n                that.reset()\r\n            } else {\r\n                cleanGroupsInfo(that._groupsInfo, 0, groupsCount)\r\n            }\r\n        },\r\n        handleDataLoading: function() {},\r\n        handleDataLoaded: function(options, callBase) {\r\n            callBase(options)\r\n        },\r\n        handleDataLoadedCore: function(options, callBase) {\r\n            callBase(options)\r\n        }\r\n    }\r\n}());\r\nexports.GroupingHelper = GroupingHelper;\r\n"]},"metadata":{},"sourceType":"script"}