{"ast":null,"code":"import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport getDaysInMonth from '../getDaysInMonth/index.js';\n/**\r\n * @name setMonth\r\n * @category Month Helpers\r\n * @summary Set the month to the given date.\r\n *\r\n * @description\r\n * Set the month to the given date.\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} date - the date to be changed\r\n * @param {Number} month - the month of the new date\r\n * @returns {Date} the new date with the month set\r\n * @throws {TypeError} 2 arguments required\r\n *\r\n * @example\r\n * // Set February to 1 September 2014:\r\n * var result = setMonth(new Date(2014, 8, 1), 1)\r\n * //=> Sat Feb 01 2014 00:00:00\r\n */\n\nexport default function setMonth(dirtyDate, dirtyMonth) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var month = toInteger(dirtyMonth);\n  var year = date.getFullYear();\n  var day = date.getDate();\n  var dateWithDesiredMonth = new Date(0);\n  dateWithDesiredMonth.setFullYear(year, month, 15);\n  dateWithDesiredMonth.setHours(0, 0, 0, 0);\n  var daysInMonth = getDaysInMonth(dateWithDesiredMonth); // Set the last day of the new month\n  // if the original date was the last day of the longer month\n\n  date.setMonth(month, Math.min(day, daysInMonth));\n  return date;\n}","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/AdminApp/node_modules/date-fns/esm/setMonth/index.js"],"names":["toInteger","toDate","getDaysInMonth","setMonth","dirtyDate","dirtyMonth","arguments","length","TypeError","date","month","year","getFullYear","day","getDate","dateWithDesiredMonth","Date","setFullYear","setHours","daysInMonth","Math","min"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,4BAAtB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,QAAT,CAAkBC,SAAlB,EAA6BC,UAA7B,EAAyC;AACtD,MAAIC,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,UAAM,IAAIC,SAAJ,CACJ,oCAAoCF,SAAS,CAACC,MAA9C,GAAuD,UADnD,CAAN;AAGD;;AAED,MAAIE,IAAI,GAAGR,MAAM,CAACG,SAAD,CAAjB;AACA,MAAIM,KAAK,GAAGV,SAAS,CAACK,UAAD,CAArB;AACA,MAAIM,IAAI,GAAGF,IAAI,CAACG,WAAL,EAAX;AACA,MAAIC,GAAG,GAAGJ,IAAI,CAACK,OAAL,EAAV;AAEA,MAAIC,oBAAoB,GAAG,IAAIC,IAAJ,CAAS,CAAT,CAA3B;AACAD,EAAAA,oBAAoB,CAACE,WAArB,CAAiCN,IAAjC,EAAuCD,KAAvC,EAA8C,EAA9C;AACAK,EAAAA,oBAAoB,CAACG,QAArB,CAA8B,CAA9B,EAAiC,CAAjC,EAAoC,CAApC,EAAuC,CAAvC;AACA,MAAIC,WAAW,GAAGjB,cAAc,CAACa,oBAAD,CAAhC,CAfsD,CAgBtD;AACA;;AACAN,EAAAA,IAAI,CAACN,QAAL,CAAcO,KAAd,EAAqBU,IAAI,CAACC,GAAL,CAASR,GAAT,EAAcM,WAAd,CAArB;AACA,SAAOV,IAAP;AACD","sourcesContent":["import toInteger from '../_lib/toInteger/index.js'\r\nimport toDate from '../toDate/index.js'\r\nimport getDaysInMonth from '../getDaysInMonth/index.js'\r\n\r\n/**\r\n * @name setMonth\r\n * @category Month Helpers\r\n * @summary Set the month to the given date.\r\n *\r\n * @description\r\n * Set the month to the given date.\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} date - the date to be changed\r\n * @param {Number} month - the month of the new date\r\n * @returns {Date} the new date with the month set\r\n * @throws {TypeError} 2 arguments required\r\n *\r\n * @example\r\n * // Set February to 1 September 2014:\r\n * var result = setMonth(new Date(2014, 8, 1), 1)\r\n * //=> Sat Feb 01 2014 00:00:00\r\n */\r\nexport default function setMonth(dirtyDate, dirtyMonth) {\r\n  if (arguments.length < 2) {\r\n    throw new TypeError(\r\n      '2 arguments required, but only ' + arguments.length + ' present'\r\n    )\r\n  }\r\n\r\n  var date = toDate(dirtyDate)\r\n  var month = toInteger(dirtyMonth)\r\n  var year = date.getFullYear()\r\n  var day = date.getDate()\r\n\r\n  var dateWithDesiredMonth = new Date(0)\r\n  dateWithDesiredMonth.setFullYear(year, month, 15)\r\n  dateWithDesiredMonth.setHours(0, 0, 0, 0)\r\n  var daysInMonth = getDaysInMonth(dateWithDesiredMonth)\r\n  // Set the last day of the new month\r\n  // if the original date was the last day of the longer month\r\n  date.setMonth(month, Math.min(day, daysInMonth))\r\n  return date\r\n}\r\n"]},"metadata":{},"sourceType":"module"}