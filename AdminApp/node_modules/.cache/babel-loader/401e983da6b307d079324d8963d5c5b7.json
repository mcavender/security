{"ast":null,"code":"/**\r\n * DevExtreme (ui/shared/filtering.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _array = require(\"../../core/utils/array\");\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar DEFAULT_DATE_INTERVAL = [\"year\", \"month\", \"day\"];\nvar DEFAULT_DATETIME_INTERVAL = [\"year\", \"month\", \"day\", \"hour\", \"minute\"];\n\nvar isDateType = function (dataType) {\n  return \"date\" === dataType || \"datetime\" === dataType;\n};\n\nvar getGroupInterval = function (column) {\n  var index;\n  var result = [];\n  var dateIntervals = [\"year\", \"month\", \"day\", \"hour\", \"minute\", \"second\"];\n  var groupInterval = column.headerFilter && column.headerFilter.groupInterval;\n  var interval = \"quarter\" === groupInterval ? \"month\" : groupInterval;\n\n  if (isDateType(column.dataType) && null !== groupInterval) {\n    result = \"datetime\" === column.dataType ? DEFAULT_DATETIME_INTERVAL : DEFAULT_DATE_INTERVAL;\n    index = (0, _array.inArray)(interval, dateIntervals);\n\n    if (index >= 0) {\n      result = dateIntervals.slice(0, index);\n      result.push(groupInterval);\n      return result;\n    }\n\n    return result;\n  } else {\n    if ((0, _type.isDefined)(groupInterval)) {\n      return Array.isArray(groupInterval) ? groupInterval : [groupInterval];\n    }\n  }\n};\n\nvar _default = function () {\n  var getFilterSelector = function (column, target) {\n    var selector = column.dataField || column.selector;\n\n    if (\"search\" === target) {\n      selector = column.displayField || column.calculateDisplayValue || selector;\n    }\n\n    return selector;\n  };\n\n  var isZeroTime = function (date) {\n    return date.getHours() + date.getMinutes() + date.getSeconds() + date.getMilliseconds() < 1;\n  };\n\n  var getDateValues = function (dateValue) {\n    if ((0, _type.isDate)(dateValue)) {\n      return [dateValue.getFullYear(), dateValue.getMonth(), dateValue.getDate(), dateValue.getHours(), dateValue.getMinutes(), dateValue.getSeconds()];\n    }\n\n    return (0, _iterator.map)((\"\" + dateValue).split(\"/\"), function (value, index) {\n      return 1 === index ? Number(value) - 1 : Number(value);\n    });\n  };\n\n  var getFilterExpressionByRange = function (filterValue, target) {\n    var column = this;\n    var endFilterValue;\n    var startFilterExpression;\n    var endFilterExpression;\n    var selector = getFilterSelector(column, target);\n\n    if (Array.isArray(filterValue) && (0, _type.isDefined)(filterValue[0]) && (0, _type.isDefined)(filterValue[1])) {\n      startFilterExpression = [selector, \">=\", filterValue[0]];\n      endFilterExpression = [selector, \"<=\", filterValue[1]];\n\n      if (isDateType(column.dataType) && isZeroTime(filterValue[1])) {\n        endFilterValue = new Date(filterValue[1].getTime());\n\n        if (\"date\" === column.dataType) {\n          endFilterValue.setDate(filterValue[1].getDate() + 1);\n        }\n\n        endFilterExpression = [selector, \"<\", endFilterValue];\n      }\n\n      return [startFilterExpression, \"and\", endFilterExpression];\n    }\n  };\n\n  var getFilterExpressionForDate = function (filterValue, selectedFilterOperation, target) {\n    var column = this;\n    var dateStart;\n    var dateEnd;\n    var dateInterval;\n    var values = getDateValues(filterValue);\n    var selector = getFilterSelector(column, target);\n\n    if (\"headerFilter\" === target) {\n      dateInterval = getGroupInterval(column)[values.length - 1];\n    } else {\n      if (\"datetime\" === column.dataType) {\n        dateInterval = \"minute\";\n      }\n    }\n\n    switch (dateInterval) {\n      case \"year\":\n        dateStart = new Date(values[0], 0, 1);\n        dateEnd = new Date(values[0] + 1, 0, 1);\n        break;\n\n      case \"month\":\n        dateStart = new Date(values[0], values[1], 1);\n        dateEnd = new Date(values[0], values[1] + 1, 1);\n        break;\n\n      case \"quarter\":\n        dateStart = new Date(values[0], 3 * values[1], 1);\n        dateEnd = new Date(values[0], 3 * values[1] + 3, 1);\n        break;\n\n      case \"hour\":\n        dateStart = new Date(values[0], values[1], values[2], values[3]);\n        dateEnd = new Date(values[0], values[1], values[2], values[3] + 1);\n        break;\n\n      case \"minute\":\n        dateStart = new Date(values[0], values[1], values[2], values[3], values[4]);\n        dateEnd = new Date(values[0], values[1], values[2], values[3], values[4] + 1);\n        break;\n\n      case \"second\":\n        dateStart = new Date(values[0], values[1], values[2], values[3], values[4], values[5]);\n        dateEnd = new Date(values[0], values[1], values[2], values[3], values[4], values[5] + 1);\n        break;\n\n      default:\n        dateStart = new Date(values[0], values[1], values[2]);\n        dateEnd = new Date(values[0], values[1], values[2] + 1);\n    }\n\n    switch (selectedFilterOperation) {\n      case \"<\":\n        return [selector, \"<\", dateStart];\n\n      case \"<=\":\n        return [selector, \"<\", dateEnd];\n\n      case \">\":\n        return [selector, \">=\", dateEnd];\n\n      case \">=\":\n        return [selector, \">=\", dateStart];\n\n      case \"<>\":\n        return [[selector, \"<\", dateStart], \"or\", [selector, \">=\", dateEnd]];\n\n      default:\n        return [[selector, \">=\", dateStart], \"and\", [selector, \"<\", dateEnd]];\n    }\n  };\n\n  var getFilterExpressionForNumber = function (filterValue, selectedFilterOperation, target) {\n    var column = this;\n    var selector = getFilterSelector(column, target);\n    var groupInterval = getGroupInterval(column);\n\n    if (\"headerFilter\" === target && groupInterval && (0, _type.isDefined)(filterValue)) {\n      var values = (\"\" + filterValue).split(\"/\");\n      var value = Number(values[values.length - 1]);\n      var interval = groupInterval[values.length - 1];\n      var startFilterValue = [selector, \">=\", value];\n      var endFilterValue = [selector, \"<\", value + interval];\n      var condition = [startFilterValue, \"and\", endFilterValue];\n      return condition;\n    }\n\n    return [selector, selectedFilterOperation || \"=\", filterValue];\n  };\n\n  return {\n    defaultCalculateFilterExpression: function (filterValue, selectedFilterOperation, target) {\n      var column = this;\n      var selector = getFilterSelector(column, target);\n      var isSearchByDisplayValue = column.calculateDisplayValue && \"search\" === target;\n      var dataType = isSearchByDisplayValue && column.lookup && column.lookup.dataType || column.dataType;\n      var filter = null;\n\n      if ((\"headerFilter\" === target || \"filterBuilder\" === target) && null === filterValue) {\n        filter = [selector, selectedFilterOperation || \"=\", null];\n\n        if (\"string\" === dataType) {\n          filter = [filter, \"=\" === selectedFilterOperation ? \"or\" : \"and\", [selector, selectedFilterOperation || \"=\", \"\"]];\n        }\n      } else {\n        if (\"string\" === dataType && (!column.lookup || isSearchByDisplayValue)) {\n          filter = [selector, selectedFilterOperation || \"contains\", filterValue];\n        } else {\n          if (\"between\" === selectedFilterOperation) {\n            return getFilterExpressionByRange.apply(column, [filterValue, target]);\n          } else {\n            if (isDateType(dataType) && (0, _type.isDefined)(filterValue)) {\n              return getFilterExpressionForDate.apply(column, arguments);\n            } else {\n              if (\"number\" === dataType) {\n                return getFilterExpressionForNumber.apply(column, arguments);\n              } else {\n                if (\"object\" !== dataType) {\n                  filter = [selector, selectedFilterOperation || \"=\", filterValue];\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return filter;\n    },\n    getGroupInterval: getGroupInterval\n  };\n}();\n\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/node_modules/devextreme/ui/shared/filtering.js"],"names":["exports","default","_type","require","_array","_iterator","DEFAULT_DATE_INTERVAL","DEFAULT_DATETIME_INTERVAL","isDateType","dataType","getGroupInterval","column","index","result","dateIntervals","groupInterval","headerFilter","interval","inArray","slice","push","isDefined","Array","isArray","_default","getFilterSelector","target","selector","dataField","displayField","calculateDisplayValue","isZeroTime","date","getHours","getMinutes","getSeconds","getMilliseconds","getDateValues","dateValue","isDate","getFullYear","getMonth","getDate","map","split","value","Number","getFilterExpressionByRange","filterValue","endFilterValue","startFilterExpression","endFilterExpression","Date","getTime","setDate","getFilterExpressionForDate","selectedFilterOperation","dateStart","dateEnd","dateInterval","values","length","getFilterExpressionForNumber","startFilterValue","condition","defaultCalculateFilterExpression","isSearchByDisplayValue","lookup","filter","apply","arguments","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/shared/filtering.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar DEFAULT_DATE_INTERVAL = [\"year\", \"month\", \"day\"];\r\nvar DEFAULT_DATETIME_INTERVAL = [\"year\", \"month\", \"day\", \"hour\", \"minute\"];\r\nvar isDateType = function(dataType) {\r\n    return \"date\" === dataType || \"datetime\" === dataType\r\n};\r\nvar getGroupInterval = function(column) {\r\n    var index;\r\n    var result = [];\r\n    var dateIntervals = [\"year\", \"month\", \"day\", \"hour\", \"minute\", \"second\"];\r\n    var groupInterval = column.headerFilter && column.headerFilter.groupInterval;\r\n    var interval = \"quarter\" === groupInterval ? \"month\" : groupInterval;\r\n    if (isDateType(column.dataType) && null !== groupInterval) {\r\n        result = \"datetime\" === column.dataType ? DEFAULT_DATETIME_INTERVAL : DEFAULT_DATE_INTERVAL;\r\n        index = (0, _array.inArray)(interval, dateIntervals);\r\n        if (index >= 0) {\r\n            result = dateIntervals.slice(0, index);\r\n            result.push(groupInterval);\r\n            return result\r\n        }\r\n        return result\r\n    } else {\r\n        if ((0, _type.isDefined)(groupInterval)) {\r\n            return Array.isArray(groupInterval) ? groupInterval : [groupInterval]\r\n        }\r\n    }\r\n};\r\nvar _default = function() {\r\n    var getFilterSelector = function(column, target) {\r\n        var selector = column.dataField || column.selector;\r\n        if (\"search\" === target) {\r\n            selector = column.displayField || column.calculateDisplayValue || selector\r\n        }\r\n        return selector\r\n    };\r\n    var isZeroTime = function(date) {\r\n        return date.getHours() + date.getMinutes() + date.getSeconds() + date.getMilliseconds() < 1\r\n    };\r\n    var getDateValues = function(dateValue) {\r\n        if ((0, _type.isDate)(dateValue)) {\r\n            return [dateValue.getFullYear(), dateValue.getMonth(), dateValue.getDate(), dateValue.getHours(), dateValue.getMinutes(), dateValue.getSeconds()]\r\n        }\r\n        return (0, _iterator.map)((\"\" + dateValue).split(\"/\"), function(value, index) {\r\n            return 1 === index ? Number(value) - 1 : Number(value)\r\n        })\r\n    };\r\n    var getFilterExpressionByRange = function(filterValue, target) {\r\n        var column = this;\r\n        var endFilterValue;\r\n        var startFilterExpression;\r\n        var endFilterExpression;\r\n        var selector = getFilterSelector(column, target);\r\n        if (Array.isArray(filterValue) && (0, _type.isDefined)(filterValue[0]) && (0, _type.isDefined)(filterValue[1])) {\r\n            startFilterExpression = [selector, \">=\", filterValue[0]];\r\n            endFilterExpression = [selector, \"<=\", filterValue[1]];\r\n            if (isDateType(column.dataType) && isZeroTime(filterValue[1])) {\r\n                endFilterValue = new Date(filterValue[1].getTime());\r\n                if (\"date\" === column.dataType) {\r\n                    endFilterValue.setDate(filterValue[1].getDate() + 1)\r\n                }\r\n                endFilterExpression = [selector, \"<\", endFilterValue]\r\n            }\r\n            return [startFilterExpression, \"and\", endFilterExpression]\r\n        }\r\n    };\r\n    var getFilterExpressionForDate = function(filterValue, selectedFilterOperation, target) {\r\n        var column = this;\r\n        var dateStart;\r\n        var dateEnd;\r\n        var dateInterval;\r\n        var values = getDateValues(filterValue);\r\n        var selector = getFilterSelector(column, target);\r\n        if (\"headerFilter\" === target) {\r\n            dateInterval = getGroupInterval(column)[values.length - 1]\r\n        } else {\r\n            if (\"datetime\" === column.dataType) {\r\n                dateInterval = \"minute\"\r\n            }\r\n        }\r\n        switch (dateInterval) {\r\n            case \"year\":\r\n                dateStart = new Date(values[0], 0, 1);\r\n                dateEnd = new Date(values[0] + 1, 0, 1);\r\n                break;\r\n            case \"month\":\r\n                dateStart = new Date(values[0], values[1], 1);\r\n                dateEnd = new Date(values[0], values[1] + 1, 1);\r\n                break;\r\n            case \"quarter\":\r\n                dateStart = new Date(values[0], 3 * values[1], 1);\r\n                dateEnd = new Date(values[0], 3 * values[1] + 3, 1);\r\n                break;\r\n            case \"hour\":\r\n                dateStart = new Date(values[0], values[1], values[2], values[3]);\r\n                dateEnd = new Date(values[0], values[1], values[2], values[3] + 1);\r\n                break;\r\n            case \"minute\":\r\n                dateStart = new Date(values[0], values[1], values[2], values[3], values[4]);\r\n                dateEnd = new Date(values[0], values[1], values[2], values[3], values[4] + 1);\r\n                break;\r\n            case \"second\":\r\n                dateStart = new Date(values[0], values[1], values[2], values[3], values[4], values[5]);\r\n                dateEnd = new Date(values[0], values[1], values[2], values[3], values[4], values[5] + 1);\r\n                break;\r\n            default:\r\n                dateStart = new Date(values[0], values[1], values[2]);\r\n                dateEnd = new Date(values[0], values[1], values[2] + 1)\r\n        }\r\n        switch (selectedFilterOperation) {\r\n            case \"<\":\r\n                return [selector, \"<\", dateStart];\r\n            case \"<=\":\r\n                return [selector, \"<\", dateEnd];\r\n            case \">\":\r\n                return [selector, \">=\", dateEnd];\r\n            case \">=\":\r\n                return [selector, \">=\", dateStart];\r\n            case \"<>\":\r\n                return [\r\n                    [selector, \"<\", dateStart], \"or\", [selector, \">=\", dateEnd]\r\n                ];\r\n            default:\r\n                return [\r\n                    [selector, \">=\", dateStart], \"and\", [selector, \"<\", dateEnd]\r\n                ]\r\n        }\r\n    };\r\n    var getFilterExpressionForNumber = function(filterValue, selectedFilterOperation, target) {\r\n        var column = this;\r\n        var selector = getFilterSelector(column, target);\r\n        var groupInterval = getGroupInterval(column);\r\n        if (\"headerFilter\" === target && groupInterval && (0, _type.isDefined)(filterValue)) {\r\n            var values = (\"\" + filterValue).split(\"/\");\r\n            var value = Number(values[values.length - 1]);\r\n            var interval = groupInterval[values.length - 1];\r\n            var startFilterValue = [selector, \">=\", value];\r\n            var endFilterValue = [selector, \"<\", value + interval];\r\n            var condition = [startFilterValue, \"and\", endFilterValue];\r\n            return condition\r\n        }\r\n        return [selector, selectedFilterOperation || \"=\", filterValue]\r\n    };\r\n    return {\r\n        defaultCalculateFilterExpression: function(filterValue, selectedFilterOperation, target) {\r\n            var column = this;\r\n            var selector = getFilterSelector(column, target);\r\n            var isSearchByDisplayValue = column.calculateDisplayValue && \"search\" === target;\r\n            var dataType = isSearchByDisplayValue && column.lookup && column.lookup.dataType || column.dataType;\r\n            var filter = null;\r\n            if ((\"headerFilter\" === target || \"filterBuilder\" === target) && null === filterValue) {\r\n                filter = [selector, selectedFilterOperation || \"=\", null];\r\n                if (\"string\" === dataType) {\r\n                    filter = [filter, \"=\" === selectedFilterOperation ? \"or\" : \"and\", [selector, selectedFilterOperation || \"=\", \"\"]]\r\n                }\r\n            } else {\r\n                if (\"string\" === dataType && (!column.lookup || isSearchByDisplayValue)) {\r\n                    filter = [selector, selectedFilterOperation || \"contains\", filterValue]\r\n                } else {\r\n                    if (\"between\" === selectedFilterOperation) {\r\n                        return getFilterExpressionByRange.apply(column, [filterValue, target])\r\n                    } else {\r\n                        if (isDateType(dataType) && (0, _type.isDefined)(filterValue)) {\r\n                            return getFilterExpressionForDate.apply(column, arguments)\r\n                        } else {\r\n                            if (\"number\" === dataType) {\r\n                                return getFilterExpressionForNumber.apply(column, arguments)\r\n                            } else {\r\n                                if (\"object\" !== dataType) {\r\n                                    filter = [selector, selectedFilterOperation || \"=\", filterValue]\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return filter\r\n        },\r\n        getGroupInterval: getGroupInterval\r\n    }\r\n}();\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}