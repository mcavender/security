{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CapiniaC\\\\Desktop\\\\Collection\\\\Work\\\\project\\\\security\\\\AdminApp\\\\src\\\\components\\\\pages\\\\viprpit\\\\Vipr-Pit.js\";\nimport React, { useState, useEffect } from 'react';\nimport MaterialTable from 'material-table';\nimport { Grid, Paper, makeStyles } from '@material-ui/core';\nimport Search from '@material-ui/icons/Search';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Check from '@material-ui/icons/Check';\nimport FilterList from '@material-ui/icons/FilterList';\nimport Remove from '@material-ui/icons/Remove';\nimport CreateIcon from '@material-ui/icons/Create';\nimport Clear from '@material-ui/icons/Clear';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport ViprTablesViewService from '../../../services/ViprTablesViewService';\nconst useStyles = makeStyles(theme => ({\n  elnotTbl: {\n    margin: theme.spacing(5),\n    padding: theme.spacing(3),\n    width: '25%'\n  },\n  searchInput: {\n    width: '75%'\n  },\n  newButton: {\n    position: 'absolute',\n    right: '10px'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  materialTable: {\n    cellStyle: {\n      textAlign: 'center'\n    },\n    headerStyle: {\n      textAlign: 'center'\n    }\n  }\n}));\nexport default function ViprPit() {\n  const classes = useStyles();\n  const [elnotClm, setElnotClm] = useState([]);\n  const [viprClm, setViprClm] = useState([]);\n  const [viprData, setViprData] = useState({\n    data: []\n  });\n  const [dataSelected, setDataSelected] = useState([]);\n  useEffect(() => {\n    setElnotClm([{\n      field: 'state_id',\n      title: 'Status',\n      width: 50\n    }, {\n      field: 'elnot',\n      title: 'Elnot',\n      width: 50\n    }]);\n    setViprClm([{\n      field: 'elnot',\n      title: 'Elnot',\n      width: 50,\n      render: viprData => {\n        return viprData.elnot === \"3\" ? /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            backgroundColor: \"red\",\n            fontWeight: \"bold\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 40\n          }\n        }, viprData.elnot) : viprData.elnot === \"5\" ? /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            backgroundColor: \"#008240\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 42\n          }\n        }, viprData.elnot) : /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }\n        }, viprData.elnot);\n      }\n    }, {\n      field: 'op_mode_id',\n      title: 'Mode',\n      width: 50\n    }, {\n      field: 'rf_mode',\n      title: 'RF Min',\n      width: 50\n    }, {\n      field: 'rf_mode',\n      title: 'RF Max',\n      width: 50\n    }, {\n      field: 'mode_type',\n      title: 'Mode Type',\n      width: 50\n    }, {\n      field: 'pri_seq',\n      title: 'Pri Min',\n      width: 50\n    }, {\n      field: 'pri_seq',\n      title: 'Pri Max',\n      width: 50\n    }, {\n      field: 'pd_mode',\n      title: 'PD Min',\n      width: 50\n    }, {\n      field: 'pd_mode',\n      title: 'PD Max',\n      width: 50\n    }, {\n      field: 'sp_mode',\n      title: 'SP Min',\n      width: 50\n    }, {\n      field: 'sp_mode',\n      title: 'SP Max',\n      width: 50\n    }, {\n      field: 'scan_type',\n      title: 'Scan Type',\n      width: 50\n    }]);\n    ViprTablesViewService.getViprTablesView().then(response => {\n      setViprData({\n        data: response.data\n      });\n      console.log(response.headers);\n    });\n  }, []);\n\n  const updateViprTablesView = async e => {\n    e.preventDefault();\n\n    try {\n      const body = {\n        dataSelected\n      };\n      const response = await fetch(`http://localhost:5000/vipr_tables_view/${viprData.data.op_mode_id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      window.location = \"/\";\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    xs: 12,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    icons: {\n      Arrowdownward: ArrowDownwardIcon,\n      Check: Check,\n      Clear: Clear,\n      DetailPanel: ChevronRight,\n      Export: SaveAlt,\n      Filter: FilterList,\n      FirstPage: FirstPage,\n      LastPage: LastPage,\n      NextPage: ChevronRight,\n      PreviousPage: ChevronLeft,\n      ResetSearch: Clear,\n      Search: Search,\n      ThirdStateCheck: Remove,\n      Edit: CreateIcon\n    },\n    title: \"Vipr-Pit\",\n    columns: elnotClm,\n    data: viprData.data,\n    editable: {\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          const data = [...viprData.data];\n          data[data.indexOf(oldData)] = newData;\n          setViprData({ ...viprData,\n            data\n          });\n          console.log(data);\n        }, 600);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    icons: {\n      Check: Check,\n      Clear: Clear,\n      DetailPanel: ChevronRight,\n      Export: SaveAlt,\n      Filter: FilterList,\n      FirstPage: FirstPage,\n      LastPage: LastPage,\n      NextPage: ChevronRight,\n      PreviousPage: ChevronLeft,\n      ResetSearch: Clear,\n      Search: Search,\n      ThirdStateCheck: Remove,\n      Edit: CreateIcon\n    },\n    title: \"\",\n    columns: viprClm,\n    data: viprData.data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }))))));\n}","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/AdminApp/src/components/pages/viprpit/Vipr-Pit.js"],"names":["React","useState","useEffect","MaterialTable","Grid","Paper","makeStyles","Search","SaveAlt","ChevronLeft","ChevronRight","FirstPage","LastPage","Check","FilterList","Remove","CreateIcon","Clear","ArrowDownwardIcon","ViprTablesViewService","useStyles","theme","elnotTbl","margin","spacing","padding","width","searchInput","newButton","position","right","paper","textAlign","color","palette","text","secondary","materialTable","cellStyle","headerStyle","ViprPit","classes","elnotClm","setElnotClm","viprClm","setViprClm","viprData","setViprData","data","dataSelected","setDataSelected","field","title","render","elnot","backgroundColor","fontWeight","getViprTablesView","then","response","console","log","headers","updateViprTablesView","e","preventDefault","body","fetch","op_mode_id","method","JSON","stringify","window","location","err","error","message","Arrowdownward","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","ThirdStateCheck","Edit","onRowUpdate","newData","oldData","Promise","resolve","setTimeout","indexOf"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport { Grid, Paper, makeStyles } from '@material-ui/core';\r\n\r\nimport Search from '@material-ui/icons/Search'\r\nimport SaveAlt from '@material-ui/icons/SaveAlt'\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft'\r\nimport ChevronRight from '@material-ui/icons/ChevronRight'\r\nimport FirstPage from '@material-ui/icons/FirstPage'\r\nimport LastPage from '@material-ui/icons/LastPage'\r\nimport Check from '@material-ui/icons/Check'\r\nimport FilterList from '@material-ui/icons/FilterList'\r\nimport Remove from '@material-ui/icons/Remove'\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\n\r\nimport ViprTablesViewService from '../../../services/ViprTablesViewService';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  elnotTbl: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3),\r\n      width: '25%'\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  materialTable: {\r\n    cellStyle: {textAlign:'center'},\r\n    headerStyle: {textAlign:'center'},\r\n  }\r\n}))\r\n\r\n\r\nexport default function ViprPit() {\r\n\r\n  const classes = useStyles();\r\n  const [elnotClm, setElnotClm] = useState([]);\r\n  const [viprClm, setViprClm] = useState([]);\r\n  const [viprData, setViprData] = useState({ data: [] });\r\n  const [dataSelected, setDataSelected] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setElnotClm([      \r\n      { field: 'state_id', title: 'Status', width: 50 },\r\n      { field: 'elnot', title: 'Elnot', width: 50 },\r\n    ])\r\n\r\n    setViprClm([\r\n      {\r\n        field: 'elnot', title: 'Elnot', width: 50,\r\n        render: viprData => {\r\n            return(\r\n              viprData.elnot === \"3\" ? <p style={{ backgroundColor: \"red\", fontWeight: \"bold\",}}>{viprData.elnot}</p> :\r\n                viprData.elnot === \"5\" ? <p style={{ backgroundColor: \"#008240\" }}>{viprData.elnot}</p> :\r\n                <p>{viprData.elnot}</p>)\r\n        },\r\n      },\r\n      { field: 'op_mode_id', title: 'Mode', width: 50 },\r\n      { field: 'rf_mode', title: 'RF Min', width: 50 },\r\n      { field: 'rf_mode', title: 'RF Max', width: 50 },\r\n      { field: 'mode_type', title: 'Mode Type', width: 50 },\r\n      { field: 'pri_seq', title: 'Pri Min', width: 50 },\r\n      { field: 'pri_seq', title: 'Pri Max', width: 50 },\r\n      { field: 'pd_mode', title: 'PD Min', width: 50 },\r\n      { field: 'pd_mode', title: 'PD Max', width: 50 },\r\n      { field: 'sp_mode', title: 'SP Min', width: 50 },\r\n      { field: 'sp_mode', title: 'SP Max', width: 50 },\r\n      { field: 'scan_type', title: 'Scan Type', width: 50 },\r\n    ])\r\n\r\n    ViprTablesViewService.getViprTablesView()\r\n    .then(response => {\r\n      setViprData({ data: response.data });\r\n      console.log(response.headers);\r\n    })\r\n  }, []);\r\n  \r\n  const updateViprTablesView = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = { dataSelected };\r\n      const response = await fetch(`http://localhost:5000/vipr_tables_view/${viprData.data.op_mode_id}`,\r\n      {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body)\r\n      });\r\n\r\n      window.location = \"/\";\r\n    } catch (err) {\r\n      console.error(err.message)\r\n    }\r\n  \r\n  }\r\n  \r\n  return (\r\n    <Grid container spacing={3} direction=\"column\">\r\n      <Grid container xs={12} spacing={1}>\r\n        <Grid item xs={4}>\r\n          <Paper className={classes.paper}>\r\n            <MaterialTable\r\n              icons={{\r\n                Arrowdownward: ArrowDownwardIcon,\r\n                Check: Check,\r\n                Clear: Clear,\r\n                DetailPanel: ChevronRight,\r\n                Export: SaveAlt,\r\n                Filter: FilterList,\r\n                FirstPage: FirstPage,\r\n                LastPage: LastPage,\r\n                NextPage: ChevronRight,\r\n                PreviousPage: ChevronLeft,\r\n                ResetSearch: Clear,\r\n                Search: Search,\r\n                ThirdStateCheck: Remove,\r\n                Edit: CreateIcon,\r\n              }}\r\n              title=\"Vipr-Pit\"\r\n              columns={elnotClm}\r\n              data={viprData.data}\r\n              editable={{\r\n                onRowUpdate: (newData, oldData) =>\r\n                  new Promise(resolve => {\r\n                    setTimeout(() => {\r\n                      resolve();\r\n                      const data = [...viprData.data];\r\n                      data[data.indexOf(oldData)] = newData;\r\n                      setViprData({ ...viprData, data });\r\n                      console.log(data);\r\n                    }, 600);\r\n                  }),\r\n              }}\r\n            />\r\n          </Paper>        \r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <Grid item xs={12}>\r\n            <Paper className={classes.paper}>      \r\n              <MaterialTable                \r\n                icons={{\r\n                Check: Check,\r\n                Clear: Clear,\r\n                DetailPanel: ChevronRight,\r\n                Export: SaveAlt,\r\n                Filter: FilterList,\r\n                FirstPage: FirstPage,\r\n                LastPage: LastPage,\r\n                NextPage: ChevronRight,\r\n                PreviousPage: ChevronLeft,\r\n                ResetSearch: Clear,\r\n                Search: Search,\r\n                ThirdStateCheck: Remove,\r\n                Edit: CreateIcon,\r\n              }}\r\n                title=\"\"\r\n                columns={viprClm}\r\n                data={viprData.data}\r\n              />\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>    \r\n    </Grid>      \r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}