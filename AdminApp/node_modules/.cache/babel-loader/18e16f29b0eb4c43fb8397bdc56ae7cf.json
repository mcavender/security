{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CapiniaC\\\\Desktop\\\\Collection\\\\Work\\\\project\\\\security\\\\AdminApp\\\\src\\\\components\\\\pages\\\\viprpit\\\\Vipr-Pit.js\";\nimport React, { useState, useEffect } from 'react';\nimport MaterialTable from 'material-table';\nimport { Grid, Paper, makeStyles } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport Search from '@material-ui/icons/Search';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Check from '@material-ui/icons/Check';\nimport FilterList from '@material-ui/icons/FilterList';\nimport Remove from '@material-ui/icons/Remove';\nimport CreateIcon from '@material-ui/icons/Create';\nimport Clear from '@material-ui/icons/Clear';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport ViprTablesViewService from '../../../services/ViprTablesViewService';\nimport TopMenu from '../sidebar/TopMenu';\nconst useStyles = makeStyles(theme => ({\n  elnotTbl: {\n    margin: theme.spacing(5),\n    padding: theme.spacing(3),\n    width: '25%'\n  },\n  searchInput: {\n    width: '75%'\n  },\n  newButton: {\n    position: 'absolute',\n    right: '10px'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  materialTable: {\n    cellStyle: {\n      textAlign: 'center'\n    },\n    headerStyle: {\n      textAlign: 'center'\n    }\n  }\n}));\nexport default function ViprPit() {\n  const classes = useStyles();\n  const [elnotClm, setElnotClm] = useState([]);\n  const [viprClm, setViprClm] = useState([]);\n  const [viprData, setViprData] = useState({\n    data: []\n  });\n  const [iserror, setIserror] = useState(false);\n  const [errorMessages, setErrorMessages] = useState([]);\n  const [dataSelected, setDataSelected] = useState([]);\n  useEffect(() => {\n    setElnotClm([{\n      field: 'elnot',\n      title: 'Elnot',\n      width: 50\n    }, {\n      field: 'state_id',\n      title: 'Status',\n      width: 50,\n      render: viprData => {\n        return viprData.state_id === 1 ? /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 39\n          }\n        }, \"Valid\") : viprData.state_id === 2 ? /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 41\n          }\n        }, \"Pending\") : viprData.state_id === 3 ? /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 43\n          }\n        }, \"Invalid\") : viprData.state_id === 4 ? /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 45\n          }\n        }, \"Tech Analysis\") : /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }\n        }, viprData.state_id);\n      }\n    }]);\n    setViprClm([{\n      field: 'elnot',\n      title: 'Elnot',\n      width: 50,\n      render: viprData => {\n        return viprData.elnot === \"3\" ? /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            backgroundColor: \"red\",\n            fontWeight: \"bold\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 40\n          }\n        }, viprData.elnot) : viprData.elnot === \"5\" ? /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            backgroundColor: \"#008240\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 42\n          }\n        }, viprData.elnot) : /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }\n        }, viprData.elnot);\n      }\n    }, {\n      field: 'op_mode_id',\n      title: 'Mode',\n      width: 50\n    }, {\n      field: 'rf_mode',\n      title: 'RF Min',\n      width: 50\n    }, {\n      field: 'rf_mode',\n      title: 'RF Max',\n      width: 50\n    }, {\n      field: 'mode_type',\n      title: 'Mode Type',\n      width: 50\n    }, {\n      field: 'pri_seq',\n      title: 'Pri Min',\n      width: 50\n    }, {\n      field: 'pri_seq',\n      title: 'Pri Max',\n      width: 50\n    }, {\n      field: 'pd_mode',\n      title: 'PD Min',\n      width: 50\n    }, {\n      field: 'pd_mode',\n      title: 'PD Max',\n      width: 50\n    }, {\n      field: 'sp_mode',\n      title: 'SP Min',\n      width: 50\n    }, {\n      field: 'sp_mode',\n      title: 'SP Max',\n      width: 50\n    }, {\n      field: 'scan_type',\n      title: 'Scan Type',\n      width: 50\n    }]);\n    ViprTablesViewService.getViprTablesView().then(response => {\n      setViprData({\n        data: response.data\n      });\n      console.log(response.headers);\n    });\n  }, []);\n\n  const handleRowUpdate = (newData, oldData, resolve) => {\n    let errorList = [];\n\n    if (viprData.state_id === \"\") {\n      errorList.push(\"Please enter status\");\n    }\n\n    if (errorList.length < 1) {\n      ViprTablesViewService.updateViprTablesView(\"/vipr_tables_view/\" + newData.op_mode_id, newData).then(res => {\n        const dataUpdate = [...viprData];\n        const index = oldData.op_mode_id;\n        dataUpdate[index] = newData;\n        setViprData([...dataUpdate]);\n        resolve();\n        setIserror(false);\n        setErrorMessages([]);\n      }).catch(error => {\n        setErrorMessages([\"Update failed! Server error\"]);\n        setIserror(true);\n        resolve();\n      });\n    } else {\n      setErrorMessages(errorList);\n      setIserror(true);\n      resolve();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TopMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, iserror && /*#__PURE__*/React.createElement(Alert, {\n    severity: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }, errorMessages.map((msg, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 30\n      }\n    }, msg);\n  }))), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    icons: {\n      Check: Check,\n      Clear: Clear,\n      DetailPanel: ChevronRight,\n      Export: SaveAlt,\n      Filter: FilterList,\n      FirstPage: FirstPage,\n      LastPage: LastPage,\n      NextPage: ChevronRight,\n      PreviousPage: ChevronLeft,\n      ResetSearch: Clear,\n      Search: Search,\n      SortArrow: ArrowDownwardIcon,\n      ThirdStateCheck: Remove,\n      Edit: CreateIcon\n    },\n    title: \"Vipr-Pit\",\n    columns: elnotClm,\n    data: viprData.data,\n    editable: {\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        handleRowUpdate(newData, oldData, resolve);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    icons: {\n      Check: Check,\n      Clear: Clear,\n      DetailPanel: ChevronRight,\n      Export: SaveAlt,\n      Filter: FilterList,\n      FirstPage: FirstPage,\n      LastPage: LastPage,\n      NextPage: ChevronRight,\n      PreviousPage: ChevronLeft,\n      ResetSearch: Clear,\n      Search: Search,\n      SortArrow: ArrowDownwardIcon,\n      ThirdStateCheck: Remove,\n      Edit: CreateIcon\n    },\n    title: \"\",\n    columns: viprClm,\n    data: viprData.data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 15\n    }\n  })))))));\n}","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/AdminApp/src/components/pages/viprpit/Vipr-Pit.js"],"names":["React","useState","useEffect","MaterialTable","Grid","Paper","makeStyles","Alert","Search","SaveAlt","ChevronLeft","ChevronRight","FirstPage","LastPage","Check","FilterList","Remove","CreateIcon","Clear","ArrowDownwardIcon","ViprTablesViewService","TopMenu","useStyles","theme","elnotTbl","margin","spacing","padding","width","searchInput","newButton","position","right","paper","textAlign","color","palette","text","secondary","materialTable","cellStyle","headerStyle","ViprPit","classes","elnotClm","setElnotClm","viprClm","setViprClm","viprData","setViprData","data","iserror","setIserror","errorMessages","setErrorMessages","dataSelected","setDataSelected","field","title","render","state_id","elnot","backgroundColor","fontWeight","getViprTablesView","then","response","console","log","headers","handleRowUpdate","newData","oldData","resolve","errorList","push","length","updateViprTablesView","op_mode_id","res","dataUpdate","index","catch","error","map","msg","i","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","Edit","onRowUpdate","Promise"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport { Grid, Paper, makeStyles } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport Search from '@material-ui/icons/Search'\r\nimport SaveAlt from '@material-ui/icons/SaveAlt'\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft'\r\nimport ChevronRight from '@material-ui/icons/ChevronRight'\r\nimport FirstPage from '@material-ui/icons/FirstPage'\r\nimport LastPage from '@material-ui/icons/LastPage'\r\nimport Check from '@material-ui/icons/Check'\r\nimport FilterList from '@material-ui/icons/FilterList'\r\nimport Remove from '@material-ui/icons/Remove'\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\n\r\nimport ViprTablesViewService from '../../../services/ViprTablesViewService';\r\nimport TopMenu from '../sidebar/TopMenu';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  elnotTbl: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3),\r\n      width: '25%'\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  materialTable: {\r\n    cellStyle: {textAlign:'center'},\r\n    headerStyle: {textAlign:'center'},\r\n  }\r\n}))\r\n\r\n\r\nexport default function ViprPit() {\r\n\r\n  const classes = useStyles();\r\n  const [elnotClm, setElnotClm] = useState([]);\r\n  const [viprClm, setViprClm] = useState([]);\r\n  const [viprData, setViprData] = useState({ data: [] });\r\n  const [iserror, setIserror] = useState(false)\r\n  const [errorMessages, setErrorMessages] = useState([])\r\n  const [dataSelected, setDataSelected] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setElnotClm([      \r\n      {\r\n        field: 'elnot', title: 'Elnot', width: 50\r\n      },\r\n      {\r\n        field: 'state_id', title: 'Status', width: 50,\r\n        render: viprData => {\r\n          return (\r\n            viprData.state_id === 1 ? <p>Valid</p> :\r\n              viprData.state_id === 2 ? <p>Pending</p> :\r\n                viprData.state_id === 3 ? <p>Invalid</p> :\r\n                  viprData.state_id === 4 ? <p>Tech Analysis</p> :\r\n                    <p>{viprData.state_id}</p>)\r\n        },\r\n      },\r\n    ])\r\n\r\n    setViprClm([\r\n      {\r\n        field: 'elnot', title: 'Elnot', width: 50,\r\n        render: viprData => {\r\n            return(\r\n              viprData.elnot === \"3\" ? <p style={{ backgroundColor: \"red\", fontWeight: \"bold\",}}>{viprData.elnot}</p> :\r\n                viprData.elnot === \"5\" ? <p style={{ backgroundColor: \"#008240\" }}>{viprData.elnot}</p> :\r\n                <p>{viprData.elnot}</p>)\r\n        },\r\n      },\r\n      { field: 'op_mode_id', title: 'Mode', width: 50 },\r\n      { field: 'rf_mode', title: 'RF Min', width: 50 },\r\n      { field: 'rf_mode', title: 'RF Max', width: 50 },\r\n      { field: 'mode_type', title: 'Mode Type', width: 50 },\r\n      { field: 'pri_seq', title: 'Pri Min', width: 50 },\r\n      { field: 'pri_seq', title: 'Pri Max', width: 50 },\r\n      { field: 'pd_mode', title: 'PD Min', width: 50 },\r\n      { field: 'pd_mode', title: 'PD Max', width: 50 },\r\n      { field: 'sp_mode', title: 'SP Min', width: 50 },\r\n      { field: 'sp_mode', title: 'SP Max', width: 50 },\r\n      { field: 'scan_type', title: 'Scan Type', width: 50 },\r\n    ])\r\n\r\n    ViprTablesViewService.getViprTablesView()\r\n    .then(response => {\r\n      setViprData({ data: response.data });\r\n      console.log(response.headers);\r\n    })\r\n  }, []);\r\n  \r\n  const handleRowUpdate = (newData, oldData, resolve) => {\r\n\r\n    let errorList = []\r\n\r\n    if (viprData.state_id === \"\") {\r\n      errorList.push(\"Please enter status\")\r\n    }\r\n\r\n    if(errorList.length < 1){\r\n      ViprTablesViewService.updateViprTablesView(\"/vipr_tables_view/\"+newData.op_mode_id, newData)\r\n        .then(res => {\r\n          const dataUpdate = [...viprData];\r\n          const index = oldData.op_mode_id;\r\n          dataUpdate[index] = newData;\r\n          setViprData([...dataUpdate]);\r\n          resolve()\r\n          setIserror(false)\r\n          setErrorMessages([])\r\n        })\r\n        .catch(error => {\r\n          setErrorMessages([\"Update failed! Server error\"])\r\n          setIserror(true)\r\n          resolve()\r\n      })\r\n    }else{\r\n      setErrorMessages(errorList)\r\n      setIserror(true)\r\n      resolve()\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    <TopMenu />\r\n    <Grid container spacing={3} direction=\"column\"> \r\n      <Grid container spacing={1}>\r\n        <Grid item xs={4}>\r\n          <div>\r\n            {iserror && \r\n              <Alert severity=\"error\">\r\n                  {errorMessages.map((msg, i) => {\r\n                      return <div key={i}>{msg}</div>\r\n                  })}\r\n              </Alert>\r\n            }       \r\n          </div>\r\n          <Paper className={classes.paper}>\r\n            <MaterialTable\r\n              icons={{\r\n                Check: Check,\r\n                Clear: Clear,\r\n                DetailPanel: ChevronRight,\r\n                Export: SaveAlt,\r\n                Filter: FilterList,\r\n                FirstPage: FirstPage,\r\n                LastPage: LastPage,\r\n                NextPage: ChevronRight,\r\n                PreviousPage: ChevronLeft,\r\n                ResetSearch: Clear,\r\n                Search: Search,\r\n                SortArrow: ArrowDownwardIcon,\r\n                ThirdStateCheck: Remove,\r\n                Edit: CreateIcon,\r\n              }}\r\n              title=\"Vipr-Pit\"\r\n              columns={elnotClm}\r\n              data={viprData.data}\r\n              editable={{\r\n                onRowUpdate: (newData, oldData) =>\r\n                new Promise((resolve) => {\r\n                    handleRowUpdate(newData, oldData, resolve);                     \r\n                }),\r\n              }}\r\n            />\r\n          </Paper>        \r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <Grid item xs={12}>\r\n            <Paper className={classes.paper}>      \r\n              <MaterialTable                \r\n                icons={{\r\n                  Check: Check,\r\n                  Clear: Clear,\r\n                  DetailPanel: ChevronRight,\r\n                  Export: SaveAlt,\r\n                  Filter: FilterList,\r\n                  FirstPage: FirstPage,\r\n                  LastPage: LastPage,\r\n                  NextPage: ChevronRight,\r\n                  PreviousPage: ChevronLeft,\r\n                  ResetSearch: Clear,\r\n                  Search: Search,\r\n                  SortArrow: ArrowDownwardIcon,\r\n                  ThirdStateCheck: Remove,\r\n                  Edit: CreateIcon,\r\n              }}\r\n                title=\"\"\r\n                columns={viprClm}\r\n                data={viprData.data}\r\n              />\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>    \r\n    </Grid>      \r\n    </>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}