{"ast":null,"code":"/**\r\n * DevExtreme (ui/text_box/ui.text_editor.base.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\n\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\n\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\n\nvar _dom = require(\"../../core/utils/dom\");\n\nvar _selectors = require(\"../widget/selectors\");\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _array = require(\"../../core/utils/array\");\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _themes = require(\"../themes\");\n\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\n\nvar _editor = _interopRequireDefault(require(\"../editor/editor\"));\n\nvar _index = require(\"../../events/utils/index\");\n\nvar _pointer = _interopRequireDefault(require(\"../../events/pointer\"));\n\nvar _uiText_editor = _interopRequireDefault(require(\"./ui.text_editor.clear\"));\n\nvar _index2 = _interopRequireDefault(require(\"./texteditor_button_collection/index\"));\n\nvar _config = _interopRequireDefault(require(\"../../core/config\"));\n\nvar _ui = _interopRequireDefault(require(\"../widget/ui.errors\"));\n\nvar _deferred = require(\"../../core/utils/deferred\");\n\nvar _load_indicator = _interopRequireDefault(require(\"../load_indicator\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar TEXTEDITOR_CLASS = \"dx-texteditor\";\nvar TEXTEDITOR_INPUT_CONTAINER_CLASS = \"dx-texteditor-input-container\";\nvar TEXTEDITOR_INPUT_CLASS = \"dx-texteditor-input\";\nvar TEXTEDITOR_INPUT_SELECTOR = \".\" + TEXTEDITOR_INPUT_CLASS;\nvar TEXTEDITOR_CONTAINER_CLASS = \"dx-texteditor-container\";\nvar TEXTEDITOR_BUTTONS_CONTAINER_CLASS = \"dx-texteditor-buttons-container\";\nvar TEXTEDITOR_PLACEHOLDER_CLASS = \"dx-placeholder\";\nvar TEXTEDITOR_EMPTY_INPUT_CLASS = \"dx-texteditor-empty\";\nvar TEXTEDITOR_STYLING_MODE_PREFIX = \"dx-editor-\";\nvar ALLOWED_STYLE_CLASSES = [TEXTEDITOR_STYLING_MODE_PREFIX + \"outlined\", TEXTEDITOR_STYLING_MODE_PREFIX + \"filled\", TEXTEDITOR_STYLING_MODE_PREFIX + \"underlined\"];\nvar STATE_INVISIBLE_CLASS = \"dx-state-invisible\";\nvar TEXTEDITOR_PENDING_INDICATOR_CLASS = \"dx-pending-indicator\";\nvar TEXTEDITOR_VALIDATION_PENDING_CLASS = \"dx-validation-pending\";\nvar TEXTEDITOR_VALID_CLASS = \"dx-valid\";\nvar EVENTS_LIST = [\"KeyDown\", \"KeyPress\", \"KeyUp\", \"Change\", \"Cut\", \"Copy\", \"Paste\", \"Input\"];\nvar CONTROL_KEYS = [\"tab\", \"enter\", \"shift\", \"control\", \"alt\", \"escape\", \"pageUp\", \"pageDown\", \"end\", \"home\", \"leftArrow\", \"upArrow\", \"rightArrow\", \"downArrow\"];\n\nfunction checkButtonsOptionType(buttons) {\n  if ((0, _type.isDefined)(buttons) && !Array.isArray(buttons)) {\n    throw _ui.default.Error(\"E1053\");\n  }\n}\n\nvar TextEditorBase = _editor.default.inherit({\n  ctor: function (_, options) {\n    if (options) {\n      checkButtonsOptionType(options.buttons);\n    }\n\n    this._buttonCollection = new _index2.default(this, this._getDefaultButtons());\n    this._$beforeButtonsContainer = null;\n    this._$afterButtonsContainer = null;\n    this.callBase.apply(this, arguments);\n  },\n  _getDefaultOptions: function () {\n    return (0, _extend.extend)(this.callBase(), {\n      buttons: void 0,\n      value: \"\",\n      spellcheck: false,\n      showClearButton: false,\n      valueChangeEvent: \"change\",\n      placeholder: \"\",\n      inputAttr: {},\n      onFocusIn: null,\n      onFocusOut: null,\n      onKeyDown: null,\n      onKeyPress: null,\n      onKeyUp: null,\n      onChange: null,\n      onInput: null,\n      onCut: null,\n      onCopy: null,\n      onPaste: null,\n      onEnterKey: null,\n      mode: \"text\",\n      hoverStateEnabled: true,\n      focusStateEnabled: true,\n      text: void 0,\n      displayValueFormatter: function (value) {\n        return (0, _type.isDefined)(value) && false !== value ? value : \"\";\n      },\n      stylingMode: (0, _config.default)().editorStylingMode || \"outlined\",\n      showValidationMark: true\n    });\n  },\n  _defaultOptionsRules: function () {\n    var themeName = (0, _themes.current)();\n    return this.callBase().concat([{\n      device: function () {\n        return (0, _themes.isMaterial)(themeName);\n      },\n      options: {\n        stylingMode: (0, _config.default)().editorStylingMode || \"underlined\"\n      }\n    }]);\n  },\n  _setDeprecatedOptions: function () {\n    this.callBase();\n    (0, _extend.extend)(this._deprecatedOptions, {\n      onKeyPress: {\n        since: \"20.1\",\n        message: \"This event is removed from the web standards and will be deprecated in modern browsers soon.\"\n      }\n    });\n  },\n  _getDefaultButtons: function () {\n    return [{\n      name: \"clear\",\n      Ctor: _uiText_editor.default\n    }];\n  },\n  _isClearButtonVisible: function () {\n    return this.option(\"showClearButton\") && !this.option(\"readOnly\");\n  },\n  _input: function () {\n    return this.$element().find(TEXTEDITOR_INPUT_SELECTOR).first();\n  },\n  _isFocused: function () {\n    return (0, _selectors.focused)(this._input()) || this.callBase();\n  },\n  _inputWrapper: function () {\n    return this.$element();\n  },\n  _buttonsContainer: function () {\n    return this._inputWrapper().find(\".\" + TEXTEDITOR_BUTTONS_CONTAINER_CLASS).eq(0);\n  },\n  _isControlKey: function (key) {\n    return CONTROL_KEYS.indexOf(key) !== -1;\n  },\n  _renderStylingMode: function () {\n    var _this = this;\n\n    var optionName = \"stylingMode\";\n    var optionValue = this.option(optionName);\n    ALLOWED_STYLE_CLASSES.forEach(function (className) {\n      return _this.$element().removeClass(className);\n    });\n    var stylingModeClass = TEXTEDITOR_STYLING_MODE_PREFIX + optionValue;\n\n    if (ALLOWED_STYLE_CLASSES.indexOf(stylingModeClass) === -1) {\n      var defaultOptionValue = this._getDefaultOptions()[optionName];\n\n      var platformOptionValue = this._convertRulesToOptions(this._defaultOptionsRules())[optionName];\n\n      stylingModeClass = TEXTEDITOR_STYLING_MODE_PREFIX + (platformOptionValue || defaultOptionValue);\n    }\n\n    this.$element().addClass(stylingModeClass);\n\n    this._updateButtonsStyling(optionValue);\n  },\n  _initMarkup: function () {\n    this.$element().addClass(TEXTEDITOR_CLASS);\n\n    this._renderInput();\n\n    this._renderStylingMode();\n\n    this._renderInputType();\n\n    this._renderPlaceholder();\n\n    this._renderProps();\n\n    this.callBase();\n\n    this._renderValue();\n  },\n  _render: function () {\n    this._renderPlaceholder();\n\n    this._refreshValueChangeEvent();\n\n    this._renderEvents();\n\n    this._renderEnterKeyAction();\n\n    this._renderEmptinessEvent();\n\n    this.callBase();\n  },\n  _renderInput: function () {\n    this._$buttonsContainer = this._$textEditorContainer = (0, _renderer.default)(\"<div>\").addClass(TEXTEDITOR_CONTAINER_CLASS).appendTo(this.$element());\n    this._$textEditorInputContainer = (0, _renderer.default)(\"<div>\").addClass(TEXTEDITOR_INPUT_CONTAINER_CLASS).appendTo(this._$textEditorContainer);\n\n    this._$textEditorInputContainer.append(this._createInput());\n\n    this._renderButtonContainers();\n  },\n  _getInputContainer: function () {\n    return this._$textEditorInputContainer;\n  },\n  _renderPendingIndicator: function () {\n    this.$element().addClass(TEXTEDITOR_VALIDATION_PENDING_CLASS);\n\n    var $inputContainer = this._getInputContainer();\n\n    var $indicatorElement = (0, _renderer.default)(\"<div>\").addClass(TEXTEDITOR_PENDING_INDICATOR_CLASS).appendTo($inputContainer);\n    this._pendingIndicator = this._createComponent($indicatorElement, _load_indicator.default);\n  },\n  _disposePendingIndicator: function () {\n    if (!this._pendingIndicator) {\n      return;\n    }\n\n    this._pendingIndicator.dispose();\n\n    this._pendingIndicator.$element().remove();\n\n    this._pendingIndicator = null;\n    this.$element().removeClass(TEXTEDITOR_VALIDATION_PENDING_CLASS);\n  },\n  _renderValidationState: function () {\n    this.callBase();\n    var isPending = \"pending\" === this.option(\"validationStatus\");\n    var $element = this.$element();\n\n    if (isPending) {\n      !this._pendingIndicator && this._renderPendingIndicator();\n      this._showValidMark = false;\n    } else {\n      if (\"invalid\" === this.option(\"validationStatus\")) {\n        this._showValidMark = false;\n      }\n\n      if (!this._showValidMark && true === this.option(\"showValidationMark\")) {\n        this._showValidMark = \"valid\" === this.option(\"validationStatus\") && !!this._pendingIndicator;\n      }\n\n      this._disposePendingIndicator();\n    }\n\n    $element.toggleClass(TEXTEDITOR_VALID_CLASS, !!this._showValidMark);\n  },\n  _renderButtonContainers: function () {\n    var buttons = this.option(\"buttons\");\n    this._$beforeButtonsContainer = this._buttonCollection.renderBeforeButtons(buttons, this._$buttonsContainer);\n    this._$afterButtonsContainer = this._buttonCollection.renderAfterButtons(buttons, this._$buttonsContainer);\n  },\n  _clean: function () {\n    this._buttonCollection.clean();\n\n    this._disposePendingIndicator();\n\n    this._$beforeButtonsContainer = null;\n    this._$afterButtonsContainer = null;\n    this._$textEditorContainer = null;\n    this._$buttonsContainer = null;\n    this.callBase();\n  },\n  _createInput: function () {\n    var $input = (0, _renderer.default)(\"<input>\");\n\n    this._applyInputAttributes($input, this.option(\"inputAttr\"));\n\n    return $input;\n  },\n  _setSubmitElementName: function (name) {\n    var inputAttrName = this.option(\"inputAttr.name\");\n    return this.callBase(name || inputAttrName || \"\");\n  },\n  _applyInputAttributes: function ($input, customAttributes) {\n    var inputAttributes = (0, _extend.extend)(this._getDefaultAttributes(), customAttributes);\n    $input.attr(inputAttributes).addClass(TEXTEDITOR_INPUT_CLASS).css(\"minHeight\", this.option(\"height\") ? \"0\" : \"\");\n  },\n  _getDefaultAttributes: function () {\n    var defaultAttributes = {\n      autocomplete: \"off\"\n    };\n\n    var _devices$real = _devices.default.real(),\n        ios = _devices$real.ios,\n        mac = _devices$real.mac;\n\n    if (ios || mac) {\n      defaultAttributes.placeholder = \" \";\n    }\n\n    return defaultAttributes;\n  },\n  _updateButtons: function (names) {\n    this._buttonCollection.updateButtons(names);\n  },\n  _updateButtonsStyling: function (editorStylingMode) {\n    var _this2 = this;\n\n    (0, _iterator.each)(this.option(\"buttons\"), function (_, buttonOptions) {\n      if (buttonOptions.options && !buttonOptions.options.stylingMode) {\n        var buttonInstance = _this2.getButton(buttonOptions.name);\n\n        buttonInstance.option && buttonInstance.option(\"stylingMode\", \"underlined\" === editorStylingMode ? \"text\" : \"contained\");\n      }\n    });\n  },\n  _renderValue: function () {\n    var renderInputPromise = this._renderInputValue();\n\n    return renderInputPromise.promise();\n  },\n  _renderInputValue: function (value) {\n    var _value;\n\n    value = null !== (_value = value) && void 0 !== _value ? _value : this.option(\"value\");\n    var text = this.option(\"text\");\n    var displayValue = this.option(\"displayValue\");\n    var displayValueFormatter = this.option(\"displayValueFormatter\");\n\n    if (void 0 !== displayValue && null !== value) {\n      text = displayValueFormatter(displayValue);\n    } else {\n      if (!(0, _type.isDefined)(text)) {\n        text = displayValueFormatter(value);\n      }\n    }\n\n    this.option(\"text\", text);\n\n    if (this._input().val() !== ((0, _type.isDefined)(text) ? text : \"\")) {\n      this._renderDisplayText(text);\n    } else {\n      this._toggleEmptinessEventHandler();\n    }\n\n    return new _deferred.Deferred().resolve();\n  },\n  _renderDisplayText: function (text) {\n    this._input().val(text);\n\n    this._toggleEmptinessEventHandler();\n  },\n  _isValueValid: function () {\n    if (this._input().length) {\n      var validity = this._input().get(0).validity;\n\n      if (validity) {\n        return validity.valid;\n      }\n    }\n\n    return true;\n  },\n  _toggleEmptiness: function (isEmpty) {\n    this.$element().toggleClass(TEXTEDITOR_EMPTY_INPUT_CLASS, isEmpty);\n\n    this._togglePlaceholder(isEmpty);\n  },\n  _togglePlaceholder: function (isEmpty) {\n    this.$element().find(\".\".concat(TEXTEDITOR_PLACEHOLDER_CLASS)).eq(0).toggleClass(STATE_INVISIBLE_CLASS, !isEmpty);\n  },\n  _renderProps: function () {\n    this._toggleReadOnlyState();\n\n    this._toggleSpellcheckState();\n\n    this._toggleTabIndex();\n  },\n  _toggleDisabledState: function (value) {\n    this.callBase.apply(this, arguments);\n\n    var $input = this._input();\n\n    $input.prop(\"disabled\", value);\n  },\n  _toggleTabIndex: function () {\n    var $input = this._input();\n\n    var disabled = this.option(\"disabled\");\n    var focusStateEnabled = this.option(\"focusStateEnabled\");\n\n    if (disabled || !focusStateEnabled) {\n      $input.attr(\"tabIndex\", -1);\n    } else {\n      $input.removeAttr(\"tabIndex\");\n    }\n  },\n  _toggleReadOnlyState: function () {\n    this._input().prop(\"readOnly\", this._readOnlyPropValue());\n\n    this.callBase();\n  },\n  _readOnlyPropValue: function () {\n    return this.option(\"readOnly\");\n  },\n  _toggleSpellcheckState: function () {\n    this._input().prop(\"spellcheck\", this.option(\"spellcheck\"));\n  },\n  _renderPlaceholder: function () {\n    this._renderPlaceholderMarkup();\n\n    this._attachPlaceholderEvents();\n  },\n  _renderPlaceholderMarkup: function () {\n    if (this._$placeholder) {\n      this._$placeholder.remove();\n\n      this._$placeholder = null;\n    }\n\n    var $input = this._input();\n\n    var placeholderText = this.option(\"placeholder\");\n    var $placeholder = this._$placeholder = (0, _renderer.default)(\"<div>\").attr(\"data-dx_placeholder\", placeholderText);\n    $placeholder.insertAfter($input);\n    $placeholder.addClass(TEXTEDITOR_PLACEHOLDER_CLASS);\n  },\n  _attachPlaceholderEvents: function () {\n    var _this3 = this;\n\n    var startEvent = (0, _index.addNamespace)(_pointer.default.up, this.NAME);\n\n    _events_engine.default.on(this._$placeholder, startEvent, function () {\n      _events_engine.default.trigger(_this3._input(), \"focus\");\n    });\n\n    this._toggleEmptinessEventHandler();\n  },\n  _placeholder: function () {\n    return this._$placeholder || (0, _renderer.default)();\n  },\n  _clearValueHandler: function (e) {\n    var $input = this._input();\n\n    e.stopPropagation();\n\n    this._saveValueChangeEvent(e);\n\n    this._clearValue();\n\n    !this._isFocused() && _events_engine.default.trigger($input, \"focus\");\n\n    _events_engine.default.trigger($input, \"input\");\n  },\n  _clearValue: function () {\n    this.reset();\n  },\n  _renderEvents: function () {\n    var _this4 = this;\n\n    var $input = this._input();\n\n    (0, _iterator.each)(EVENTS_LIST, function (_, event) {\n      if (_this4.hasActionSubscription(\"on\" + event)) {\n        var action = _this4._createActionByOption(\"on\" + event, {\n          excludeValidators: [\"readOnly\"]\n        });\n\n        _events_engine.default.on($input, (0, _index.addNamespace)(event.toLowerCase(), _this4.NAME), function (e) {\n          if (_this4._disposed) {\n            return;\n          }\n\n          action({\n            event: e\n          });\n        });\n      }\n    });\n  },\n  _refreshEvents: function () {\n    var _this5 = this;\n\n    var $input = this._input();\n\n    (0, _iterator.each)(EVENTS_LIST, function (_, event) {\n      _events_engine.default.off($input, (0, _index.addNamespace)(event.toLowerCase(), _this5.NAME));\n    });\n\n    this._renderEvents();\n  },\n  _keyPressHandler: function () {\n    this.option(\"text\", this._input().val());\n  },\n  _keyDownHandler: function (e) {\n    var $input = this._input();\n\n    var isCtrlEnter = e.ctrlKey && \"enter\" === (0, _index.normalizeKeyName)(e);\n    var isNewValue = $input.val() !== this.option(\"value\");\n\n    if (isCtrlEnter && isNewValue) {\n      _events_engine.default.trigger($input, \"change\");\n    }\n  },\n  _renderValueChangeEvent: function () {\n    var keyPressEvent = (0, _index.addNamespace)(this._renderValueEventName(), \"\".concat(this.NAME, \"TextChange\"));\n    var valueChangeEvent = (0, _index.addNamespace)(this.option(\"valueChangeEvent\"), \"\".concat(this.NAME, \"ValueChange\"));\n    var keyDownEvent = (0, _index.addNamespace)(\"keydown\", \"\".concat(this.NAME, \"TextChange\"));\n\n    var $input = this._input();\n\n    _events_engine.default.on($input, keyPressEvent, this._keyPressHandler.bind(this));\n\n    _events_engine.default.on($input, valueChangeEvent, this._valueChangeEventHandler.bind(this));\n\n    _events_engine.default.on($input, keyDownEvent, this._keyDownHandler.bind(this));\n  },\n  _cleanValueChangeEvent: function () {\n    var valueChangeNamespace = \".\".concat(this.NAME, \"ValueChange\");\n    var textChangeNamespace = \".\".concat(this.NAME, \"TextChange\");\n\n    _events_engine.default.off(this._input(), valueChangeNamespace);\n\n    _events_engine.default.off(this._input(), textChangeNamespace);\n  },\n  _refreshValueChangeEvent: function () {\n    this._cleanValueChangeEvent();\n\n    this._renderValueChangeEvent();\n  },\n  _renderValueEventName: function () {\n    return \"input change keypress\";\n  },\n  _focusTarget: function () {\n    return this._input();\n  },\n  _focusEventTarget: function () {\n    return this.element();\n  },\n  _isInput: function (element) {\n    return element === this._input().get(0);\n  },\n  _preventNestedFocusEvent: function (event) {\n    if (event.isDefaultPrevented()) {\n      return true;\n    }\n\n    var result = this._isNestedTarget(event.relatedTarget);\n\n    if (\"focusin\" === event.type) {\n      result = result && this._isNestedTarget(event.target) && !this._isInput(event.target);\n    }\n\n    result && event.preventDefault();\n    return result;\n  },\n  _isNestedTarget: function (target) {\n    return !!this.$element().find(target).length;\n  },\n  _focusClassTarget: function () {\n    return this.$element();\n  },\n  _focusInHandler: function (event) {\n    this._preventNestedFocusEvent(event);\n\n    this.callBase.apply(this, arguments);\n  },\n  _focusOutHandler: function (event) {\n    this._preventNestedFocusEvent(event);\n\n    this.callBase.apply(this, arguments);\n  },\n  _toggleFocusClass: function (isFocused, $element) {\n    this.callBase(isFocused, this._focusClassTarget($element));\n  },\n  _hasFocusClass: function (element) {\n    return this.callBase((0, _renderer.default)(element || this.$element()));\n  },\n  _renderEmptinessEvent: function () {\n    var $input = this._input();\n\n    _events_engine.default.on($input, \"input blur\", this._toggleEmptinessEventHandler.bind(this));\n  },\n  _toggleEmptinessEventHandler: function () {\n    var text = this._input().val();\n\n    var isEmpty = (\"\" === text || null === text) && this._isValueValid();\n\n    this._toggleEmptiness(isEmpty);\n  },\n  _valueChangeEventHandler: function (e, formattedValue) {\n    this._saveValueChangeEvent(e);\n\n    this.option(\"value\", arguments.length > 1 ? formattedValue : this._input().val());\n\n    this._saveValueChangeEvent(void 0);\n  },\n  _renderEnterKeyAction: function () {\n    this._enterKeyAction = this._createActionByOption(\"onEnterKey\", {\n      excludeValidators: [\"readOnly\"]\n    });\n\n    _events_engine.default.off(this._input(), \"keyup.onEnterKey.dxTextEditor\");\n\n    _events_engine.default.on(this._input(), \"keyup.onEnterKey.dxTextEditor\", this._enterKeyHandlerUp.bind(this));\n  },\n  _enterKeyHandlerUp: function (e) {\n    if (this._disposed) {\n      return;\n    }\n\n    if (\"enter\" === (0, _index.normalizeKeyName)(e)) {\n      this._enterKeyAction({\n        event: e\n      });\n    }\n  },\n  _updateValue: function () {\n    this._options.silent(\"text\", null);\n\n    this._renderValue();\n  },\n  _dispose: function () {\n    this._enterKeyAction = void 0;\n    this.callBase();\n  },\n  _getSubmitElement: function () {\n    return this._input();\n  },\n  _optionChanged: function (args) {\n    var name = args.name,\n        fullName = args.fullName,\n        value = args.value;\n\n    if ((0, _array.inArray)(name.replace(\"on\", \"\"), EVENTS_LIST) > -1) {\n      this._refreshEvents();\n\n      return;\n    }\n\n    switch (name) {\n      case \"valueChangeEvent\":\n        this._refreshValueChangeEvent();\n\n        this._refreshFocusEvent();\n\n        this._refreshEvents();\n\n        break;\n\n      case \"onValueChanged\":\n        this._createValueChangeAction();\n\n        break;\n\n      case \"focusStateEnabled\":\n        this.callBase(args);\n\n        this._toggleTabIndex();\n\n        break;\n\n      case \"spellcheck\":\n        this._toggleSpellcheckState();\n\n        break;\n\n      case \"mode\":\n        this._renderInputType();\n\n        break;\n\n      case \"onEnterKey\":\n        this._renderEnterKeyAction();\n\n        break;\n\n      case \"placeholder\":\n        this._renderPlaceholder();\n\n        break;\n\n      case \"readOnly\":\n      case \"disabled\":\n        this._updateButtons();\n\n        this.callBase(args);\n        break;\n\n      case \"showClearButton\":\n        this._updateButtons([\"clear\"]);\n\n        break;\n\n      case \"text\":\n        break;\n\n      case \"value\":\n        this._updateValue();\n\n        this.callBase(args);\n        break;\n\n      case \"inputAttr\":\n        this._applyInputAttributes(this._input(), this.option(name));\n\n        break;\n\n      case \"stylingMode\":\n        this._renderStylingMode();\n\n        break;\n\n      case \"buttons\":\n        if (fullName === name) {\n          checkButtonsOptionType(value);\n        }\n\n        this._$beforeButtonsContainer && this._$beforeButtonsContainer.remove();\n        this._$afterButtonsContainer && this._$afterButtonsContainer.remove();\n\n        this._buttonCollection.clean();\n\n        this._renderButtonContainers();\n\n        break;\n\n      case \"displayValueFormatter\":\n        this._invalidate();\n\n        break;\n\n      case \"showValidationMark\":\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _renderInputType: function () {\n    this._setInputType(this.option(\"mode\"));\n  },\n  _setInputType: function (type) {\n    var input = this._input();\n\n    if (\"search\" === type) {\n      type = \"text\";\n    }\n\n    try {\n      input.prop(\"type\", type);\n    } catch (e) {\n      input.prop(\"type\", \"text\");\n    }\n  },\n  getButton: function (name) {\n    return this._buttonCollection.getButton(name);\n  },\n  focus: function () {\n    _events_engine.default.trigger(this._input(), \"focus\");\n  },\n  blur: function () {\n    if (this._input().is(_dom_adapter.default.getActiveElement())) {\n      (0, _dom.resetActiveElement)();\n    }\n  },\n  reset: function () {\n    if (this._showValidMark) {\n      this._showValidMark = false;\n\n      this._renderValidationState();\n    }\n\n    var defaultOptions = this._getDefaultOptions();\n\n    if (this.option(\"value\") === defaultOptions.value) {\n      this._options.silent(\"text\", \"\");\n\n      this._renderValue();\n    } else {\n      this.option(\"value\", defaultOptions.value);\n    }\n  },\n  on: function (eventName, eventHandler) {\n    var result = this.callBase(eventName, eventHandler);\n    var event = eventName.charAt(0).toUpperCase() + eventName.substr(1);\n\n    if (EVENTS_LIST.indexOf(event) >= 0) {\n      this._refreshEvents();\n    }\n\n    return result;\n  }\n});\n\nvar _default = TextEditorBase;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/node_modules/devextreme/ui/text_box/ui.text_editor.base.js"],"names":["exports","default","_renderer","_interopRequireDefault","require","_dom_adapter","_events_engine","_dom","_selectors","_type","_extend","_array","_iterator","_themes","_devices","_editor","_index","_pointer","_uiText_editor","_index2","_config","_ui","_deferred","_load_indicator","obj","__esModule","TEXTEDITOR_CLASS","TEXTEDITOR_INPUT_CONTAINER_CLASS","TEXTEDITOR_INPUT_CLASS","TEXTEDITOR_INPUT_SELECTOR","TEXTEDITOR_CONTAINER_CLASS","TEXTEDITOR_BUTTONS_CONTAINER_CLASS","TEXTEDITOR_PLACEHOLDER_CLASS","TEXTEDITOR_EMPTY_INPUT_CLASS","TEXTEDITOR_STYLING_MODE_PREFIX","ALLOWED_STYLE_CLASSES","STATE_INVISIBLE_CLASS","TEXTEDITOR_PENDING_INDICATOR_CLASS","TEXTEDITOR_VALIDATION_PENDING_CLASS","TEXTEDITOR_VALID_CLASS","EVENTS_LIST","CONTROL_KEYS","checkButtonsOptionType","buttons","isDefined","Array","isArray","Error","TextEditorBase","inherit","ctor","_","options","_buttonCollection","_getDefaultButtons","_$beforeButtonsContainer","_$afterButtonsContainer","callBase","apply","arguments","_getDefaultOptions","extend","value","spellcheck","showClearButton","valueChangeEvent","placeholder","inputAttr","onFocusIn","onFocusOut","onKeyDown","onKeyPress","onKeyUp","onChange","onInput","onCut","onCopy","onPaste","onEnterKey","mode","hoverStateEnabled","focusStateEnabled","text","displayValueFormatter","stylingMode","editorStylingMode","showValidationMark","_defaultOptionsRules","themeName","current","concat","device","isMaterial","_setDeprecatedOptions","_deprecatedOptions","since","message","name","Ctor","_isClearButtonVisible","option","_input","$element","find","first","_isFocused","focused","_inputWrapper","_buttonsContainer","eq","_isControlKey","key","indexOf","_renderStylingMode","_this","optionName","optionValue","forEach","className","removeClass","stylingModeClass","defaultOptionValue","platformOptionValue","_convertRulesToOptions","addClass","_updateButtonsStyling","_initMarkup","_renderInput","_renderInputType","_renderPlaceholder","_renderProps","_renderValue","_render","_refreshValueChangeEvent","_renderEvents","_renderEnterKeyAction","_renderEmptinessEvent","_$buttonsContainer","_$textEditorContainer","appendTo","_$textEditorInputContainer","append","_createInput","_renderButtonContainers","_getInputContainer","_renderPendingIndicator","$inputContainer","$indicatorElement","_pendingIndicator","_createComponent","_disposePendingIndicator","dispose","remove","_renderValidationState","isPending","_showValidMark","toggleClass","renderBeforeButtons","renderAfterButtons","_clean","clean","$input","_applyInputAttributes","_setSubmitElementName","inputAttrName","customAttributes","inputAttributes","_getDefaultAttributes","attr","css","defaultAttributes","autocomplete","_devices$real","real","ios","mac","_updateButtons","names","updateButtons","_this2","each","buttonOptions","buttonInstance","getButton","renderInputPromise","_renderInputValue","promise","_value","displayValue","val","_renderDisplayText","_toggleEmptinessEventHandler","Deferred","resolve","_isValueValid","length","validity","get","valid","_toggleEmptiness","isEmpty","_togglePlaceholder","_toggleReadOnlyState","_toggleSpellcheckState","_toggleTabIndex","_toggleDisabledState","prop","disabled","removeAttr","_readOnlyPropValue","_renderPlaceholderMarkup","_attachPlaceholderEvents","_$placeholder","placeholderText","$placeholder","insertAfter","_this3","startEvent","addNamespace","up","NAME","on","trigger","_placeholder","_clearValueHandler","e","stopPropagation","_saveValueChangeEvent","_clearValue","reset","_this4","event","hasActionSubscription","action","_createActionByOption","excludeValidators","toLowerCase","_disposed","_refreshEvents","_this5","off","_keyPressHandler","_keyDownHandler","isCtrlEnter","ctrlKey","normalizeKeyName","isNewValue","_renderValueChangeEvent","keyPressEvent","_renderValueEventName","keyDownEvent","bind","_valueChangeEventHandler","_cleanValueChangeEvent","valueChangeNamespace","textChangeNamespace","_focusTarget","_focusEventTarget","element","_isInput","_preventNestedFocusEvent","isDefaultPrevented","result","_isNestedTarget","relatedTarget","type","target","preventDefault","_focusClassTarget","_focusInHandler","_focusOutHandler","_toggleFocusClass","isFocused","_hasFocusClass","formattedValue","_enterKeyAction","_enterKeyHandlerUp","_updateValue","_options","silent","_dispose","_getSubmitElement","_optionChanged","args","fullName","inArray","replace","_refreshFocusEvent","_createValueChangeAction","_invalidate","_setInputType","input","focus","blur","is","getActiveElement","resetActiveElement","defaultOptions","eventName","eventHandler","charAt","toUpperCase","substr","_default","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/text_box/ui.text_editor.base.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _dom = require(\"../../core/utils/dom\");\r\nvar _selectors = require(\"../widget/selectors\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _themes = require(\"../themes\");\r\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\r\nvar _editor = _interopRequireDefault(require(\"../editor/editor\"));\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _pointer = _interopRequireDefault(require(\"../../events/pointer\"));\r\nvar _uiText_editor = _interopRequireDefault(require(\"./ui.text_editor.clear\"));\r\nvar _index2 = _interopRequireDefault(require(\"./texteditor_button_collection/index\"));\r\nvar _config = _interopRequireDefault(require(\"../../core/config\"));\r\nvar _ui = _interopRequireDefault(require(\"../widget/ui.errors\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _load_indicator = _interopRequireDefault(require(\"../load_indicator\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar TEXTEDITOR_CLASS = \"dx-texteditor\";\r\nvar TEXTEDITOR_INPUT_CONTAINER_CLASS = \"dx-texteditor-input-container\";\r\nvar TEXTEDITOR_INPUT_CLASS = \"dx-texteditor-input\";\r\nvar TEXTEDITOR_INPUT_SELECTOR = \".\" + TEXTEDITOR_INPUT_CLASS;\r\nvar TEXTEDITOR_CONTAINER_CLASS = \"dx-texteditor-container\";\r\nvar TEXTEDITOR_BUTTONS_CONTAINER_CLASS = \"dx-texteditor-buttons-container\";\r\nvar TEXTEDITOR_PLACEHOLDER_CLASS = \"dx-placeholder\";\r\nvar TEXTEDITOR_EMPTY_INPUT_CLASS = \"dx-texteditor-empty\";\r\nvar TEXTEDITOR_STYLING_MODE_PREFIX = \"dx-editor-\";\r\nvar ALLOWED_STYLE_CLASSES = [TEXTEDITOR_STYLING_MODE_PREFIX + \"outlined\", TEXTEDITOR_STYLING_MODE_PREFIX + \"filled\", TEXTEDITOR_STYLING_MODE_PREFIX + \"underlined\"];\r\nvar STATE_INVISIBLE_CLASS = \"dx-state-invisible\";\r\nvar TEXTEDITOR_PENDING_INDICATOR_CLASS = \"dx-pending-indicator\";\r\nvar TEXTEDITOR_VALIDATION_PENDING_CLASS = \"dx-validation-pending\";\r\nvar TEXTEDITOR_VALID_CLASS = \"dx-valid\";\r\nvar EVENTS_LIST = [\"KeyDown\", \"KeyPress\", \"KeyUp\", \"Change\", \"Cut\", \"Copy\", \"Paste\", \"Input\"];\r\nvar CONTROL_KEYS = [\"tab\", \"enter\", \"shift\", \"control\", \"alt\", \"escape\", \"pageUp\", \"pageDown\", \"end\", \"home\", \"leftArrow\", \"upArrow\", \"rightArrow\", \"downArrow\"];\r\n\r\nfunction checkButtonsOptionType(buttons) {\r\n    if ((0, _type.isDefined)(buttons) && !Array.isArray(buttons)) {\r\n        throw _ui.default.Error(\"E1053\")\r\n    }\r\n}\r\nvar TextEditorBase = _editor.default.inherit({\r\n    ctor: function(_, options) {\r\n        if (options) {\r\n            checkButtonsOptionType(options.buttons)\r\n        }\r\n        this._buttonCollection = new _index2.default(this, this._getDefaultButtons());\r\n        this._$beforeButtonsContainer = null;\r\n        this._$afterButtonsContainer = null;\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            buttons: void 0,\r\n            value: \"\",\r\n            spellcheck: false,\r\n            showClearButton: false,\r\n            valueChangeEvent: \"change\",\r\n            placeholder: \"\",\r\n            inputAttr: {},\r\n            onFocusIn: null,\r\n            onFocusOut: null,\r\n            onKeyDown: null,\r\n            onKeyPress: null,\r\n            onKeyUp: null,\r\n            onChange: null,\r\n            onInput: null,\r\n            onCut: null,\r\n            onCopy: null,\r\n            onPaste: null,\r\n            onEnterKey: null,\r\n            mode: \"text\",\r\n            hoverStateEnabled: true,\r\n            focusStateEnabled: true,\r\n            text: void 0,\r\n            displayValueFormatter: function(value) {\r\n                return (0, _type.isDefined)(value) && false !== value ? value : \"\"\r\n            },\r\n            stylingMode: (0, _config.default)().editorStylingMode || \"outlined\",\r\n            showValidationMark: true\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        var themeName = (0, _themes.current)();\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return (0, _themes.isMaterial)(themeName)\r\n            },\r\n            options: {\r\n                stylingMode: (0, _config.default)().editorStylingMode || \"underlined\"\r\n            }\r\n        }])\r\n    },\r\n    _setDeprecatedOptions: function() {\r\n        this.callBase();\r\n        (0, _extend.extend)(this._deprecatedOptions, {\r\n            onKeyPress: {\r\n                since: \"20.1\",\r\n                message: \"This event is removed from the web standards and will be deprecated in modern browsers soon.\"\r\n            }\r\n        })\r\n    },\r\n    _getDefaultButtons: function() {\r\n        return [{\r\n            name: \"clear\",\r\n            Ctor: _uiText_editor.default\r\n        }]\r\n    },\r\n    _isClearButtonVisible: function() {\r\n        return this.option(\"showClearButton\") && !this.option(\"readOnly\")\r\n    },\r\n    _input: function() {\r\n        return this.$element().find(TEXTEDITOR_INPUT_SELECTOR).first()\r\n    },\r\n    _isFocused: function() {\r\n        return (0, _selectors.focused)(this._input()) || this.callBase()\r\n    },\r\n    _inputWrapper: function() {\r\n        return this.$element()\r\n    },\r\n    _buttonsContainer: function() {\r\n        return this._inputWrapper().find(\".\" + TEXTEDITOR_BUTTONS_CONTAINER_CLASS).eq(0)\r\n    },\r\n    _isControlKey: function(key) {\r\n        return CONTROL_KEYS.indexOf(key) !== -1\r\n    },\r\n    _renderStylingMode: function() {\r\n        var _this = this;\r\n        var optionName = \"stylingMode\";\r\n        var optionValue = this.option(optionName);\r\n        ALLOWED_STYLE_CLASSES.forEach(function(className) {\r\n            return _this.$element().removeClass(className)\r\n        });\r\n        var stylingModeClass = TEXTEDITOR_STYLING_MODE_PREFIX + optionValue;\r\n        if (ALLOWED_STYLE_CLASSES.indexOf(stylingModeClass) === -1) {\r\n            var defaultOptionValue = this._getDefaultOptions()[optionName];\r\n            var platformOptionValue = this._convertRulesToOptions(this._defaultOptionsRules())[optionName];\r\n            stylingModeClass = TEXTEDITOR_STYLING_MODE_PREFIX + (platformOptionValue || defaultOptionValue)\r\n        }\r\n        this.$element().addClass(stylingModeClass);\r\n        this._updateButtonsStyling(optionValue)\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(TEXTEDITOR_CLASS);\r\n        this._renderInput();\r\n        this._renderStylingMode();\r\n        this._renderInputType();\r\n        this._renderPlaceholder();\r\n        this._renderProps();\r\n        this.callBase();\r\n        this._renderValue()\r\n    },\r\n    _render: function() {\r\n        this._renderPlaceholder();\r\n        this._refreshValueChangeEvent();\r\n        this._renderEvents();\r\n        this._renderEnterKeyAction();\r\n        this._renderEmptinessEvent();\r\n        this.callBase()\r\n    },\r\n    _renderInput: function() {\r\n        this._$buttonsContainer = this._$textEditorContainer = (0, _renderer.default)(\"<div>\").addClass(TEXTEDITOR_CONTAINER_CLASS).appendTo(this.$element());\r\n        this._$textEditorInputContainer = (0, _renderer.default)(\"<div>\").addClass(TEXTEDITOR_INPUT_CONTAINER_CLASS).appendTo(this._$textEditorContainer);\r\n        this._$textEditorInputContainer.append(this._createInput());\r\n        this._renderButtonContainers()\r\n    },\r\n    _getInputContainer: function() {\r\n        return this._$textEditorInputContainer\r\n    },\r\n    _renderPendingIndicator: function() {\r\n        this.$element().addClass(TEXTEDITOR_VALIDATION_PENDING_CLASS);\r\n        var $inputContainer = this._getInputContainer();\r\n        var $indicatorElement = (0, _renderer.default)(\"<div>\").addClass(TEXTEDITOR_PENDING_INDICATOR_CLASS).appendTo($inputContainer);\r\n        this._pendingIndicator = this._createComponent($indicatorElement, _load_indicator.default)\r\n    },\r\n    _disposePendingIndicator: function() {\r\n        if (!this._pendingIndicator) {\r\n            return\r\n        }\r\n        this._pendingIndicator.dispose();\r\n        this._pendingIndicator.$element().remove();\r\n        this._pendingIndicator = null;\r\n        this.$element().removeClass(TEXTEDITOR_VALIDATION_PENDING_CLASS)\r\n    },\r\n    _renderValidationState: function() {\r\n        this.callBase();\r\n        var isPending = \"pending\" === this.option(\"validationStatus\");\r\n        var $element = this.$element();\r\n        if (isPending) {\r\n            !this._pendingIndicator && this._renderPendingIndicator();\r\n            this._showValidMark = false\r\n        } else {\r\n            if (\"invalid\" === this.option(\"validationStatus\")) {\r\n                this._showValidMark = false\r\n            }\r\n            if (!this._showValidMark && true === this.option(\"showValidationMark\")) {\r\n                this._showValidMark = \"valid\" === this.option(\"validationStatus\") && !!this._pendingIndicator\r\n            }\r\n            this._disposePendingIndicator()\r\n        }\r\n        $element.toggleClass(TEXTEDITOR_VALID_CLASS, !!this._showValidMark)\r\n    },\r\n    _renderButtonContainers: function() {\r\n        var buttons = this.option(\"buttons\");\r\n        this._$beforeButtonsContainer = this._buttonCollection.renderBeforeButtons(buttons, this._$buttonsContainer);\r\n        this._$afterButtonsContainer = this._buttonCollection.renderAfterButtons(buttons, this._$buttonsContainer)\r\n    },\r\n    _clean: function() {\r\n        this._buttonCollection.clean();\r\n        this._disposePendingIndicator();\r\n        this._$beforeButtonsContainer = null;\r\n        this._$afterButtonsContainer = null;\r\n        this._$textEditorContainer = null;\r\n        this._$buttonsContainer = null;\r\n        this.callBase()\r\n    },\r\n    _createInput: function() {\r\n        var $input = (0, _renderer.default)(\"<input>\");\r\n        this._applyInputAttributes($input, this.option(\"inputAttr\"));\r\n        return $input\r\n    },\r\n    _setSubmitElementName: function(name) {\r\n        var inputAttrName = this.option(\"inputAttr.name\");\r\n        return this.callBase(name || inputAttrName || \"\")\r\n    },\r\n    _applyInputAttributes: function($input, customAttributes) {\r\n        var inputAttributes = (0, _extend.extend)(this._getDefaultAttributes(), customAttributes);\r\n        $input.attr(inputAttributes).addClass(TEXTEDITOR_INPUT_CLASS).css(\"minHeight\", this.option(\"height\") ? \"0\" : \"\")\r\n    },\r\n    _getDefaultAttributes: function() {\r\n        var defaultAttributes = {\r\n            autocomplete: \"off\"\r\n        };\r\n        var _devices$real = _devices.default.real(),\r\n            ios = _devices$real.ios,\r\n            mac = _devices$real.mac;\r\n        if (ios || mac) {\r\n            defaultAttributes.placeholder = \" \"\r\n        }\r\n        return defaultAttributes\r\n    },\r\n    _updateButtons: function(names) {\r\n        this._buttonCollection.updateButtons(names)\r\n    },\r\n    _updateButtonsStyling: function(editorStylingMode) {\r\n        var _this2 = this;\r\n        (0, _iterator.each)(this.option(\"buttons\"), function(_, buttonOptions) {\r\n            if (buttonOptions.options && !buttonOptions.options.stylingMode) {\r\n                var buttonInstance = _this2.getButton(buttonOptions.name);\r\n                buttonInstance.option && buttonInstance.option(\"stylingMode\", \"underlined\" === editorStylingMode ? \"text\" : \"contained\")\r\n            }\r\n        })\r\n    },\r\n    _renderValue: function() {\r\n        var renderInputPromise = this._renderInputValue();\r\n        return renderInputPromise.promise()\r\n    },\r\n    _renderInputValue: function(value) {\r\n        var _value;\r\n        value = null !== (_value = value) && void 0 !== _value ? _value : this.option(\"value\");\r\n        var text = this.option(\"text\");\r\n        var displayValue = this.option(\"displayValue\");\r\n        var displayValueFormatter = this.option(\"displayValueFormatter\");\r\n        if (void 0 !== displayValue && null !== value) {\r\n            text = displayValueFormatter(displayValue)\r\n        } else {\r\n            if (!(0, _type.isDefined)(text)) {\r\n                text = displayValueFormatter(value)\r\n            }\r\n        }\r\n        this.option(\"text\", text);\r\n        if (this._input().val() !== ((0, _type.isDefined)(text) ? text : \"\")) {\r\n            this._renderDisplayText(text)\r\n        } else {\r\n            this._toggleEmptinessEventHandler()\r\n        }\r\n        return (new _deferred.Deferred).resolve()\r\n    },\r\n    _renderDisplayText: function(text) {\r\n        this._input().val(text);\r\n        this._toggleEmptinessEventHandler()\r\n    },\r\n    _isValueValid: function() {\r\n        if (this._input().length) {\r\n            var validity = this._input().get(0).validity;\r\n            if (validity) {\r\n                return validity.valid\r\n            }\r\n        }\r\n        return true\r\n    },\r\n    _toggleEmptiness: function(isEmpty) {\r\n        this.$element().toggleClass(TEXTEDITOR_EMPTY_INPUT_CLASS, isEmpty);\r\n        this._togglePlaceholder(isEmpty)\r\n    },\r\n    _togglePlaceholder: function(isEmpty) {\r\n        this.$element().find(\".\".concat(TEXTEDITOR_PLACEHOLDER_CLASS)).eq(0).toggleClass(STATE_INVISIBLE_CLASS, !isEmpty)\r\n    },\r\n    _renderProps: function() {\r\n        this._toggleReadOnlyState();\r\n        this._toggleSpellcheckState();\r\n        this._toggleTabIndex()\r\n    },\r\n    _toggleDisabledState: function(value) {\r\n        this.callBase.apply(this, arguments);\r\n        var $input = this._input();\r\n        $input.prop(\"disabled\", value)\r\n    },\r\n    _toggleTabIndex: function() {\r\n        var $input = this._input();\r\n        var disabled = this.option(\"disabled\");\r\n        var focusStateEnabled = this.option(\"focusStateEnabled\");\r\n        if (disabled || !focusStateEnabled) {\r\n            $input.attr(\"tabIndex\", -1)\r\n        } else {\r\n            $input.removeAttr(\"tabIndex\")\r\n        }\r\n    },\r\n    _toggleReadOnlyState: function() {\r\n        this._input().prop(\"readOnly\", this._readOnlyPropValue());\r\n        this.callBase()\r\n    },\r\n    _readOnlyPropValue: function() {\r\n        return this.option(\"readOnly\")\r\n    },\r\n    _toggleSpellcheckState: function() {\r\n        this._input().prop(\"spellcheck\", this.option(\"spellcheck\"))\r\n    },\r\n    _renderPlaceholder: function() {\r\n        this._renderPlaceholderMarkup();\r\n        this._attachPlaceholderEvents()\r\n    },\r\n    _renderPlaceholderMarkup: function() {\r\n        if (this._$placeholder) {\r\n            this._$placeholder.remove();\r\n            this._$placeholder = null\r\n        }\r\n        var $input = this._input();\r\n        var placeholderText = this.option(\"placeholder\");\r\n        var $placeholder = this._$placeholder = (0, _renderer.default)(\"<div>\").attr(\"data-dx_placeholder\", placeholderText);\r\n        $placeholder.insertAfter($input);\r\n        $placeholder.addClass(TEXTEDITOR_PLACEHOLDER_CLASS)\r\n    },\r\n    _attachPlaceholderEvents: function() {\r\n        var _this3 = this;\r\n        var startEvent = (0, _index.addNamespace)(_pointer.default.up, this.NAME);\r\n        _events_engine.default.on(this._$placeholder, startEvent, function() {\r\n            _events_engine.default.trigger(_this3._input(), \"focus\")\r\n        });\r\n        this._toggleEmptinessEventHandler()\r\n    },\r\n    _placeholder: function() {\r\n        return this._$placeholder || (0, _renderer.default)()\r\n    },\r\n    _clearValueHandler: function(e) {\r\n        var $input = this._input();\r\n        e.stopPropagation();\r\n        this._saveValueChangeEvent(e);\r\n        this._clearValue();\r\n        !this._isFocused() && _events_engine.default.trigger($input, \"focus\");\r\n        _events_engine.default.trigger($input, \"input\")\r\n    },\r\n    _clearValue: function() {\r\n        this.reset()\r\n    },\r\n    _renderEvents: function() {\r\n        var _this4 = this;\r\n        var $input = this._input();\r\n        (0, _iterator.each)(EVENTS_LIST, function(_, event) {\r\n            if (_this4.hasActionSubscription(\"on\" + event)) {\r\n                var action = _this4._createActionByOption(\"on\" + event, {\r\n                    excludeValidators: [\"readOnly\"]\r\n                });\r\n                _events_engine.default.on($input, (0, _index.addNamespace)(event.toLowerCase(), _this4.NAME), function(e) {\r\n                    if (_this4._disposed) {\r\n                        return\r\n                    }\r\n                    action({\r\n                        event: e\r\n                    })\r\n                })\r\n            }\r\n        })\r\n    },\r\n    _refreshEvents: function() {\r\n        var _this5 = this;\r\n        var $input = this._input();\r\n        (0, _iterator.each)(EVENTS_LIST, function(_, event) {\r\n            _events_engine.default.off($input, (0, _index.addNamespace)(event.toLowerCase(), _this5.NAME))\r\n        });\r\n        this._renderEvents()\r\n    },\r\n    _keyPressHandler: function() {\r\n        this.option(\"text\", this._input().val())\r\n    },\r\n    _keyDownHandler: function(e) {\r\n        var $input = this._input();\r\n        var isCtrlEnter = e.ctrlKey && \"enter\" === (0, _index.normalizeKeyName)(e);\r\n        var isNewValue = $input.val() !== this.option(\"value\");\r\n        if (isCtrlEnter && isNewValue) {\r\n            _events_engine.default.trigger($input, \"change\")\r\n        }\r\n    },\r\n    _renderValueChangeEvent: function() {\r\n        var keyPressEvent = (0, _index.addNamespace)(this._renderValueEventName(), \"\".concat(this.NAME, \"TextChange\"));\r\n        var valueChangeEvent = (0, _index.addNamespace)(this.option(\"valueChangeEvent\"), \"\".concat(this.NAME, \"ValueChange\"));\r\n        var keyDownEvent = (0, _index.addNamespace)(\"keydown\", \"\".concat(this.NAME, \"TextChange\"));\r\n        var $input = this._input();\r\n        _events_engine.default.on($input, keyPressEvent, this._keyPressHandler.bind(this));\r\n        _events_engine.default.on($input, valueChangeEvent, this._valueChangeEventHandler.bind(this));\r\n        _events_engine.default.on($input, keyDownEvent, this._keyDownHandler.bind(this))\r\n    },\r\n    _cleanValueChangeEvent: function() {\r\n        var valueChangeNamespace = \".\".concat(this.NAME, \"ValueChange\");\r\n        var textChangeNamespace = \".\".concat(this.NAME, \"TextChange\");\r\n        _events_engine.default.off(this._input(), valueChangeNamespace);\r\n        _events_engine.default.off(this._input(), textChangeNamespace)\r\n    },\r\n    _refreshValueChangeEvent: function() {\r\n        this._cleanValueChangeEvent();\r\n        this._renderValueChangeEvent()\r\n    },\r\n    _renderValueEventName: function() {\r\n        return \"input change keypress\"\r\n    },\r\n    _focusTarget: function() {\r\n        return this._input()\r\n    },\r\n    _focusEventTarget: function() {\r\n        return this.element()\r\n    },\r\n    _isInput: function(element) {\r\n        return element === this._input().get(0)\r\n    },\r\n    _preventNestedFocusEvent: function(event) {\r\n        if (event.isDefaultPrevented()) {\r\n            return true\r\n        }\r\n        var result = this._isNestedTarget(event.relatedTarget);\r\n        if (\"focusin\" === event.type) {\r\n            result = result && this._isNestedTarget(event.target) && !this._isInput(event.target)\r\n        }\r\n        result && event.preventDefault();\r\n        return result\r\n    },\r\n    _isNestedTarget: function(target) {\r\n        return !!this.$element().find(target).length\r\n    },\r\n    _focusClassTarget: function() {\r\n        return this.$element()\r\n    },\r\n    _focusInHandler: function(event) {\r\n        this._preventNestedFocusEvent(event);\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _focusOutHandler: function(event) {\r\n        this._preventNestedFocusEvent(event);\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _toggleFocusClass: function(isFocused, $element) {\r\n        this.callBase(isFocused, this._focusClassTarget($element))\r\n    },\r\n    _hasFocusClass: function(element) {\r\n        return this.callBase((0, _renderer.default)(element || this.$element()))\r\n    },\r\n    _renderEmptinessEvent: function() {\r\n        var $input = this._input();\r\n        _events_engine.default.on($input, \"input blur\", this._toggleEmptinessEventHandler.bind(this))\r\n    },\r\n    _toggleEmptinessEventHandler: function() {\r\n        var text = this._input().val();\r\n        var isEmpty = (\"\" === text || null === text) && this._isValueValid();\r\n        this._toggleEmptiness(isEmpty)\r\n    },\r\n    _valueChangeEventHandler: function(e, formattedValue) {\r\n        this._saveValueChangeEvent(e);\r\n        this.option(\"value\", arguments.length > 1 ? formattedValue : this._input().val());\r\n        this._saveValueChangeEvent(void 0)\r\n    },\r\n    _renderEnterKeyAction: function() {\r\n        this._enterKeyAction = this._createActionByOption(\"onEnterKey\", {\r\n            excludeValidators: [\"readOnly\"]\r\n        });\r\n        _events_engine.default.off(this._input(), \"keyup.onEnterKey.dxTextEditor\");\r\n        _events_engine.default.on(this._input(), \"keyup.onEnterKey.dxTextEditor\", this._enterKeyHandlerUp.bind(this))\r\n    },\r\n    _enterKeyHandlerUp: function(e) {\r\n        if (this._disposed) {\r\n            return\r\n        }\r\n        if (\"enter\" === (0, _index.normalizeKeyName)(e)) {\r\n            this._enterKeyAction({\r\n                event: e\r\n            })\r\n        }\r\n    },\r\n    _updateValue: function() {\r\n        this._options.silent(\"text\", null);\r\n        this._renderValue()\r\n    },\r\n    _dispose: function() {\r\n        this._enterKeyAction = void 0;\r\n        this.callBase()\r\n    },\r\n    _getSubmitElement: function() {\r\n        return this._input()\r\n    },\r\n    _optionChanged: function(args) {\r\n        var name = args.name,\r\n            fullName = args.fullName,\r\n            value = args.value;\r\n        if ((0, _array.inArray)(name.replace(\"on\", \"\"), EVENTS_LIST) > -1) {\r\n            this._refreshEvents();\r\n            return\r\n        }\r\n        switch (name) {\r\n            case \"valueChangeEvent\":\r\n                this._refreshValueChangeEvent();\r\n                this._refreshFocusEvent();\r\n                this._refreshEvents();\r\n                break;\r\n            case \"onValueChanged\":\r\n                this._createValueChangeAction();\r\n                break;\r\n            case \"focusStateEnabled\":\r\n                this.callBase(args);\r\n                this._toggleTabIndex();\r\n                break;\r\n            case \"spellcheck\":\r\n                this._toggleSpellcheckState();\r\n                break;\r\n            case \"mode\":\r\n                this._renderInputType();\r\n                break;\r\n            case \"onEnterKey\":\r\n                this._renderEnterKeyAction();\r\n                break;\r\n            case \"placeholder\":\r\n                this._renderPlaceholder();\r\n                break;\r\n            case \"readOnly\":\r\n            case \"disabled\":\r\n                this._updateButtons();\r\n                this.callBase(args);\r\n                break;\r\n            case \"showClearButton\":\r\n                this._updateButtons([\"clear\"]);\r\n                break;\r\n            case \"text\":\r\n                break;\r\n            case \"value\":\r\n                this._updateValue();\r\n                this.callBase(args);\r\n                break;\r\n            case \"inputAttr\":\r\n                this._applyInputAttributes(this._input(), this.option(name));\r\n                break;\r\n            case \"stylingMode\":\r\n                this._renderStylingMode();\r\n                break;\r\n            case \"buttons\":\r\n                if (fullName === name) {\r\n                    checkButtonsOptionType(value)\r\n                }\r\n                this._$beforeButtonsContainer && this._$beforeButtonsContainer.remove();\r\n                this._$afterButtonsContainer && this._$afterButtonsContainer.remove();\r\n                this._buttonCollection.clean();\r\n                this._renderButtonContainers();\r\n                break;\r\n            case \"displayValueFormatter\":\r\n                this._invalidate();\r\n                break;\r\n            case \"showValidationMark\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _renderInputType: function() {\r\n        this._setInputType(this.option(\"mode\"))\r\n    },\r\n    _setInputType: function(type) {\r\n        var input = this._input();\r\n        if (\"search\" === type) {\r\n            type = \"text\"\r\n        }\r\n        try {\r\n            input.prop(\"type\", type)\r\n        } catch (e) {\r\n            input.prop(\"type\", \"text\")\r\n        }\r\n    },\r\n    getButton: function(name) {\r\n        return this._buttonCollection.getButton(name)\r\n    },\r\n    focus: function() {\r\n        _events_engine.default.trigger(this._input(), \"focus\")\r\n    },\r\n    blur: function() {\r\n        if (this._input().is(_dom_adapter.default.getActiveElement())) {\r\n            (0, _dom.resetActiveElement)()\r\n        }\r\n    },\r\n    reset: function() {\r\n        if (this._showValidMark) {\r\n            this._showValidMark = false;\r\n            this._renderValidationState()\r\n        }\r\n        var defaultOptions = this._getDefaultOptions();\r\n        if (this.option(\"value\") === defaultOptions.value) {\r\n            this._options.silent(\"text\", \"\");\r\n            this._renderValue()\r\n        } else {\r\n            this.option(\"value\", defaultOptions.value)\r\n        }\r\n    },\r\n    on: function(eventName, eventHandler) {\r\n        var result = this.callBase(eventName, eventHandler);\r\n        var event = eventName.charAt(0).toUpperCase() + eventName.substr(1);\r\n        if (EVENTS_LIST.indexOf(event) >= 0) {\r\n            this._refreshEvents()\r\n        }\r\n        return result\r\n    }\r\n});\r\nvar _default = TextEditorBase;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}