{"ast":null,"code":"/**\r\n * DevExtreme (exporter/excel/excel.file.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _excel = _interopRequireDefault(require(\"./excel.tag_helper\"));\n\nvar _excel2 = _interopRequireDefault(require(\"./excel.cell_format_helper\"));\n\nvar _excel3 = _interopRequireDefault(require(\"./excel.fill_helper\"));\n\nvar _excel4 = _interopRequireDefault(require(\"./excel.font_helper\"));\n\nvar _excel5 = _interopRequireDefault(require(\"./excel.number_format_helper\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar ExcelFile = function () {\n  function ExcelFile() {\n    this._cellFormatTags = [];\n    this._fillTags = [];\n    this._fontTags = [];\n    this._numberFormatTags = [];\n\n    this._fillTags.push(_excel3.default.tryCreateTag({\n      patternFill: {\n        patternType: \"none\"\n      }\n    }));\n  }\n\n  var _proto = ExcelFile.prototype;\n\n  _proto.registerCellFormat = function (cellFormat) {\n    var result;\n\n    var cellFormatTag = _excel2.default.tryCreateTag(cellFormat, {\n      registerFill: this.registerFill.bind(this),\n      registerFont: this.registerFont.bind(this),\n      registerNumberFormat: this.registerNumberFormat.bind(this)\n    });\n\n    if ((0, _type.isDefined)(cellFormatTag)) {\n      for (var i = 0; i < this._cellFormatTags.length; i++) {\n        if (_excel2.default.areEqual(this._cellFormatTags[i], cellFormatTag)) {\n          result = i;\n          break;\n        }\n      }\n\n      if (void 0 === result) {\n        result = this._cellFormatTags.push(cellFormatTag) - 1;\n      }\n    }\n\n    return result;\n  };\n\n  ExcelFile.copyCellFormat = function (source) {\n    return _excel2.default.copy(source);\n  };\n\n  _proto.generateCellFormatsXml = function () {\n    var cellFormatTagsAsXmlStringsArray = this._cellFormatTags.map(function (tag) {\n      return _excel2.default.toXml(tag);\n    });\n\n    return _excel.default.toXml(\"cellXfs\", {\n      count: cellFormatTagsAsXmlStringsArray.length\n    }, cellFormatTagsAsXmlStringsArray.join(\"\"));\n  };\n\n  _proto.registerFill = function (fill) {\n    var result;\n\n    var fillTag = _excel3.default.tryCreateTag(fill);\n\n    if ((0, _type.isDefined)(fillTag)) {\n      for (var i = 0; i < this._fillTags.length; i++) {\n        if (_excel3.default.areEqual(this._fillTags[i], fillTag)) {\n          result = i;\n          break;\n        }\n      }\n\n      if (void 0 === result) {\n        if (this._fillTags.length < 2) {\n          this._fillTags.push(_excel3.default.tryCreateTag({\n            patternFill: {\n              patternType: \"Gray125\"\n            }\n          }));\n        }\n\n        result = this._fillTags.push(fillTag) - 1;\n      }\n    }\n\n    return result;\n  };\n\n  _proto.generateFillsXml = function () {\n    var tagsAsXmlStringsArray = this._fillTags.map(function (tag) {\n      return _excel3.default.toXml(tag);\n    });\n\n    return _excel.default.toXml(\"fills\", {\n      count: tagsAsXmlStringsArray.length\n    }, tagsAsXmlStringsArray.join(\"\"));\n  };\n\n  _proto.registerFont = function (font) {\n    var result;\n\n    var fontTag = _excel4.default.tryCreateTag(font);\n\n    if ((0, _type.isDefined)(fontTag)) {\n      for (var i = 0; i < this._fontTags.length; i++) {\n        if (_excel4.default.areEqual(this._fontTags[i], fontTag)) {\n          result = i;\n          break;\n        }\n      }\n\n      if (void 0 === result) {\n        result = this._fontTags.push(fontTag) - 1;\n      }\n    }\n\n    return result;\n  };\n\n  _proto.generateFontsXml = function () {\n    var xmlStringsArray = this._fontTags.map(function (tag) {\n      return _excel4.default.toXml(tag);\n    });\n\n    return _excel.default.toXml(\"fonts\", {\n      count: xmlStringsArray.length\n    }, xmlStringsArray.join(\"\"));\n  };\n\n  _proto._convertNumberFormatIndexToId = function (index) {\n    var CUSTOM_FORMAT_ID_START_VALUE = 165;\n    return CUSTOM_FORMAT_ID_START_VALUE + index;\n  };\n\n  _proto.registerNumberFormat = function (numberFormat) {\n    var result;\n\n    var tag = _excel5.default.tryCreateTag(numberFormat);\n\n    if ((0, _type.isDefined)(tag)) {\n      for (var i = 0; i < this._numberFormatTags.length; i++) {\n        if (_excel5.default.areEqual(this._numberFormatTags[i], tag)) {\n          result = this._numberFormatTags[i][_excel5.default.ID_PROPERTY_NAME];\n          break;\n        }\n      }\n\n      if (void 0 === result) {\n        tag[_excel5.default.ID_PROPERTY_NAME] = this._convertNumberFormatIndexToId(this._numberFormatTags.length);\n        result = tag[_excel5.default.ID_PROPERTY_NAME];\n\n        this._numberFormatTags.push(tag);\n      }\n    }\n\n    return result;\n  };\n\n  _proto.generateNumberFormatsXml = function () {\n    if (this._numberFormatTags.length > 0) {\n      var xmlStringsArray = this._numberFormatTags.map(function (tag) {\n        return _excel5.default.toXml(tag);\n      });\n\n      return _excel.default.toXml(\"numFmts\", {\n        count: xmlStringsArray.length\n      }, xmlStringsArray.join(\"\"));\n    } else {\n      return \"\";\n    }\n  };\n\n  return ExcelFile;\n}();\n\nexports.default = ExcelFile;\nmodule.exports = exports.default;","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/node_modules/devextreme/exporter/excel/excel.file.js"],"names":["exports","default","_type","require","_excel","_interopRequireDefault","_excel2","_excel3","_excel4","_excel5","obj","__esModule","ExcelFile","_cellFormatTags","_fillTags","_fontTags","_numberFormatTags","push","tryCreateTag","patternFill","patternType","_proto","prototype","registerCellFormat","cellFormat","result","cellFormatTag","registerFill","bind","registerFont","registerNumberFormat","isDefined","i","length","areEqual","copyCellFormat","source","copy","generateCellFormatsXml","cellFormatTagsAsXmlStringsArray","map","tag","toXml","count","join","fill","fillTag","generateFillsXml","tagsAsXmlStringsArray","font","fontTag","generateFontsXml","xmlStringsArray","_convertNumberFormatIndexToId","index","CUSTOM_FORMAT_ID_START_VALUE","numberFormat","ID_PROPERTY_NAME","generateNumberFormatsXml","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (exporter/excel/excel.file.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _excel = _interopRequireDefault(require(\"./excel.tag_helper\"));\r\nvar _excel2 = _interopRequireDefault(require(\"./excel.cell_format_helper\"));\r\nvar _excel3 = _interopRequireDefault(require(\"./excel.fill_helper\"));\r\nvar _excel4 = _interopRequireDefault(require(\"./excel.font_helper\"));\r\nvar _excel5 = _interopRequireDefault(require(\"./excel.number_format_helper\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar ExcelFile = function() {\r\n    function ExcelFile() {\r\n        this._cellFormatTags = [];\r\n        this._fillTags = [];\r\n        this._fontTags = [];\r\n        this._numberFormatTags = [];\r\n        this._fillTags.push(_excel3.default.tryCreateTag({\r\n            patternFill: {\r\n                patternType: \"none\"\r\n            }\r\n        }))\r\n    }\r\n    var _proto = ExcelFile.prototype;\r\n    _proto.registerCellFormat = function(cellFormat) {\r\n        var result;\r\n        var cellFormatTag = _excel2.default.tryCreateTag(cellFormat, {\r\n            registerFill: this.registerFill.bind(this),\r\n            registerFont: this.registerFont.bind(this),\r\n            registerNumberFormat: this.registerNumberFormat.bind(this)\r\n        });\r\n        if ((0, _type.isDefined)(cellFormatTag)) {\r\n            for (var i = 0; i < this._cellFormatTags.length; i++) {\r\n                if (_excel2.default.areEqual(this._cellFormatTags[i], cellFormatTag)) {\r\n                    result = i;\r\n                    break\r\n                }\r\n            }\r\n            if (void 0 === result) {\r\n                result = this._cellFormatTags.push(cellFormatTag) - 1\r\n            }\r\n        }\r\n        return result\r\n    };\r\n    ExcelFile.copyCellFormat = function(source) {\r\n        return _excel2.default.copy(source)\r\n    };\r\n    _proto.generateCellFormatsXml = function() {\r\n        var cellFormatTagsAsXmlStringsArray = this._cellFormatTags.map(function(tag) {\r\n            return _excel2.default.toXml(tag)\r\n        });\r\n        return _excel.default.toXml(\"cellXfs\", {\r\n            count: cellFormatTagsAsXmlStringsArray.length\r\n        }, cellFormatTagsAsXmlStringsArray.join(\"\"))\r\n    };\r\n    _proto.registerFill = function(fill) {\r\n        var result;\r\n        var fillTag = _excel3.default.tryCreateTag(fill);\r\n        if ((0, _type.isDefined)(fillTag)) {\r\n            for (var i = 0; i < this._fillTags.length; i++) {\r\n                if (_excel3.default.areEqual(this._fillTags[i], fillTag)) {\r\n                    result = i;\r\n                    break\r\n                }\r\n            }\r\n            if (void 0 === result) {\r\n                if (this._fillTags.length < 2) {\r\n                    this._fillTags.push(_excel3.default.tryCreateTag({\r\n                        patternFill: {\r\n                            patternType: \"Gray125\"\r\n                        }\r\n                    }))\r\n                }\r\n                result = this._fillTags.push(fillTag) - 1\r\n            }\r\n        }\r\n        return result\r\n    };\r\n    _proto.generateFillsXml = function() {\r\n        var tagsAsXmlStringsArray = this._fillTags.map(function(tag) {\r\n            return _excel3.default.toXml(tag)\r\n        });\r\n        return _excel.default.toXml(\"fills\", {\r\n            count: tagsAsXmlStringsArray.length\r\n        }, tagsAsXmlStringsArray.join(\"\"))\r\n    };\r\n    _proto.registerFont = function(font) {\r\n        var result;\r\n        var fontTag = _excel4.default.tryCreateTag(font);\r\n        if ((0, _type.isDefined)(fontTag)) {\r\n            for (var i = 0; i < this._fontTags.length; i++) {\r\n                if (_excel4.default.areEqual(this._fontTags[i], fontTag)) {\r\n                    result = i;\r\n                    break\r\n                }\r\n            }\r\n            if (void 0 === result) {\r\n                result = this._fontTags.push(fontTag) - 1\r\n            }\r\n        }\r\n        return result\r\n    };\r\n    _proto.generateFontsXml = function() {\r\n        var xmlStringsArray = this._fontTags.map(function(tag) {\r\n            return _excel4.default.toXml(tag)\r\n        });\r\n        return _excel.default.toXml(\"fonts\", {\r\n            count: xmlStringsArray.length\r\n        }, xmlStringsArray.join(\"\"))\r\n    };\r\n    _proto._convertNumberFormatIndexToId = function(index) {\r\n        var CUSTOM_FORMAT_ID_START_VALUE = 165;\r\n        return CUSTOM_FORMAT_ID_START_VALUE + index\r\n    };\r\n    _proto.registerNumberFormat = function(numberFormat) {\r\n        var result;\r\n        var tag = _excel5.default.tryCreateTag(numberFormat);\r\n        if ((0, _type.isDefined)(tag)) {\r\n            for (var i = 0; i < this._numberFormatTags.length; i++) {\r\n                if (_excel5.default.areEqual(this._numberFormatTags[i], tag)) {\r\n                    result = this._numberFormatTags[i][_excel5.default.ID_PROPERTY_NAME];\r\n                    break\r\n                }\r\n            }\r\n            if (void 0 === result) {\r\n                tag[_excel5.default.ID_PROPERTY_NAME] = this._convertNumberFormatIndexToId(this._numberFormatTags.length);\r\n                result = tag[_excel5.default.ID_PROPERTY_NAME];\r\n                this._numberFormatTags.push(tag)\r\n            }\r\n        }\r\n        return result\r\n    };\r\n    _proto.generateNumberFormatsXml = function() {\r\n        if (this._numberFormatTags.length > 0) {\r\n            var xmlStringsArray = this._numberFormatTags.map(function(tag) {\r\n                return _excel5.default.toXml(tag)\r\n            });\r\n            return _excel.default.toXml(\"numFmts\", {\r\n                count: xmlStringsArray.length\r\n            }, xmlStringsArray.join(\"\"))\r\n        } else {\r\n            return \"\"\r\n        }\r\n    };\r\n    return ExcelFile\r\n}();\r\nexports.default = ExcelFile;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}