{"ast":null,"code":"/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.pager.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _uiGrid_core = _interopRequireDefault(require(\"./ui.grid_core.modules\"));\n\nvar _pager = _interopRequireDefault(require(\"../pager\"));\n\nvar _array = require(\"../../core/utils/array\");\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _window = require(\"../../core/utils/window\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar PAGER_CLASS = \"pager\";\nvar MAX_PAGES_COUNT = 10;\n\nvar getPageIndex = function (dataController) {\n  return 1 + (parseInt(dataController.pageIndex()) || 0);\n};\n\nvar PagerView = _uiGrid_core.default.View.inherit({\n  init: function () {\n    var that = this;\n    var dataController = that.getController(\"data\");\n    that._isVisible = false;\n    dataController.changed.add(function (e) {\n      if (e && e.repaintChangesOnly) {\n        var pager = that._getPager();\n\n        if (pager) {\n          pager.option({\n            pageIndex: getPageIndex(dataController),\n            pageSize: dataController.pageSize(),\n            pageCount: dataController.pageCount(),\n            totalCount: dataController.totalCount(),\n            hasKnownLastPage: dataController.hasKnownLastPage()\n          });\n        } else {\n          that.render();\n        }\n      } else {\n        if (!e || \"update\" !== e.changeType && \"updateSelection\" !== e.changeType) {\n          that.render();\n        }\n      }\n    });\n  },\n  _getPager: function () {\n    var $element = this.element();\n    return $element && $element.data(\"dxPager\");\n  },\n  _renderCore: function () {\n    var that = this;\n    var $element = that.element().addClass(that.addWidgetPrefix(PAGER_CLASS));\n    var pagerOptions = that.option(\"pager\") || {};\n    var dataController = that.getController(\"data\");\n    var keyboardController = that.getController(\"keyboardNavigation\");\n    var options = {\n      maxPagesCount: MAX_PAGES_COUNT,\n      pageIndex: getPageIndex(dataController),\n      pageCount: dataController.pageCount(),\n      pageSize: dataController.pageSize(),\n      showPageSizes: pagerOptions.showPageSizeSelector,\n      showInfo: pagerOptions.showInfo,\n      displayMode: pagerOptions.displayMode,\n      pagesNavigatorVisible: pagerOptions.visible,\n      showNavigationButtons: pagerOptions.showNavigationButtons,\n      pageSizes: that.getPageSizes(),\n      totalCount: dataController.totalCount(),\n      hasKnownLastPage: dataController.hasKnownLastPage(),\n      pageIndexChanged: function (pageIndex) {\n        if (dataController.pageIndex() !== pageIndex - 1) {\n          setTimeout(function () {\n            dataController.pageIndex(pageIndex - 1);\n          });\n        }\n      },\n      pageSizeChanged: function (pageSize) {\n        setTimeout(function () {\n          dataController.pageSize(pageSize);\n        });\n      },\n      onKeyDown: function (e) {\n        return keyboardController && keyboardController.executeAction(\"onKeyDown\", e);\n      },\n      useLegacyKeyboardNavigation: this.option(\"useLegacyKeyboardNavigation\"),\n      useKeyboard: this.option(\"keyboardNavigation.enabled\")\n    };\n\n    if ((0, _type.isDefined)(pagerOptions.infoText)) {\n      options.infoText = pagerOptions.infoText;\n    }\n\n    that._createComponent($element, _pager.default, options);\n  },\n  getPageSizes: function () {\n    var that = this;\n    var dataController = that.getController(\"data\");\n    var pagerOptions = that.option(\"pager\");\n    var allowedPageSizes = pagerOptions && pagerOptions.allowedPageSizes;\n    var pageSize = dataController.pageSize();\n\n    if (!(0, _type.isDefined)(that._pageSizes) || (0, _array.inArray)(pageSize, that._pageSizes) === -1) {\n      that._pageSizes = [];\n\n      if (pagerOptions) {\n        if (Array.isArray(allowedPageSizes)) {\n          that._pageSizes = allowedPageSizes;\n        } else {\n          if (allowedPageSizes && pageSize > 1) {\n            that._pageSizes = [Math.floor(pageSize / 2), pageSize, 2 * pageSize];\n          }\n        }\n      }\n    }\n\n    return that._pageSizes;\n  },\n  isVisible: function () {\n    var that = this;\n    var dataController = that.getController(\"data\");\n    var pagerOptions = that.option(\"pager\");\n    var pagerVisible = pagerOptions && pagerOptions.visible;\n    var scrolling = that.option(\"scrolling\");\n\n    if (that._isVisible) {\n      return true;\n    }\n\n    if (\"auto\" === pagerVisible) {\n      if (scrolling && (\"virtual\" === scrolling.mode || \"infinite\" === scrolling.mode)) {\n        pagerVisible = false;\n      } else {\n        pagerVisible = dataController.pageCount() > 1 || dataController.isLoaded() && !dataController.hasKnownLastPage();\n      }\n    }\n\n    that._isVisible = pagerVisible;\n    return pagerVisible;\n  },\n  getHeight: function () {\n    return this.getElementHeight();\n  },\n  optionChanged: function (args) {\n    var that = this;\n    var name = args.name;\n    var isPager = \"pager\" === name;\n    var isPaging = \"paging\" === name;\n    var isDataSource = \"dataSource\" === name;\n    var isScrolling = \"scrolling\" === name;\n    var dataController = that.getController(\"data\");\n\n    if (isPager || isPaging || isScrolling || isDataSource) {\n      args.handled = true;\n\n      if (dataController.skipProcessingPagingChange(args.fullName)) {\n        return;\n      }\n\n      if (isPager || isPaging) {\n        that._pageSizes = null;\n      }\n\n      if (isPager || isPaging || isScrolling) {\n        that._isVisible = false;\n      }\n\n      if (!isDataSource) {\n        that._invalidate();\n\n        if ((0, _window.hasWindow)() && isPager && that.component) {\n          that.component.resize();\n        }\n      }\n    }\n  }\n});\n\nvar _default = {\n  defaultOptions: function () {\n    return {\n      pager: {\n        visible: \"auto\",\n        showPageSizeSelector: false,\n        allowedPageSizes: \"auto\"\n      }\n    };\n  },\n  views: {\n    pagerView: PagerView\n  }\n};\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/node_modules/devextreme/ui/grid_core/ui.grid_core.pager.js"],"names":["exports","default","_uiGrid_core","_interopRequireDefault","require","_pager","_array","_type","_window","obj","__esModule","PAGER_CLASS","MAX_PAGES_COUNT","getPageIndex","dataController","parseInt","pageIndex","PagerView","View","inherit","init","that","getController","_isVisible","changed","add","e","repaintChangesOnly","pager","_getPager","option","pageSize","pageCount","totalCount","hasKnownLastPage","render","changeType","$element","element","data","_renderCore","addClass","addWidgetPrefix","pagerOptions","keyboardController","options","maxPagesCount","showPageSizes","showPageSizeSelector","showInfo","displayMode","pagesNavigatorVisible","visible","showNavigationButtons","pageSizes","getPageSizes","pageIndexChanged","setTimeout","pageSizeChanged","onKeyDown","executeAction","useLegacyKeyboardNavigation","useKeyboard","isDefined","infoText","_createComponent","allowedPageSizes","_pageSizes","inArray","Array","isArray","Math","floor","isVisible","pagerVisible","scrolling","mode","isLoaded","getHeight","getElementHeight","optionChanged","args","name","isPager","isPaging","isDataSource","isScrolling","handled","skipProcessingPagingChange","fullName","_invalidate","hasWindow","component","resize","_default","defaultOptions","views","pagerView","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.pager.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _uiGrid_core = _interopRequireDefault(require(\"./ui.grid_core.modules\"));\r\nvar _pager = _interopRequireDefault(require(\"../pager\"));\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _window = require(\"../../core/utils/window\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar PAGER_CLASS = \"pager\";\r\nvar MAX_PAGES_COUNT = 10;\r\nvar getPageIndex = function(dataController) {\r\n    return 1 + (parseInt(dataController.pageIndex()) || 0)\r\n};\r\nvar PagerView = _uiGrid_core.default.View.inherit({\r\n    init: function() {\r\n        var that = this;\r\n        var dataController = that.getController(\"data\");\r\n        that._isVisible = false;\r\n        dataController.changed.add(function(e) {\r\n            if (e && e.repaintChangesOnly) {\r\n                var pager = that._getPager();\r\n                if (pager) {\r\n                    pager.option({\r\n                        pageIndex: getPageIndex(dataController),\r\n                        pageSize: dataController.pageSize(),\r\n                        pageCount: dataController.pageCount(),\r\n                        totalCount: dataController.totalCount(),\r\n                        hasKnownLastPage: dataController.hasKnownLastPage()\r\n                    })\r\n                } else {\r\n                    that.render()\r\n                }\r\n            } else {\r\n                if (!e || \"update\" !== e.changeType && \"updateSelection\" !== e.changeType) {\r\n                    that.render()\r\n                }\r\n            }\r\n        })\r\n    },\r\n    _getPager: function() {\r\n        var $element = this.element();\r\n        return $element && $element.data(\"dxPager\")\r\n    },\r\n    _renderCore: function() {\r\n        var that = this;\r\n        var $element = that.element().addClass(that.addWidgetPrefix(PAGER_CLASS));\r\n        var pagerOptions = that.option(\"pager\") || {};\r\n        var dataController = that.getController(\"data\");\r\n        var keyboardController = that.getController(\"keyboardNavigation\");\r\n        var options = {\r\n            maxPagesCount: MAX_PAGES_COUNT,\r\n            pageIndex: getPageIndex(dataController),\r\n            pageCount: dataController.pageCount(),\r\n            pageSize: dataController.pageSize(),\r\n            showPageSizes: pagerOptions.showPageSizeSelector,\r\n            showInfo: pagerOptions.showInfo,\r\n            displayMode: pagerOptions.displayMode,\r\n            pagesNavigatorVisible: pagerOptions.visible,\r\n            showNavigationButtons: pagerOptions.showNavigationButtons,\r\n            pageSizes: that.getPageSizes(),\r\n            totalCount: dataController.totalCount(),\r\n            hasKnownLastPage: dataController.hasKnownLastPage(),\r\n            pageIndexChanged: function(pageIndex) {\r\n                if (dataController.pageIndex() !== pageIndex - 1) {\r\n                    setTimeout(function() {\r\n                        dataController.pageIndex(pageIndex - 1)\r\n                    })\r\n                }\r\n            },\r\n            pageSizeChanged: function(pageSize) {\r\n                setTimeout(function() {\r\n                    dataController.pageSize(pageSize)\r\n                })\r\n            },\r\n            onKeyDown: function(e) {\r\n                return keyboardController && keyboardController.executeAction(\"onKeyDown\", e)\r\n            },\r\n            useLegacyKeyboardNavigation: this.option(\"useLegacyKeyboardNavigation\"),\r\n            useKeyboard: this.option(\"keyboardNavigation.enabled\")\r\n        };\r\n        if ((0, _type.isDefined)(pagerOptions.infoText)) {\r\n            options.infoText = pagerOptions.infoText\r\n        }\r\n        that._createComponent($element, _pager.default, options)\r\n    },\r\n    getPageSizes: function() {\r\n        var that = this;\r\n        var dataController = that.getController(\"data\");\r\n        var pagerOptions = that.option(\"pager\");\r\n        var allowedPageSizes = pagerOptions && pagerOptions.allowedPageSizes;\r\n        var pageSize = dataController.pageSize();\r\n        if (!(0, _type.isDefined)(that._pageSizes) || (0, _array.inArray)(pageSize, that._pageSizes) === -1) {\r\n            that._pageSizes = [];\r\n            if (pagerOptions) {\r\n                if (Array.isArray(allowedPageSizes)) {\r\n                    that._pageSizes = allowedPageSizes\r\n                } else {\r\n                    if (allowedPageSizes && pageSize > 1) {\r\n                        that._pageSizes = [Math.floor(pageSize / 2), pageSize, 2 * pageSize]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return that._pageSizes\r\n    },\r\n    isVisible: function() {\r\n        var that = this;\r\n        var dataController = that.getController(\"data\");\r\n        var pagerOptions = that.option(\"pager\");\r\n        var pagerVisible = pagerOptions && pagerOptions.visible;\r\n        var scrolling = that.option(\"scrolling\");\r\n        if (that._isVisible) {\r\n            return true\r\n        }\r\n        if (\"auto\" === pagerVisible) {\r\n            if (scrolling && (\"virtual\" === scrolling.mode || \"infinite\" === scrolling.mode)) {\r\n                pagerVisible = false\r\n            } else {\r\n                pagerVisible = dataController.pageCount() > 1 || dataController.isLoaded() && !dataController.hasKnownLastPage()\r\n            }\r\n        }\r\n        that._isVisible = pagerVisible;\r\n        return pagerVisible\r\n    },\r\n    getHeight: function() {\r\n        return this.getElementHeight()\r\n    },\r\n    optionChanged: function(args) {\r\n        var that = this;\r\n        var name = args.name;\r\n        var isPager = \"pager\" === name;\r\n        var isPaging = \"paging\" === name;\r\n        var isDataSource = \"dataSource\" === name;\r\n        var isScrolling = \"scrolling\" === name;\r\n        var dataController = that.getController(\"data\");\r\n        if (isPager || isPaging || isScrolling || isDataSource) {\r\n            args.handled = true;\r\n            if (dataController.skipProcessingPagingChange(args.fullName)) {\r\n                return\r\n            }\r\n            if (isPager || isPaging) {\r\n                that._pageSizes = null\r\n            }\r\n            if (isPager || isPaging || isScrolling) {\r\n                that._isVisible = false\r\n            }\r\n            if (!isDataSource) {\r\n                that._invalidate();\r\n                if ((0, _window.hasWindow)() && isPager && that.component) {\r\n                    that.component.resize()\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\nvar _default = {\r\n    defaultOptions: function() {\r\n        return {\r\n            pager: {\r\n                visible: \"auto\",\r\n                showPageSizeSelector: false,\r\n                allowedPageSizes: \"auto\"\r\n            }\r\n        }\r\n    },\r\n    views: {\r\n        pagerView: PagerView\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}