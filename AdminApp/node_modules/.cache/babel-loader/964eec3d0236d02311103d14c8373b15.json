{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CapiniaC\\\\Desktop\\\\Collection\\\\Work\\\\project\\\\security\\\\AdminApp\\\\src\\\\components\\\\pages\\\\viprpit\\\\MuiVirtualizedTable.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell';\nimport Paper from '@material-ui/core/Paper';\nimport { AutoSizer, Column, Table } from 'react-virtualized';\nimport Draggable from \"react-draggable\";\nimport ViprTablesViewService from '../../../services/ViprTablesViewService';\nconst TOTAL_WIDTH = 500;\n\nconst styles = theme => ({\n  flexContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    boxSizing: 'border-box'\n  },\n  table: {\n    // temporary right-to-left patch, waiting for\n    // https://github.com/bvaughn/react-virtualized/issues/454\n    '& .ReactVirtualized__Table__headerRow': {\n      flip: false,\n      paddingRight: theme.direction === 'rtl' ? '0 !important' : undefined\n    }\n  },\n  tableRow: {\n    cursor: 'pointer'\n  },\n  tableRowHover: {\n    '&:hover': {\n      backgroundColor: theme.palette.grey[200]\n    }\n  },\n  tableCell: {\n    flex: 1\n  },\n  noClick: {\n    cursor: 'initial'\n  }\n});\n\nclass MuiVirtualizedTable extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    this.getRowClassName = ({\n      index\n    }) => {\n      const {\n        classes,\n        onRowClick\n      } = this.props;\n      return clsx(classes.tableRow, classes.flexContainer, {\n        [classes.tableRowHover]: index !== -1 && onRowClick != null\n      });\n    };\n\n    this.cellRenderer = ({\n      cellData,\n      columnIndex\n    }) => {\n      const {\n        columns,\n        classes,\n        rowHeight,\n        onRowClick\n      } = this.props;\n      return /*#__PURE__*/React.createElement(TableCell, {\n        component: \"div\",\n        className: clsx(classes.tableCell, classes.flexContainer, {\n          [classes.noClick]: onRowClick == null\n        }),\n        variant: \"body\",\n        style: {\n          height: rowHeight\n        },\n        align: columnIndex != null && columns[columnIndex].numeric || false ? 'right' : 'left',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }\n      }, cellData);\n    };\n\n    this.headerRenderer = ({\n      label,\n      columnIndex\n    }) => {\n      const {\n        headerHeight,\n        columns,\n        classes\n      } = this.props;\n      return /*#__PURE__*/React.createElement(TableCell, {\n        component: \"div\",\n        className: clsx(classes.tableCell, classes.flexContainer, classes.noClick),\n        variant: \"head\",\n        style: {\n          height: headerHeight\n        },\n        align: columns[columnIndex].numeric || false ? 'right' : 'left',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }, label));\n    };\n\n    this.headerRenderer = ({\n      columnData,\n      dataKey,\n      disableSort,\n      label,\n      sortBy,\n      sortDirection\n    }) => {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: dataKey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ReactVirtualized__Table__headerTruncatedText\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 7\n        }\n      }, label), /*#__PURE__*/React.createElement(Draggable, {\n        axis: \"x\",\n        defaultClassName: \"DragHandle\",\n        defaultClassNameDragging: \"DragHandleActive\",\n        onDrag: (event, {\n          deltaX\n        }) => this.resizeRow({\n          dataKey,\n          deltaX\n        }),\n        position: {\n          x: 0\n        },\n        zIndex: 999,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"DragHandleIcon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }\n      }, \"\\u22EE\")));\n    };\n\n    this.resizeRow = ({\n      dataKey,\n      deltaX\n    }) => this.setState(prevState => {\n      const prevWidths = prevState.widths;\n      const percentDelta = deltaX / TOTAL_WIDTH; // This is me being lazy :)\n\n      const nextDataKey = dataKey === \"name\" ? \"location\" : \"description\";\n      return {\n        widths: { ...prevWidths,\n          [dataKey]: prevWidths[dataKey] + percentDelta,\n          [nextDataKey]: prevWidths[nextDataKey] - percentDelta\n        }\n      };\n    });\n  }\n\n  render() {\n    const {\n      classes,\n      columns,\n      rowHeight,\n      headerHeight,\n      ...tableProps\n    } = this.props;\n    return /*#__PURE__*/React.createElement(AutoSizer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, ({\n      height,\n      width\n    }) => /*#__PURE__*/React.createElement(Table, Object.assign({\n      height: height,\n      width: width,\n      rowHeight: rowHeight,\n      gridStyle: {\n        direction: 'inherit'\n      },\n      headerHeight: headerHeight,\n      className: classes.table\n    }, tableProps, {\n      rowClassName: this.getRowClassName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }), columns.map(({\n      dataKey,\n      ...other\n    }, index) => {\n      return /*#__PURE__*/React.createElement(Column, Object.assign({\n        key: dataKey,\n        headerRenderer: headerProps => this.headerRenderer({ ...headerProps,\n          columnIndex: index\n        }),\n        className: classes.flexContainer,\n        cellRenderer: this.cellRenderer,\n        dataKey: dataKey\n      }, other, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }\n      }));\n    })));\n  }\n\n}\n\nMuiVirtualizedTable.defaultProps = {\n  headerHeight: 48,\n  rowHeight: 48\n};\nMuiVirtualizedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  columns: PropTypes.arrayOf(PropTypes.shape({\n    dataKey: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    numeric: PropTypes.bool,\n    width: PropTypes.number.isRequired\n  })).isRequired,\n  headerHeight: PropTypes.number,\n  onRowClick: PropTypes.func,\n  rowHeight: PropTypes.number\n};\nconst VirtualizedTable = withStyles(styles)(MuiVirtualizedTable);\nexport default function ReactVirtualizedTable() {\n  const {\n    widths\n  } = 0.5;\n  const [viprView, setViprView] = useState([]);\n  useEffect(() => {\n    ViprTablesViewService.getViprTablesView().then(response => {\n      setViprView(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Paper, {\n    style: {\n      height: 400,\n      width: '20%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(VirtualizedTable, {\n    width: TOTAL_WIDTH,\n    height: 300,\n    headerHeight: 20,\n    rowHeight: 30,\n    rowCount: viprView.length,\n    rowGetter: ({\n      index\n    }) => viprView[index],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Column, {\n    headerRenderer: this.headerRenderer,\n    dataKey: \"elnot\",\n    label: \"Elnot\",\n    width: widths.elnot * TOTAL_WIDTH,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    headerRenderer: this.headerRenderer,\n    dataKey: \"state_id\",\n    label: \"Status\",\n    width: widths.state_id * TOTAL_WIDTH,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/AdminApp/src/components/pages/viprpit/MuiVirtualizedTable.js"],"names":["React","useState","useEffect","PropTypes","clsx","withStyles","TableCell","Paper","AutoSizer","Column","Table","Draggable","ViprTablesViewService","TOTAL_WIDTH","styles","theme","flexContainer","display","alignItems","boxSizing","table","flip","paddingRight","direction","undefined","tableRow","cursor","tableRowHover","backgroundColor","palette","grey","tableCell","flex","noClick","MuiVirtualizedTable","PureComponent","getRowClassName","index","classes","onRowClick","props","cellRenderer","cellData","columnIndex","columns","rowHeight","height","numeric","headerRenderer","label","headerHeight","columnData","dataKey","disableSort","sortBy","sortDirection","event","deltaX","resizeRow","x","setState","prevState","prevWidths","widths","percentDelta","nextDataKey","render","tableProps","width","map","other","headerProps","defaultProps","propTypes","object","isRequired","arrayOf","shape","string","bool","number","func","VirtualizedTable","ReactVirtualizedTable","viprView","setViprView","getViprTablesView","then","response","data","length","elnot","state_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { AutoSizer, Column, Table } from 'react-virtualized';\r\nimport Draggable from \"react-draggable\";\r\n\r\nimport ViprTablesViewService from '../../../services/ViprTablesViewService';\r\n\r\nconst TOTAL_WIDTH = 500;\r\n\r\nconst styles = (theme) => ({\r\n  flexContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    boxSizing: 'border-box',\r\n  },\r\n  table: {\r\n    // temporary right-to-left patch, waiting for\r\n    // https://github.com/bvaughn/react-virtualized/issues/454\r\n    '& .ReactVirtualized__Table__headerRow': {\r\n      flip: false,\r\n      paddingRight: theme.direction === 'rtl' ? '0 !important' : undefined,\r\n    },\r\n  },\r\n  tableRow: {\r\n    cursor: 'pointer',\r\n  },\r\n  tableRowHover: {\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.grey[200],\r\n    },\r\n  },\r\n  tableCell: {\r\n    flex: 1,\r\n  },\r\n  noClick: {\r\n    cursor: 'initial',\r\n  },\r\n});\r\n\r\nclass MuiVirtualizedTable extends React.PureComponent {\r\n  static defaultProps = {\r\n    headerHeight: 48,\r\n    rowHeight: 48,    \r\n  };\r\n\r\n  getRowClassName = ({ index }) => {\r\n    const { classes, onRowClick } = this.props;\r\n\r\n    return clsx(classes.tableRow, classes.flexContainer, {\r\n      [classes.tableRowHover]: index !== -1 && onRowClick != null,\r\n    });\r\n  };\r\n\r\n  cellRenderer = ({ cellData, columnIndex }) => {\r\n    const { columns, classes, rowHeight, onRowClick } = this.props;\r\n    return (\r\n      <TableCell\r\n        component=\"div\"\r\n        className={clsx(classes.tableCell, classes.flexContainer, {\r\n          [classes.noClick]: onRowClick == null,\r\n        })}\r\n        variant=\"body\"\r\n        style={{ height: rowHeight }}\r\n        align={(columnIndex != null && columns[columnIndex].numeric) || false ? 'right' : 'left'}\r\n      >\r\n        {cellData}\r\n      </TableCell>\r\n    );\r\n  };\r\n\r\n  headerRenderer = ({ label, columnIndex }) => {\r\n    const { headerHeight, columns, classes } = this.props;\r\n\r\n    return (\r\n      <TableCell\r\n        component=\"div\"\r\n        className={clsx(classes.tableCell, classes.flexContainer, classes.noClick)}\r\n        variant=\"head\"\r\n        style={{ height: headerHeight }}\r\n        align={columns[columnIndex].numeric || false ? 'right' : 'left'}\r\n      >\r\n        <span>{label}</span>\r\n      </TableCell>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { classes, columns, rowHeight, headerHeight, ...tableProps } = this.props;\r\n    return (\r\n      <AutoSizer>\r\n        {({ height, width }) => (\r\n          <Table\r\n            height={height}\r\n            width={width}\r\n            rowHeight={rowHeight}\r\n            gridStyle={{\r\n              direction: 'inherit',\r\n            }}\r\n            headerHeight={headerHeight}\r\n            className={classes.table}\r\n            {...tableProps}\r\n            rowClassName={this.getRowClassName}\r\n          >\r\n            {columns.map(({ dataKey, ...other }, index) => {\r\n              return (\r\n                <Column\r\n                  key={dataKey}\r\n                  headerRenderer={(headerProps) =>\r\n                    this.headerRenderer({\r\n                      ...headerProps,\r\n                      columnIndex: index,\r\n                    })\r\n                  }\r\n                  className={classes.flexContainer}\r\n                  cellRenderer={this.cellRenderer}\r\n                  dataKey={dataKey}\r\n                  {...other}\r\n                />\r\n              );\r\n            })}\r\n          </Table>\r\n        )}\r\n      </AutoSizer>\r\n    );\r\n  }\r\n\r\n  \r\n\r\nheaderRenderer = ({\r\n  columnData,\r\n  dataKey,\r\n  disableSort,\r\n  label,\r\n  sortBy,\r\n  sortDirection\r\n}) => {\r\n  return (\r\n    <React.Fragment key={dataKey}>\r\n      <div className=\"ReactVirtualized__Table__headerTruncatedText\">\r\n        {label}\r\n      </div>\r\n      <Draggable\r\n        axis=\"x\"\r\n        defaultClassName=\"DragHandle\"\r\n        defaultClassNameDragging=\"DragHandleActive\"\r\n        onDrag={(event, { deltaX }) =>\r\n          this.resizeRow({\r\n            dataKey,\r\n            deltaX\r\n          })\r\n        }\r\n        position={{ x: 0 }}\r\n        zIndex={999}\r\n      >\r\n        <span className=\"DragHandleIcon\">⋮</span>\r\n      </Draggable>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nresizeRow = ({ dataKey, deltaX }) =>\r\n    this.setState(prevState => {\r\n      const prevWidths = prevState.widths;\r\n      const percentDelta = deltaX / TOTAL_WIDTH;\r\n\r\n      // This is me being lazy :)\r\n      const nextDataKey = dataKey === \"name\" ? \"location\" : \"description\";\r\n\r\n      return {\r\n        widths: {\r\n          ...prevWidths,\r\n          [dataKey]: prevWidths[dataKey] + percentDelta,\r\n          [nextDataKey]: prevWidths[nextDataKey] - percentDelta\r\n        }\r\n      };\r\n    });\r\n  \r\n}\r\n\r\nMuiVirtualizedTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  columns: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      dataKey: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      numeric: PropTypes.bool,\r\n      width: PropTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  headerHeight: PropTypes.number,\r\n  onRowClick: PropTypes.func,\r\n  rowHeight: PropTypes.number,\r\n};\r\n\r\nconst VirtualizedTable = withStyles(styles)(MuiVirtualizedTable);\r\n\r\nexport default function ReactVirtualizedTable() {\r\n\r\n  const { widths } = 0.5;\r\n  \r\n  const [viprView, setViprView] = useState([]);\r\n\r\n  useEffect(() => {\r\n    ViprTablesViewService.getViprTablesView()\r\n    .then(response => {\r\n        setViprView(response.data);\r\n    })\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Paper style={{ height: 400, width: '20%' }}>\r\n        <VirtualizedTable\r\n          width={TOTAL_WIDTH}\r\n          height={300}\r\n          headerHeight={20}\r\n          rowHeight={30}\r\n          rowCount={viprView.length}\r\n          rowGetter={({ index }) => viprView[index]}\r\n        >\r\n          <Column\r\n            headerRenderer={this.headerRenderer}\r\n            dataKey=\"elnot\"\r\n            label=\"Elnot\"\r\n            width={widths.elnot * TOTAL_WIDTH}\r\n          />\r\n          <Column\r\n            headerRenderer={this.headerRenderer}\r\n            dataKey=\"state_id\"\r\n            label=\"Status\"\r\n            width={widths.state_id * TOTAL_WIDTH}\r\n          />\r\n        </VirtualizedTable>\r\n      </Paper>\r\n    </>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}