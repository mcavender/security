{"ast":null,"code":"import toDate from '../toDate/index.js';\n/**\r\n * @name isAfter\r\n * @category Common Helpers\r\n * @summary Is the first date after the second one?\r\n *\r\n * @description\r\n * Is the first date after the second one?\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} date - the date that should be after the other one to return true\r\n * @param {Date|Number} dateToCompare - the date to compare with\r\n * @returns {Boolean} the first date is after the second date\r\n * @throws {TypeError} 2 arguments required\r\n *\r\n * @example\r\n * // Is 10 July 1989 after 11 February 1987?\r\n * var result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\r\n * //=> true\r\n */\n\nexport default function isAfter(dirtyDate, dirtyDateToCompare) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var dateToCompare = toDate(dirtyDateToCompare);\n  return date.getTime() > dateToCompare.getTime();\n}","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/AdminApp/node_modules/date-fns/esm/isAfter/index.js"],"names":["toDate","isAfter","dirtyDate","dirtyDateToCompare","arguments","length","TypeError","date","dateToCompare","getTime"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,oBAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,OAAT,CAAiBC,SAAjB,EAA4BC,kBAA5B,EAAgD;AAC7D,MAAIC,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,UAAM,IAAIC,SAAJ,CACJ,oCAAoCF,SAAS,CAACC,MAA9C,GAAuD,UADnD,CAAN;AAGD;;AAED,MAAIE,IAAI,GAAGP,MAAM,CAACE,SAAD,CAAjB;AACA,MAAIM,aAAa,GAAGR,MAAM,CAACG,kBAAD,CAA1B;AACA,SAAOI,IAAI,CAACE,OAAL,KAAiBD,aAAa,CAACC,OAAd,EAAxB;AACD","sourcesContent":["import toDate from '../toDate/index.js'\r\n\r\n/**\r\n * @name isAfter\r\n * @category Common Helpers\r\n * @summary Is the first date after the second one?\r\n *\r\n * @description\r\n * Is the first date after the second one?\r\n *\r\n * ### v2.0.0 breaking changes:\r\n *\r\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\r\n *\r\n * @param {Date|Number} date - the date that should be after the other one to return true\r\n * @param {Date|Number} dateToCompare - the date to compare with\r\n * @returns {Boolean} the first date is after the second date\r\n * @throws {TypeError} 2 arguments required\r\n *\r\n * @example\r\n * // Is 10 July 1989 after 11 February 1987?\r\n * var result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\r\n * //=> true\r\n */\r\nexport default function isAfter(dirtyDate, dirtyDateToCompare) {\r\n  if (arguments.length < 2) {\r\n    throw new TypeError(\r\n      '2 arguments required, but only ' + arguments.length + ' present'\r\n    )\r\n  }\r\n\r\n  var date = toDate(dirtyDate)\r\n  var dateToCompare = toDate(dirtyDateToCompare)\r\n  return date.getTime() > dateToCompare.getTime()\r\n}\r\n"]},"metadata":{},"sourceType":"module"}