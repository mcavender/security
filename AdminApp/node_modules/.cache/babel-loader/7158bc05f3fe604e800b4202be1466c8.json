{"ast":null,"code":"/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.keyboard_navigation.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (\"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator) {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nexports.default = void 0;\n\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\n\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\n\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\n\nvar _uiGrid_core = _interopRequireDefault(require(\"./ui.grid_core.modules\"));\n\nvar _uiGrid_core2 = _interopRequireDefault(require(\"./ui.grid_core.utils\"));\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _array = require(\"../../core/utils/array\");\n\nvar _selectors = require(\"../widget/selectors\");\n\nvar _index = require(\"../../events/utils/index\");\n\nvar _pointer = _interopRequireDefault(require(\"../../events/pointer\"));\n\nvar _click = require(\"../../events/click\");\n\nvar _common = require(\"../../core/utils/common\");\n\nvar accessibility = _interopRequireWildcard(require(\"../shared/accessibility\"));\n\nvar _browser = _interopRequireDefault(require(\"../../core/utils/browser\"));\n\nvar _short = require(\"../../events/short\");\n\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\n\nfunction _getRequireWildcardCache() {\n  if (\"function\" !== typeof WeakMap) {\n    return null;\n  }\n\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (null === obj || \"object\" !== _typeof(obj) && \"function\" !== typeof obj) {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar ROWS_VIEW_CLASS = \"rowsview\";\nvar EDIT_FORM_CLASS = \"edit-form\";\nvar GROUP_FOOTER_CLASS = \"group-footer\";\nvar ROW_CLASS = \"dx-row\";\nvar DATA_ROW_CLASS = \"dx-data-row\";\nvar GROUP_ROW_CLASS = \"dx-group-row\";\nvar HEADER_ROW_CLASS = \"dx-header-row\";\nvar EDIT_FORM_ITEM_CLASS = \"edit-form-item\";\nvar MASTER_DETAIL_ROW_CLASS = \"dx-master-detail-row\";\nvar FREESPACE_ROW_CLASS = \"dx-freespace-row\";\nvar VIRTUAL_ROW_CLASS = \"dx-virtual-row\";\nvar MASTER_DETAIL_CELL_CLASS = \"dx-master-detail-cell\";\nvar EDITOR_CELL_CLASS = \"dx-editor-cell\";\nvar DROPDOWN_EDITOR_OVERLAY_CLASS = \"dx-dropdowneditor-overlay\";\nvar COMMAND_EXPAND_CLASS = \"dx-command-expand\";\nvar COMMAND_SELECT_CLASS = \"dx-command-select\";\nvar COMMAND_EDIT_CLASS = \"dx-command-edit\";\nvar COMMAND_CELL_SELECTOR = \"[class^=dx-command]\";\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\nvar DATEBOX_WIDGET_NAME = \"dxDateBox\";\nvar FOCUS_STATE_CLASS = \"dx-state-focused\";\nvar WIDGET_CLASS = \"dx-widget\";\nvar REVERT_BUTTON_CLASS = \"dx-revert-button\";\nvar FAST_EDITING_DELETE_KEY = \"delete\";\nvar INTERACTIVE_ELEMENTS_SELECTOR = \"input:not([type='hidden']), textarea, a, select, button, [tabindex]\";\nvar EDIT_MODE_ROW = \"row\";\nvar EDIT_MODE_FORM = \"form\";\nvar EDIT_MODE_BATCH = \"batch\";\nvar EDIT_MODE_CELL = \"cell\";\nvar FOCUS_TYPE_ROW = \"row\";\nvar FOCUS_TYPE_CELL = \"cell\";\nvar COLUMN_HEADERS_VIEW = \"columnHeadersView\";\n\nfunction isGroupRow($row) {\n  return $row && $row.hasClass(GROUP_ROW_CLASS);\n}\n\nfunction isDetailRow($row) {\n  return $row && $row.hasClass(MASTER_DETAIL_ROW_CLASS);\n}\n\nfunction isDataRow($row) {\n  return $row && !isGroupRow($row) && !isDetailRow($row);\n}\n\nfunction isNotFocusedRow($row) {\n  return !$row || $row.hasClass(FREESPACE_ROW_CLASS) || $row.hasClass(VIRTUAL_ROW_CLASS);\n}\n\nfunction isCellElement($element) {\n  return $element.length && \"TD\" === $element[0].tagName;\n}\n\nfunction isEditorCell(that, $cell) {\n  return !that._isRowEditMode() && $cell && !$cell.hasClass(COMMAND_SELECT_CLASS) && $cell.hasClass(EDITOR_CELL_CLASS);\n}\n\nfunction isElementDefined($element) {\n  return (0, _type.isDefined)($element) && $element.length > 0;\n}\n\nfunction isMobile() {\n  return \"desktop\" !== _devices.default.current().deviceType;\n}\n\nfunction isCellInHeaderRow($cell) {\n  return !!$cell.parent(\".\".concat(HEADER_ROW_CLASS)).length;\n}\n\nfunction isFixedColumnIndexOffsetRequired(that, column) {\n  var rtlEnabled = that.option(\"rtlEnabled\");\n  var result = false;\n\n  if (rtlEnabled) {\n    result = !(\"right\" === column.fixedPosition || (0, _type.isDefined)(column.command) && !(0, _type.isDefined)(column.fixedPosition));\n  } else {\n    result = !(!(0, _type.isDefined)(column.fixedPosition) || \"left\" === column.fixedPosition);\n  }\n\n  return result;\n}\n\nfunction shouldPreventScroll(that) {\n  var keyboardController = that.getController(\"keyboardNavigation\");\n  return keyboardController._isVirtualScrolling() ? that.option(\"focusedRowIndex\") === keyboardController.getRowIndex() : false;\n}\n\nvar KeyboardNavigationController = _uiGrid_core.default.ViewController.inherit({\n  init: function () {\n    var _this = this;\n\n    this._dataController = this.getController(\"data\");\n    this._selectionController = this.getController(\"selection\");\n    this._editingController = this.getController(\"editing\");\n    this._headerPanel = this.getView(\"headerPanel\");\n    this._columnsController = this.getController(\"columns\");\n    this._editorFactory = this.getController(\"editorFactory\");\n\n    if (this.isKeyboardEnabled()) {\n      accessibility.subscribeVisibilityChange();\n      this._updateFocusTimeout = null;\n      this._fastEditingStarted = false;\n      this._focusedCellPosition = {};\n      this._canceledCellPosition = null;\n\n      var elementFocused = function ($element) {\n        _this.setupFocusedView();\n\n        if (_this._isNeedScroll) {\n          if ($element.is(\":visible\") && _this._focusedView && _this._focusedView.getScrollable) {\n            _this._focusedView._scrollToElement($element);\n\n            _this._isNeedScroll = false;\n          }\n        }\n      };\n\n      this._editorFactory.focused.add(elementFocused);\n\n      this._initViewHandlers();\n\n      this._initDocumentHandlers();\n\n      this.createAction(\"onKeyDown\");\n    }\n  },\n  _initViewHandlers: function () {\n    var _this2 = this;\n\n    var rowsView = this.getView(\"rowsView\");\n\n    var rowsViewFocusHandler = function (event) {\n      var $element = (0, _renderer.default)(event.target);\n      var isRelatedTargetInRowsView = (0, _renderer.default)(event.relatedTarget).closest(rowsView.element()).length;\n      var isCommandButton = $element.hasClass(\"dx-link\");\n\n      if (isCommandButton && !isRelatedTargetInRowsView && _this2._isEventInCurrentGrid(event)) {\n        var $focusedCell = _this2._getFocusedCell();\n\n        $focusedCell = !isElementDefined($focusedCell) ? rowsView.getCellElements(0).filter(\"[tabindex]\").eq(0) : $focusedCell;\n\n        if (!$element.closest($focusedCell).length) {\n          event.preventDefault();\n\n          _events_engine.default.trigger($focusedCell, \"focus\");\n        }\n      }\n    };\n\n    rowsView.renderCompleted.add(function (e) {\n      var $rowsView = rowsView.element();\n      var isFullUpdate = !e || \"refresh\" === e.changeType;\n      var isFocusedViewCorrect = _this2._focusedView && _this2._focusedView.name === rowsView.name;\n      var needUpdateFocus = false;\n      var isAppend = e && (\"append\" === e.changeType || \"prepend\" === e.changeType);\n      var $focusedElement = (0, _renderer.default)(\":focus\");\n      var isFocusedElementCorrect = !$focusedElement.length || $focusedElement.closest($rowsView).length || _browser.default.msie && $focusedElement.is(\"body\");\n\n      _events_engine.default.off($rowsView, \"focusin\", rowsViewFocusHandler);\n\n      _events_engine.default.on($rowsView, \"focusin\", rowsViewFocusHandler);\n\n      _this2._initPointerEventHandler();\n\n      _this2._initKeyDownHandler();\n\n      _this2._setRowsViewAttributes();\n\n      if (isFocusedViewCorrect && isFocusedElementCorrect) {\n        needUpdateFocus = _this2._isNeedFocus ? !isAppend : _this2._isHiddenFocus && isFullUpdate;\n        needUpdateFocus && _this2._updateFocus(true);\n      }\n    });\n  },\n  _initDocumentHandlers: function () {\n    var _this3 = this;\n\n    var document = _dom_adapter.default.getDocument();\n\n    this._documentClickHandler = this.createAction(function (e) {\n      var $target = (0, _renderer.default)(e.event.target);\n      var isCurrentRowsViewClick = _this3._isEventInCurrentGrid(e.event) && $target.closest(\".\".concat(_this3.addWidgetPrefix(ROWS_VIEW_CLASS))).length;\n      var isEditorOverlay = $target.closest(\".\".concat(DROPDOWN_EDITOR_OVERLAY_CLASS)).length;\n\n      var columnsResizerController = _this3.getController(\"columnsResizer\");\n\n      var isColumnResizing = !!columnsResizerController && columnsResizerController.isResizing();\n\n      if (!isCurrentRowsViewClick && !isEditorOverlay && !isColumnResizing) {\n        var targetInsideFocusedView = _this3._focusedView ? $target.parents().filter(_this3._focusedView.element()).length > 0 : false;\n        !targetInsideFocusedView && _this3._resetFocusedCell(true);\n\n        _this3._resetFocusedView();\n      }\n    });\n\n    _events_engine.default.on(document, (0, _index.addNamespace)(_pointer.default.down, \"dxDataGridKeyboardNavigation\"), this._documentClickHandler);\n  },\n  _setRowsViewAttributes: function () {\n    var $rowsView = this._getRowsViewElement();\n\n    var isGridEmpty = !this._dataController.getVisibleRows().length;\n\n    if (isGridEmpty) {\n      this._applyTabIndexToElement($rowsView);\n    }\n  },\n  _initPointerEventHandler: function () {\n    var pointerEventName = !isMobile() ? _pointer.default.down : _click.name;\n    var clickSelector = \".\".concat(ROW_CLASS, \" > td, .\").concat(ROW_CLASS);\n\n    var $rowsView = this._getRowsViewElement();\n\n    if (!(0, _type.isDefined)(this._pointerEventAction)) {\n      this._pointerEventAction = this.createAction(this._pointerEventHandler);\n    }\n\n    _events_engine.default.off($rowsView, (0, _index.addNamespace)(pointerEventName, \"dxDataGridKeyboardNavigation\"), this._pointerEventAction);\n\n    _events_engine.default.on($rowsView, (0, _index.addNamespace)(pointerEventName, \"dxDataGridKeyboardNavigation\"), clickSelector, this._pointerEventAction);\n  },\n  _initKeyDownHandler: function () {\n    var _this4 = this;\n\n    var $rowsView = this._getRowsViewElement();\n\n    _short.keyboard.off(this._keyDownListener);\n\n    this._keyDownListener = _short.keyboard.on($rowsView, null, function (e) {\n      return _this4._keyDownHandler(e);\n    });\n  },\n  dispose: function () {\n    this.callBase();\n\n    this._resetFocusedView();\n\n    _short.keyboard.off(this._keyDownListener);\n\n    _events_engine.default.off(_dom_adapter.default.getDocument(), (0, _index.addNamespace)(_pointer.default.down, \"dxDataGridKeyboardNavigation\"), this._documentClickHandler);\n\n    clearTimeout(this._updateFocusTimeout);\n    accessibility.unsubscribeVisibilityChange();\n  },\n  optionChanged: function (args) {\n    var that = this;\n\n    switch (args.name) {\n      case \"keyboardNavigation\":\n      case \"useLegacyKeyboardNavigation\":\n        args.handled = true;\n        break;\n\n      default:\n        that.callBase(args);\n    }\n  },\n  isRowFocusType: function () {\n    return this.focusType === FOCUS_TYPE_ROW;\n  },\n  isCellFocusType: function () {\n    return this.focusType === FOCUS_TYPE_CELL;\n  },\n  setRowFocusType: function () {\n    if (this.option(\"focusedRowEnabled\")) {\n      this.focusType = FOCUS_TYPE_ROW;\n    }\n  },\n  setCellFocusType: function () {\n    this.focusType = FOCUS_TYPE_CELL;\n  },\n  _keyDownHandler: function (e) {\n    var isEditing = this._editingController.isEditing();\n\n    var needStopPropagation = true;\n    var originalEvent = e.originalEvent;\n\n    var isHandled = this._processOnKeyDown(e);\n\n    if (originalEvent.isDefaultPrevented()) {\n      return;\n    }\n\n    this._isNeedFocus = true;\n    this._isNeedScroll = true;\n\n    this._updateFocusedCellPositionByTarget(originalEvent.target);\n\n    if (!isHandled) {\n      switch (e.keyName) {\n        case \"leftArrow\":\n        case \"rightArrow\":\n          this._leftRightKeysHandler(e, isEditing);\n\n          break;\n\n        case \"upArrow\":\n        case \"downArrow\":\n          if (e.ctrl) {\n            accessibility.selectView(\"rowsView\", this, originalEvent);\n          } else {\n            this._upDownKeysHandler(e, isEditing);\n          }\n\n          break;\n\n        case \"pageUp\":\n        case \"pageDown\":\n          this._pageUpDownKeyHandler(e);\n\n          break;\n\n        case \"space\":\n          this._spaceKeyHandler(e, isEditing);\n\n          break;\n\n        case \"A\":\n          if (e.ctrl) {\n            this._ctrlAKeyHandler(e, isEditing);\n          } else {\n            this._beginFastEditing(e.originalEvent);\n          }\n\n          break;\n\n        case \"tab\":\n          this._tabKeyHandler(e, isEditing);\n\n          break;\n\n        case \"enter\":\n          this._enterKeyHandler(e, isEditing);\n\n          break;\n\n        case \"escape\":\n          this._escapeKeyHandler(e, isEditing);\n\n          break;\n\n        case \"F\":\n          if (e.ctrl) {\n            this._ctrlFKeyHandler(e);\n          } else {\n            this._beginFastEditing(e.originalEvent);\n          }\n\n          break;\n\n        case \"F2\":\n          this._f2KeyHandler();\n\n          break;\n\n        case \"del\":\n        case \"backspace\":\n          if (this._isFastEditingAllowed() && !this._isFastEditingStarted()) {\n            this._beginFastEditing(originalEvent, true);\n          }\n\n          break;\n\n        default:\n          if (!this._beginFastEditing(originalEvent)) {\n            this._isNeedFocus = false;\n            this._isNeedScroll = false;\n            needStopPropagation = false;\n          }\n\n      }\n\n      if (needStopPropagation) {\n        originalEvent.stopPropagation();\n      }\n    }\n  },\n  _processOnKeyDown: function (eventArgs) {\n    var originalEvent = eventArgs.originalEvent;\n    var args = {\n      handled: false,\n      event: originalEvent\n    };\n    this.executeAction(\"onKeyDown\", args);\n    eventArgs.ctrl = originalEvent.ctrlKey;\n    eventArgs.alt = originalEvent.altKey;\n    eventArgs.shift = originalEvent.shiftKey;\n    return !!args.handled;\n  },\n  _closeEditCell: function () {\n    var _this5 = this;\n\n    setTimeout(function () {\n      _this5._editingController.closeEditCell();\n    });\n  },\n  _leftRightKeysHandler: function (eventArgs, isEditing) {\n    var rowIndex = this.getVisibleRowIndex();\n    var $event = eventArgs.originalEvent;\n\n    var $row = this._focusedView && this._focusedView.getRow(rowIndex);\n\n    var directionCode = this._getDirectionCodeByKey(eventArgs.keyName);\n\n    var isEditingNavigationMode = this._isFastEditingStarted();\n\n    var allowNavigate = (!isEditing || isEditingNavigationMode) && isDataRow($row);\n\n    if (allowNavigate) {\n      this.setCellFocusType();\n      isEditingNavigationMode && this._closeEditCell();\n\n      if (this._isVirtualColumnRender()) {\n        this._processVirtualHorizontalPosition(directionCode);\n      }\n\n      var $cell = this._getNextCell(directionCode);\n\n      if (isElementDefined($cell)) {\n        this._arrowKeysHandlerFocusCell($event, $cell, directionCode);\n      }\n\n      $event && $event.preventDefault();\n    }\n  },\n  _upDownKeysHandler: function (eventArgs, isEditing) {\n    var rowIndex = this._focusedCellPosition.rowIndex;\n    var visibleRowIndex = this.getVisibleRowIndex();\n\n    var $row = this._focusedView && this._focusedView.getRow(visibleRowIndex);\n\n    var $event = eventArgs.originalEvent;\n    var isUpArrow = \"upArrow\" === eventArgs.keyName;\n\n    var dataSource = this._dataController.dataSource();\n\n    var isEditingNavigationMode = this._isFastEditingStarted();\n\n    var allowNavigate = (!isEditing || isEditingNavigationMode) && $row && !isDetailRow($row);\n\n    if (allowNavigate) {\n      isEditingNavigationMode && this._closeEditCell();\n\n      if (!this._navigateNextCell($event, eventArgs.keyName)) {\n        if (this._isVirtualRowRender() && isUpArrow && dataSource && !dataSource.isLoading()) {\n          var rowHeight = $row.outerHeight();\n          rowIndex = this._focusedCellPosition.rowIndex - 1;\n\n          this._scrollBy(0, -rowHeight, rowIndex, $event);\n        }\n      }\n\n      $event && $event.preventDefault();\n    }\n  },\n  _pageUpDownKeyHandler: function (eventArgs) {\n    var pageIndex = this._dataController.pageIndex();\n\n    var pageCount = this._dataController.pageCount();\n\n    var pagingEnabled = this.option(\"paging.enabled\");\n    var isPageUp = \"pageUp\" === eventArgs.keyName;\n    var pageStep = isPageUp ? -1 : 1;\n    var scrollable = this.getView(\"rowsView\").getScrollable();\n\n    if (pagingEnabled && !this._isVirtualScrolling()) {\n      if ((isPageUp ? pageIndex > 0 : pageIndex < pageCount - 1) && !this._isVirtualScrolling()) {\n        this._dataController.pageIndex(pageIndex + pageStep);\n\n        eventArgs.originalEvent.preventDefault();\n      }\n    } else {\n      if (scrollable && scrollable._container().height() < scrollable.$content().height()) {\n        this._scrollBy(0, scrollable._container().height() * pageStep);\n\n        eventArgs.originalEvent.preventDefault();\n      }\n    }\n  },\n  _spaceKeyHandler: function (eventArgs, isEditing) {\n    var rowIndex = this.getVisibleRowIndex();\n    var $target = (0, _renderer.default)(eventArgs.originalEvent && eventArgs.originalEvent.target);\n\n    if (this.option(\"selection\") && \"none\" !== this.option(\"selection\").mode && !isEditing) {\n      var isFocusedRowElement = \"row\" === this._getElementType($target) && this.isRowFocusType() && isDataRow($target);\n      var isFocusedSelectionCell = $target.hasClass(COMMAND_SELECT_CLASS);\n\n      if (isFocusedSelectionCell && \"onClick\" === this.option(\"selection.showCheckBoxesMode\")) {\n        this._selectionController.startSelectionWithCheckboxes();\n      }\n\n      if (isFocusedRowElement || $target.parent().hasClass(DATA_ROW_CLASS) || $target.hasClass(this.addWidgetPrefix(ROWS_VIEW_CLASS))) {\n        this._selectionController.changeItemSelection(rowIndex, {\n          shift: eventArgs.shift,\n          control: eventArgs.ctrl\n        });\n\n        eventArgs.originalEvent.preventDefault();\n      }\n    } else {\n      this._beginFastEditing(eventArgs.originalEvent);\n    }\n  },\n  _ctrlAKeyHandler: function (eventArgs, isEditing) {\n    if (!isEditing && eventArgs.ctrl && !eventArgs.alt && \"multiple\" === this.option(\"selection.mode\") && this.option(\"selection.allowSelectAll\")) {\n      this._selectionController.selectAll();\n\n      eventArgs.originalEvent.preventDefault();\n    }\n  },\n  _tabKeyHandler: function (eventArgs, isEditing) {\n    var editingOptions = this.option(\"editing\");\n    var direction = eventArgs.shift ? \"previous\" : \"next\";\n    var isCellPositionDefined = (0, _type.isDefined)(this._focusedCellPosition) && !(0, _type.isEmptyObject)(this._focusedCellPosition);\n\n    var isOriginalHandlerRequired = !isCellPositionDefined || !eventArgs.shift && this._isLastValidCell(this._focusedCellPosition) || eventArgs.shift && this._isFirstValidCell(this._focusedCellPosition);\n\n    var eventTarget = eventArgs.originalEvent.target;\n\n    var focusedViewElement = this._focusedView && this._focusedView.element();\n\n    if (this._handleTabKeyOnMasterDetailCell(eventTarget, direction)) {\n      return;\n    }\n\n    (0, _renderer.default)(focusedViewElement).addClass(FOCUS_STATE_CLASS);\n\n    if (editingOptions && eventTarget && !isOriginalHandlerRequired) {\n      if ((0, _renderer.default)(eventTarget).hasClass(this.addWidgetPrefix(ROWS_VIEW_CLASS))) {\n        this._resetFocusedCell();\n      }\n\n      if (this._isVirtualColumnRender()) {\n        this._processVirtualHorizontalPosition(direction);\n      }\n\n      if (isEditing) {\n        if (!this._editingCellTabHandler(eventArgs, direction)) {\n          return;\n        }\n      } else {\n        if (this._targetCellTabHandler(eventArgs, direction)) {\n          isOriginalHandlerRequired = true;\n        }\n      }\n    }\n\n    if (isOriginalHandlerRequired) {\n      this._editorFactory.loseFocus();\n\n      if (this._editingController.isEditing() && !this._isRowEditMode()) {\n        this._resetFocusedCell(true);\n\n        this._resetFocusedView();\n\n        this._closeEditCell();\n      }\n    } else {\n      eventArgs.originalEvent.preventDefault();\n    }\n  },\n  _getMaxHorizontalOffset: function () {\n    var scrollable = this.component.getScrollable();\n    var rowsView = this.getView(\"rowsView\");\n    var offset = scrollable ? scrollable.scrollWidth() - (0, _renderer.default)(rowsView.element()).width() : 0;\n    return offset;\n  },\n  _isColumnRendered: function (columnIndex) {\n    var allVisibleColumns = this._columnsController.getVisibleColumns(null, true);\n\n    var renderedVisibleColumns = this._columnsController.getVisibleColumns();\n\n    var column = allVisibleColumns[columnIndex];\n    var result = false;\n\n    if (column) {\n      result = renderedVisibleColumns.indexOf(column) >= 0;\n    }\n\n    return result;\n  },\n  _isFixedColumn: function (columnIndex) {\n    var allVisibleColumns = this._columnsController.getVisibleColumns(null, true);\n\n    var column = allVisibleColumns[columnIndex];\n    return !!column && !!column.fixed;\n  },\n  _isColumnVirtual: function (columnIndex) {\n    var localColumnIndex = columnIndex - this._columnsController.getColumnIndexOffset();\n\n    var visibleColumns = this._columnsController.getVisibleColumns();\n\n    var column = visibleColumns[localColumnIndex];\n    return !!column && \"virtual\" === column.command;\n  },\n  _processVirtualHorizontalPosition: function (direction) {\n    var scrollable = this.component.getScrollable();\n    var columnIndex = this.getColumnIndex();\n    var nextColumnIndex;\n    var horizontalScrollPosition = 0;\n    var needToScroll = false;\n\n    switch (direction) {\n      case \"next\":\n      case \"nextInRow\":\n        var columnsCount = this._getVisibleColumnCount();\n\n        nextColumnIndex = columnIndex + 1;\n        horizontalScrollPosition = this.option(\"rtlEnabled\") ? this._getMaxHorizontalOffset() : 0;\n\n        if (\"next\" === direction) {\n          needToScroll = columnsCount === nextColumnIndex || this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex);\n        } else {\n          needToScroll = columnsCount > nextColumnIndex && this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex);\n        }\n\n        break;\n\n      case \"previous\":\n      case \"previousInRow\":\n        nextColumnIndex = columnIndex - 1;\n        horizontalScrollPosition = this.option(\"rtlEnabled\") ? 0 : this._getMaxHorizontalOffset();\n\n        if (\"previous\" === direction) {\n          var columnIndexOffset = this._columnsController.getColumnIndexOffset();\n\n          var leftEdgePosition = nextColumnIndex < 0 && 0 === columnIndexOffset;\n          needToScroll = leftEdgePosition || this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex);\n        } else {\n          needToScroll = nextColumnIndex >= 0 && this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex);\n        }\n\n    }\n\n    if (needToScroll) {\n      scrollable.scrollTo({\n        left: horizontalScrollPosition\n      });\n    } else {\n      if ((0, _type.isDefined)(nextColumnIndex) && (0, _type.isDefined)(direction) && this._isColumnVirtual(nextColumnIndex)) {\n        horizontalScrollPosition = this._getHorizontalScrollPositionOffset(direction);\n        0 !== horizontalScrollPosition && scrollable.scrollBy({\n          left: horizontalScrollPosition,\n          top: 0\n        });\n      }\n    }\n  },\n  _getHorizontalScrollPositionOffset: function (direction) {\n    var positionOffset = 0;\n\n    var $currentCell = this._getCell(this._focusedCellPosition);\n\n    var currentCellWidth = $currentCell && $currentCell.outerWidth();\n\n    if (currentCellWidth > 0) {\n      var rtlMultiplier = this.option(\"rtlEnabled\") ? -1 : 1;\n      positionOffset = \"nextInRow\" === direction || \"next\" === direction ? currentCellWidth * rtlMultiplier : currentCellWidth * rtlMultiplier * -1;\n    }\n\n    return positionOffset;\n  },\n  _editingCellTabHandler: function (eventArgs, direction) {\n    var eventTarget = eventArgs.originalEvent.target;\n\n    var $cell = this._getCellElementFromTarget(eventTarget);\n\n    var isEditingAllowed;\n    var $event = eventArgs.originalEvent;\n\n    var elementType = this._getElementType(eventTarget);\n\n    if ($cell.is(COMMAND_CELL_SELECTOR)) {\n      return !this._targetCellTabHandler(eventArgs, direction);\n    }\n\n    this._updateFocusedCellPosition($cell);\n\n    var nextCellInfo = this._getNextCellByTabKey($event, direction, elementType);\n\n    $cell = nextCellInfo.$cell;\n\n    if (!$cell || this._handleTabKeyOnMasterDetailCell($cell, direction)) {\n      return false;\n    }\n\n    var columnsController = this._columnsController;\n    var cellIndex = this.getView(\"rowsView\").getCellIndex($cell);\n    var columnIndex = cellIndex + columnsController.getColumnIndexOffset();\n    var column = columnsController.getVisibleColumns(null, true)[columnIndex];\n    var $row = $cell && $cell.parent();\n\n    var rowIndex = this._getRowIndex($row);\n\n    var row = this._dataController.items()[rowIndex];\n\n    var editingController = this._editingController;\n\n    if (column && column.allowEditing) {\n      var _isDataRow = !row || \"data\" === row.rowType;\n\n      isEditingAllowed = editingController.allowUpdating({\n        row: row\n      }) ? _isDataRow : row && row.isNewRow;\n    }\n\n    if (!isEditingAllowed) {\n      this._closeEditCell();\n    }\n\n    if (this._focusCell($cell, !nextCellInfo.isHighlighted)) {\n      if (!this._isRowEditMode() && isEditingAllowed) {\n        this._editFocusedCell();\n      } else {\n        this._focusInteractiveElement($cell, eventArgs.shift);\n      }\n    }\n\n    return true;\n  },\n  _targetCellTabHandler: function (eventArgs, direction) {\n    var $event = eventArgs.originalEvent;\n    var eventTarget = $event.target;\n\n    var $cell = this._getCellElementFromTarget(eventTarget);\n\n    var $lastInteractiveElement = this._getInteractiveElement($cell, !eventArgs.shift);\n\n    var isOriginalHandlerRequired = false;\n    var elementType;\n\n    if (!isEditorCell(this, $cell) && $lastInteractiveElement.length && eventTarget !== $lastInteractiveElement.get(0)) {\n      isOriginalHandlerRequired = true;\n    } else {\n      if (void 0 === this._focusedCellPosition.rowIndex && (0, _renderer.default)(eventTarget).hasClass(ROW_CLASS)) {\n        this._updateFocusedCellPosition($cell);\n      }\n\n      elementType = this._getElementType(eventTarget);\n\n      if (this.isRowFocusType()) {\n        this.setCellFocusType();\n\n        if (\"row\" === elementType && isDataRow((0, _renderer.default)(eventTarget))) {\n          eventTarget = this.getFirstValidCellInRow((0, _renderer.default)(eventTarget));\n          elementType = this._getElementType(eventTarget);\n        }\n      }\n\n      var nextCellInfo = this._getNextCellByTabKey($event, direction, elementType);\n\n      $cell = nextCellInfo.$cell;\n\n      if (!$cell) {\n        return false;\n      }\n\n      $cell = this._checkNewLineTransition($event, $cell);\n\n      if (!$cell) {\n        return false;\n      }\n\n      this._focusCell($cell, !nextCellInfo.isHighlighted);\n\n      if (!isEditorCell(this, $cell)) {\n        this._focusInteractiveElement($cell, eventArgs.shift);\n      }\n    }\n\n    return isOriginalHandlerRequired;\n  },\n  _getNextCellByTabKey: function ($event, direction, elementType) {\n    var $cell = this._getNextCell(direction, elementType);\n\n    var args = $cell && this._fireFocusedCellChanging($event, $cell, true);\n\n    if (!args || args.cancel) {\n      return {};\n    }\n\n    if (args.$newCellElement) {\n      $cell = args.$newCellElement;\n    }\n\n    return {\n      $cell: $cell,\n      isHighlighted: args.isHighlighted\n    };\n  },\n  _checkNewLineTransition: function ($event, $cell) {\n    var rowIndex = this.getVisibleRowIndex();\n    var $row = $cell.parent();\n\n    if (rowIndex !== this._getRowIndex($row)) {\n      var cellPosition = this._getCellPosition($cell);\n\n      var args = this._fireFocusedRowChanging($event, $row);\n\n      if (args.cancel) {\n        return;\n      }\n\n      if (args.rowIndexChanged) {\n        this.setFocusedColumnIndex(cellPosition.columnIndex);\n        $cell = this._getFocusedCell();\n      }\n    }\n\n    return $cell;\n  },\n  _enterKeyHandler: function (eventArgs, isEditing) {\n    var $cell = this._getFocusedCell();\n\n    var rowIndex = this.getVisibleRowIndex();\n\n    var $row = this._focusedView && this._focusedView.getRow(rowIndex);\n\n    if (this.option(\"grouping.allowCollapsing\") && isGroupRow($row) || this.option(\"masterDetail.enabled\") && $cell && $cell.hasClass(COMMAND_EXPAND_CLASS)) {\n      var key = this._dataController.getKeyByRowIndex(rowIndex);\n\n      var item = this._dataController.items()[rowIndex];\n\n      if (void 0 !== key && item && item.data && !item.data.isContinuation) {\n        this._dataController.changeRowExpand(key);\n      }\n    } else {\n      this._processEnterKeyForDataCell(eventArgs, isEditing);\n    }\n  },\n  _processEnterKeyForDataCell: function (eventArgs, isEditing) {\n    var direction = this._getEnterKeyDirection(eventArgs);\n\n    var allowEditingOnEnterKey = this._allowEditingOnEnterKey();\n\n    if (isEditing || !allowEditingOnEnterKey && direction) {\n      this._handleEnterKeyEditingCell(eventArgs.originalEvent);\n\n      if (\"next\" === direction || \"previous\" === direction) {\n        this._targetCellTabHandler(eventArgs, direction);\n      } else {\n        if (\"upArrow\" === direction || \"downArrow\" === direction) {\n          this._navigateNextCell(eventArgs.originalEvent, direction);\n        }\n      }\n    } else {\n      if (allowEditingOnEnterKey) {\n        this._startEditing(eventArgs);\n      }\n    }\n  },\n  _getEnterKeyDirection: function (eventArgs) {\n    var enterKeyDirection = this.option(\"keyboardNavigation.enterKeyDirection\");\n    var isShift = eventArgs.shift;\n\n    if (\"column\" === enterKeyDirection) {\n      return isShift ? \"upArrow\" : \"downArrow\";\n    }\n\n    if (\"row\" === enterKeyDirection) {\n      return isShift ? \"previous\" : \"next\";\n    }\n  },\n  _handleEnterKeyEditingCell: function (event) {\n    var target = event.target;\n\n    var $cell = this._getCellElementFromTarget(target);\n\n    var isRowEditMode = this._isRowEditMode();\n\n    this._updateFocusedCellPosition($cell);\n\n    if (isRowEditMode) {\n      this._focusEditFormCell($cell);\n\n      setTimeout(this._editingController.saveEditData.bind(this._editingController));\n    } else {\n      _events_engine.default.trigger((0, _renderer.default)(target), \"change\");\n\n      this._closeEditCell();\n\n      event.preventDefault();\n    }\n  },\n  _escapeKeyHandler: function (eventArgs, isEditing) {\n    var $cell = this._getCellElementFromTarget(eventArgs.originalEvent.target);\n\n    if (isEditing) {\n      this._updateFocusedCellPosition($cell);\n\n      if (!this._isRowEditMode()) {\n        if (\"cell\" === this._editingController.getEditMode()) {\n          this._editingController.cancelEditData();\n        } else {\n          this._closeEditCell();\n        }\n      } else {\n        this._focusEditFormCell($cell);\n\n        this._editingController.cancelEditData();\n\n        if (0 === this._dataController.items().length) {\n          this._resetFocusedCell();\n\n          this._editorFactory.loseFocus();\n        }\n      }\n\n      eventArgs.originalEvent.preventDefault();\n    }\n  },\n  _ctrlFKeyHandler: function (eventArgs) {\n    if (this.option(\"searchPanel.visible\")) {\n      var searchTextEditor = this._headerPanel.getSearchTextEditor();\n\n      if (searchTextEditor) {\n        searchTextEditor.focus();\n        eventArgs.originalEvent.preventDefault();\n      }\n    }\n  },\n  _f2KeyHandler: function () {\n    var isEditing = this._editingController.isEditing();\n\n    var rowIndex = this.getVisibleRowIndex();\n\n    var $row = this._focusedView && this._focusedView.getRow(rowIndex);\n\n    if (!isEditing && isDataRow($row)) {\n      this._startEditing();\n    }\n  },\n  _navigateNextCell: function ($event, keyCode) {\n    var $cell = this._getNextCell(keyCode);\n\n    var directionCode = this._getDirectionCodeByKey(keyCode);\n\n    var isCellValid = $cell && this._isCellValid($cell);\n\n    var result = isCellValid ? this._arrowKeysHandlerFocusCell($event, $cell, directionCode) : false;\n    return result;\n  },\n  _arrowKeysHandlerFocusCell: function ($event, $nextCell, direction) {\n    var isVerticalDirection = \"prevRow\" === direction || \"nextRow\" === direction;\n\n    var args = this._fireFocusChangingEvents($event, $nextCell, isVerticalDirection, true);\n\n    $nextCell = args.$newCellElement;\n\n    if (!args.cancel && this._isCellValid($nextCell)) {\n      this._focus($nextCell, !args.isHighlighted);\n\n      return true;\n    }\n\n    return false;\n  },\n  _beginFastEditing: function (originalEvent, isDeleting) {\n    if (!this._isFastEditingAllowed() || originalEvent.altKey || originalEvent.ctrlKey || this._editingController.isEditing()) {\n      return false;\n    }\n\n    if (isDeleting) {\n      this._startEditing(originalEvent, FAST_EDITING_DELETE_KEY);\n    } else {\n      var key = originalEvent.key;\n      var keyCode = originalEvent.keyCode || originalEvent.which;\n      var fastEditingKey = key || keyCode && String.fromCharCode(keyCode);\n\n      if (fastEditingKey && (1 === fastEditingKey.length || fastEditingKey === FAST_EDITING_DELETE_KEY)) {\n        this._startEditing(originalEvent, fastEditingKey);\n      }\n    }\n\n    return true;\n  },\n  _pointerEventHandler: function (e) {\n    var event = e.event || e;\n    var $target = (0, _renderer.default)(event.currentTarget);\n    var rowsView = this.getView(\"rowsView\");\n    var focusedViewElement = rowsView && rowsView.element();\n    var $parent = $target.parent();\n    var isInteractiveElement = (0, _renderer.default)(event.target).is(INTERACTIVE_ELEMENTS_SELECTOR);\n    var isRevertButton = !!(0, _renderer.default)(event.target).closest(\".\".concat(REVERT_BUTTON_CLASS)).length;\n    var isExpandCommandCell = $target.hasClass(COMMAND_EXPAND_CLASS);\n\n    if (!this._isEventInCurrentGrid(event)) {\n      return;\n    }\n\n    if (!isRevertButton && (this._isCellValid($target, !isInteractiveElement) || isExpandCommandCell)) {\n      $target = this._isInsideEditForm($target) ? (0, _renderer.default)(event.target) : $target;\n\n      this._focusView();\n\n      (0, _renderer.default)(focusedViewElement).removeClass(FOCUS_STATE_CLASS);\n\n      if ($parent.hasClass(FREESPACE_ROW_CLASS)) {\n        this._updateFocusedCellPosition($target);\n\n        this._applyTabIndexToElement(this._focusedView.element());\n\n        this._focusedView.focus();\n      } else {\n        if (!this._isMasterDetailCell($target)) {\n          this._clickTargetCellHandler(event, $target);\n        } else {\n          this._updateFocusedCellPosition($target);\n        }\n      }\n    } else {\n      if ($target.is(\"td\")) {\n        this._resetFocusedCell();\n      }\n    }\n  },\n  _clickTargetCellHandler: function (event, $cell) {\n    var columnIndex = this.getView(\"rowsView\").getCellIndex($cell);\n\n    var column = this._columnsController.getVisibleColumns()[columnIndex];\n\n    var isCellEditMode = this._isCellEditMode();\n\n    this.setCellFocusType();\n\n    var args = this._fireFocusChangingEvents(event, $cell, true);\n\n    $cell = args.$newCellElement;\n\n    if (!args.cancel) {\n      if (args.resetFocusedRow) {\n        this.getController(\"focus\")._resetFocusedRow();\n\n        return;\n      }\n\n      if (args.rowIndexChanged) {\n        $cell = this._getFocusedCell();\n      }\n\n      if (!args.isHighlighted && !isCellEditMode) {\n        this.setRowFocusType();\n      }\n\n      this._updateFocusedCellPosition($cell);\n\n      if (this._allowRowUpdating() && isCellEditMode && column && column.allowEditing) {\n        this._isNeedFocus = false;\n        this._isHiddenFocus = false;\n      } else {\n        var $target = event && (0, _renderer.default)(event.target).closest(INTERACTIVE_ELEMENTS_SELECTOR + \", td\");\n        var isInteractiveTarget = $target && $target.not($cell).is(INTERACTIVE_ELEMENTS_SELECTOR);\n        var isEditor = !!column && !column.command && $cell.hasClass(EDITOR_CELL_CLASS);\n        var isDisabled = !isEditor && (!args.isHighlighted || isInteractiveTarget);\n\n        this._focus($cell, isDisabled, isInteractiveTarget);\n      }\n    } else {\n      this.setRowFocusType();\n      this.setFocusedRowIndex(args.prevRowIndex);\n      $cell = this._getFocusedCell();\n\n      if (this._editingController.isEditing() && isCellEditMode) {\n        this._closeEditCell();\n      }\n    }\n  },\n  _allowRowUpdating: function () {\n    var rowIndex = this.getVisibleRowIndex();\n\n    var row = this._dataController.items()[rowIndex];\n\n    return this._editingController.allowUpdating({\n      row: row\n    }, \"click\");\n  },\n  focus: function (element) {\n    var activeElementSelector;\n    var focusedRowEnabled = this.option(\"focusedRowEnabled\");\n    var isHighlighted = isCellElement((0, _renderer.default)(element));\n\n    if (!element) {\n      activeElementSelector = \".dx-datagrid-rowsview .dx-row[tabindex]\";\n\n      if (!focusedRowEnabled) {\n        activeElementSelector += \", .dx-datagrid-rowsview .dx-row > td[tabindex]\";\n      }\n\n      element = this.component.$element().find(activeElementSelector).first();\n    }\n\n    element && this._focusElement((0, _renderer.default)(element), isHighlighted);\n  },\n  getFocusedView: function () {\n    return this._focusedView;\n  },\n  setupFocusedView: function () {\n    if (this.isKeyboardEnabled() && !(0, _type.isDefined)(this._focusedView)) {\n      this._focusView();\n    }\n  },\n  _focusElement: function ($element, isHighlighted) {\n    var rowsViewElement = (0, _renderer.default)(this._getRowsViewElement());\n    var $focusedView = $element.closest(rowsViewElement);\n    var isRowFocusType = this.isRowFocusType();\n    var args = {};\n\n    if (!$focusedView.length || isCellElement($element) && !this._isCellValid($element)) {\n      return;\n    }\n\n    this._focusView();\n\n    this._isNeedFocus = true;\n    this._isNeedScroll = true;\n\n    if (isCellElement($element) || isGroupRow($element)) {\n      this.setCellFocusType();\n      args = this._fireFocusChangingEvents(null, $element, false, isHighlighted);\n      $element = args.$newCellElement;\n\n      if (isRowFocusType && !args.isHighlighted) {\n        this.setRowFocusType();\n      }\n    }\n\n    if (!args.cancel) {\n      this._focus($element, !args.isHighlighted);\n\n      this._focusInteractiveElement($element);\n    }\n  },\n  _getFocusedViewByElement: function ($element) {\n    var view = this.getFocusedView();\n    var $view = view && (0, _renderer.default)(view.element());\n    return $element && 0 !== $element.closest($view).length;\n  },\n  _focusView: function () {\n    this._focusedView = this.getView(\"rowsView\");\n  },\n  _resetFocusedView: function () {\n    this.setRowFocusType();\n    this._focusedView = null;\n  },\n  _focusInteractiveElement: function ($cell, isLast) {\n    if (!$cell) {\n      return;\n    }\n\n    var $focusedElement = this._getInteractiveElement($cell, isLast);\n\n    _uiGrid_core2.default.focusAndSelectElement(this, $focusedElement);\n  },\n  _focus: function ($cell, disableFocus, isInteractiveElement) {\n    var $row = $cell && !$cell.hasClass(ROW_CLASS) ? $cell.closest(\".\".concat(ROW_CLASS)) : $cell;\n\n    if ($row && isNotFocusedRow($row)) {\n      return;\n    }\n\n    var focusedView = this._focusedView;\n    var $focusViewElement = focusedView && focusedView.element();\n    var $focusElement;\n    this._isHiddenFocus = disableFocus;\n\n    if (isGroupRow($row) || this.isRowFocusType()) {\n      $focusElement = $row;\n\n      if (focusedView) {\n        this.setFocusedRowIndex(this._getRowIndex($row));\n      }\n    } else {\n      if (isCellElement($cell)) {\n        $focusElement = $cell;\n\n        this._updateFocusedCellPosition($cell);\n      }\n    }\n\n    if ($focusElement) {\n      if ($focusViewElement) {\n        $focusViewElement.find(\".dx-row[tabindex], .dx-row > td[tabindex]\").not($focusElement).removeClass(CELL_FOCUS_DISABLED_CLASS).removeAttr(\"tabindex\");\n      }\n\n      _events_engine.default.one($focusElement, \"blur\", function (e) {\n        if (e.relatedTarget) {\n          $focusElement.removeClass(CELL_FOCUS_DISABLED_CLASS);\n        }\n      });\n\n      if (!isInteractiveElement) {\n        this._applyTabIndexToElement($focusElement);\n\n        _events_engine.default.trigger($focusElement, \"focus\");\n      }\n\n      if (disableFocus) {\n        $focusElement.addClass(CELL_FOCUS_DISABLED_CLASS);\n      } else {\n        this._editorFactory.focus($focusElement);\n      }\n    }\n  },\n  _updateFocus: function (isRenderView) {\n    var _this6 = this;\n\n    this._updateFocusTimeout = setTimeout(function () {\n      var $cell = _this6._getFocusedCell();\n\n      var isEditing = _this6._editingController.isEditing();\n\n      if ($cell && !(_this6._isMasterDetailCell($cell) && !_this6._isRowEditMode())) {\n        if (_this6._hasSkipRow($cell.parent())) {\n          var direction = _this6._focusedCellPosition && _this6._focusedCellPosition.rowIndex > 0 ? \"upArrow\" : \"downArrow\";\n          $cell = _this6._getNextCell(direction);\n        }\n\n        if (isElementDefined($cell)) {\n          if (isRenderView && !isEditing && _this6._checkCellOverlapped($cell)) {\n            return;\n          }\n\n          if ($cell.is(\"td\") || $cell.hasClass(_this6.addWidgetPrefix(EDIT_FORM_ITEM_CLASS))) {\n            var isCommandCell = $cell.is(COMMAND_CELL_SELECTOR);\n            var $focusedElementInsideCell = $cell.find(\":focus\");\n            var isFocusedElementDefined = isElementDefined($focusedElementInsideCell);\n\n            if ((isRenderView || !isCommandCell) && _this6._editorFactory.focus()) {\n              if (isCommandCell && isFocusedElementDefined) {\n                _uiGrid_core2.default.focusAndSelectElement(_this6, $focusedElementInsideCell);\n\n                return;\n              }\n\n              !isFocusedElementDefined && _this6._focus($cell);\n            } else {\n              if (!isFocusedElementDefined && (_this6._isNeedFocus || _this6._isHiddenFocus)) {\n                _this6._focus($cell, _this6._isHiddenFocus);\n              }\n            }\n\n            if (isEditing) {\n              _this6._focusInteractiveElement.bind(_this6)($cell);\n            }\n          } else {\n            _events_engine.default.trigger($cell, \"focus\");\n          }\n        }\n      }\n    });\n  },\n  _checkCellOverlapped: function ($cell) {\n    var cellOffset = $cell.offset();\n    var hasScrollable = this.component.getScrollable && this.component.getScrollable();\n    var isOverlapped = false;\n\n    if (hasScrollable) {\n      if (cellOffset.left < 0) {\n        isOverlapped = $cell.width() + cellOffset.left <= 0;\n      } else {\n        if (cellOffset.top < 0) {\n          isOverlapped = $cell.height() + cellOffset.top <= 0;\n        }\n      }\n    }\n\n    return isOverlapped;\n  },\n  _getFocusedCell: function () {\n    return (0, _renderer.default)(this._getCell(this._focusedCellPosition));\n  },\n  _updateFocusedCellPositionByTarget: function (target) {\n    var _this$_focusedCellPos;\n\n    var elementType = this._getElementType(target);\n\n    if (\"row\" === elementType && (0, _type.isDefined)(null === (_this$_focusedCellPos = this._focusedCellPosition) || void 0 === _this$_focusedCellPos ? void 0 : _this$_focusedCellPos.columnIndex)) {\n      var $row = (0, _renderer.default)(target);\n      this._focusedView && isGroupRow($row) && this.setFocusedRowIndex(this._getRowIndex($row));\n    } else {\n      this._updateFocusedCellPosition(this._getCellElementFromTarget(target));\n    }\n  },\n  _updateFocusedCellPosition: function ($cell, direction) {\n    var position = this._getCellPosition($cell, direction);\n\n    if (position) {\n      if (!$cell.length || position.rowIndex >= 0 && position.columnIndex >= 0) {\n        this.setFocusedCellPosition(position.rowIndex, position.columnIndex);\n      }\n    }\n\n    return position;\n  },\n  _getFocusedColumnIndexOffset: function (columnIndex) {\n    var offset = 0;\n\n    var column = this._columnsController.getVisibleColumns()[columnIndex];\n\n    if (column && column.fixed) {\n      offset = this._getFixedColumnIndexOffset(column);\n    } else {\n      if (columnIndex >= 0) {\n        offset = this._columnsController.getColumnIndexOffset();\n      }\n    }\n\n    return offset;\n  },\n  _getFixedColumnIndexOffset: function (column) {\n    var offset = isFixedColumnIndexOffsetRequired(this, column) ? this._getVisibleColumnCount() - this._columnsController.getVisibleColumns().length : 0;\n    return offset;\n  },\n  _getCellPosition: function ($cell, direction) {\n    var columnIndex;\n    var $row = isElementDefined($cell) && $cell.closest(\"tr\");\n    var rowsView = this.getView(\"rowsView\");\n\n    if (isElementDefined($row)) {\n      var rowIndex = this._getRowIndex($row);\n\n      columnIndex = rowsView.getCellIndex($cell, rowIndex);\n      columnIndex += this._getFocusedColumnIndexOffset(columnIndex);\n\n      if (direction) {\n        columnIndex = \"previous\" === direction ? columnIndex - 1 : columnIndex + 1;\n        columnIndex = this._applyColumnIndexBoundaries(columnIndex);\n      }\n\n      return {\n        rowIndex: rowIndex,\n        columnIndex: columnIndex\n      };\n    }\n  },\n  _focusCell: function ($cell, isDisabled) {\n    if (this._isCellValid($cell)) {\n      this._focus($cell, isDisabled);\n\n      return true;\n    }\n  },\n  _focusEditFormCell: function ($cell) {\n    if ($cell.hasClass(MASTER_DETAIL_CELL_CLASS)) {\n      this._editorFactory.focus($cell, true);\n    }\n  },\n  _resetFocusedCell: function (preventScroll) {\n    var _this$_focusedView;\n\n    var $cell = this._getFocusedCell();\n\n    isElementDefined($cell) && $cell.removeAttr(\"tabindex\");\n    this._isNeedFocus = false;\n    this._isNeedScroll = false;\n    this._focusedCellPosition = {};\n    clearTimeout(this._updateFocusTimeout);\n    null === (_this$_focusedView = this._focusedView) || void 0 === _this$_focusedView ? void 0 : _this$_focusedView.renderFocusState(preventScroll);\n  },\n  restoreFocusableElement: function (rowIndex, $event) {\n    var that = this;\n    var args;\n    var $rowElement;\n    var isUpArrow = (0, _type.isDefined)(rowIndex);\n    var rowsView = that.getView(\"rowsView\");\n    var $rowsViewElement = rowsView.element();\n    var columnIndex = that._focusedCellPosition.columnIndex;\n\n    var rowIndexOffset = that._dataController.getRowIndexOffset();\n\n    rowIndex = isUpArrow ? rowIndex : rowsView.getTopVisibleItemIndex() + rowIndexOffset;\n\n    if (!isUpArrow) {\n      that._editorFactory.loseFocus();\n\n      that._applyTabIndexToElement($rowsViewElement);\n\n      _events_engine.default.trigger($rowsViewElement, \"focus\");\n    } else {\n      $rowElement = rowsView.getRow(rowIndex - rowIndexOffset);\n      args = that._fireFocusedRowChanging($event, $rowElement);\n\n      if (!args.cancel && args.rowIndexChanged) {\n        rowIndex = args.newRowIndex;\n      }\n    }\n\n    if (!isUpArrow || !args.cancel) {\n      that.setFocusedCellPosition(rowIndex, columnIndex);\n    }\n\n    isUpArrow && that._updateFocus();\n  },\n  _getNewPositionByCode: function (cellPosition, elementType, code) {\n    var columnIndex = cellPosition.columnIndex;\n    var rowIndex = cellPosition.rowIndex;\n    var visibleColumnsCount;\n\n    if (void 0 === cellPosition.rowIndex && \"next\" === code) {\n      return {\n        columnIndex: 0,\n        rowIndex: 0\n      };\n    }\n\n    switch (code) {\n      case \"nextInRow\":\n      case \"next\":\n        visibleColumnsCount = this._getVisibleColumnCount();\n\n        if (columnIndex < visibleColumnsCount - 1 && \"row\" !== elementType && this._hasValidCellAfterPosition({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        })) {\n          columnIndex++;\n        } else {\n          if (!this._isLastRow(rowIndex) && \"next\" === code) {\n            columnIndex = 0;\n            rowIndex++;\n          }\n        }\n\n        break;\n\n      case \"previousInRow\":\n      case \"previous\":\n        if (columnIndex > 0 && \"row\" !== elementType && this._hasValidCellBeforePosition({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        })) {\n          columnIndex--;\n        } else {\n          if (rowIndex > 0 && \"previous\" === code) {\n            rowIndex--;\n            visibleColumnsCount = this._getVisibleColumnCount();\n            columnIndex = visibleColumnsCount - 1;\n          }\n        }\n\n        break;\n\n      case \"upArrow\":\n        rowIndex = rowIndex > 0 ? rowIndex - 1 : rowIndex;\n        break;\n\n      case \"downArrow\":\n        rowIndex = !this._isLastRow(rowIndex) ? rowIndex + 1 : rowIndex;\n    }\n\n    return {\n      columnIndex: columnIndex,\n      rowIndex: rowIndex\n    };\n  },\n  setFocusedCellPosition: function (rowIndex, columnIndex) {\n    this.setFocusedRowIndex(rowIndex);\n    this.setFocusedColumnIndex(columnIndex);\n  },\n  setFocusedRowIndex: function (rowIndex) {\n    if (!this._focusedCellPosition) {\n      this._focusedCellPosition = {};\n    }\n\n    this._focusedCellPosition.rowIndex = rowIndex;\n  },\n  setFocusedColumnIndex: function (columnIndex) {\n    if (!this._focusedCellPosition) {\n      this._focusedCellPosition = {};\n    }\n\n    this._focusedCellPosition.columnIndex = columnIndex;\n  },\n  getRowIndex: function () {\n    return this._focusedCellPosition ? this._focusedCellPosition.rowIndex : -1;\n  },\n  getColumnIndex: function () {\n    return this._focusedCellPosition ? this._focusedCellPosition.columnIndex : -1;\n  },\n  getVisibleRowIndex: function () {\n    var rowIndex = this._focusedCellPosition && this._focusedCellPosition.rowIndex;\n\n    if (!(0, _type.isDefined)(rowIndex)) {\n      return -1;\n    }\n\n    return rowIndex - this._dataController.getRowIndexOffset();\n  },\n  getVisibleColumnIndex: function () {\n    var columnIndex = this._focusedCellPosition && this._focusedCellPosition.columnIndex;\n\n    if (!(0, _type.isDefined)(columnIndex)) {\n      return -1;\n    }\n\n    return columnIndex - this._columnsController.getColumnIndexOffset();\n  },\n  _applyColumnIndexBoundaries: function (columnIndex) {\n    var visibleColumnsCount = this._getVisibleColumnCount();\n\n    if (columnIndex < 0) {\n      columnIndex = 0;\n    } else {\n      if (columnIndex >= visibleColumnsCount) {\n        columnIndex = visibleColumnsCount - 1;\n      }\n    }\n\n    return columnIndex;\n  },\n  _isCellByPositionValid: function (cellPosition) {\n    var $cell = (0, _renderer.default)(this._getCell(cellPosition));\n    return this._isCellValid($cell);\n  },\n  _isLastRow: function (rowIndex) {\n    if (this._isVirtualRowRender()) {\n      return rowIndex >= this._dataController.totalItemsCount() - 1;\n    }\n\n    return rowIndex === this._dataController.items().length - 1;\n  },\n  _isFirstValidCell: function (cellPosition) {\n    var isFirstValidCell = false;\n\n    if (0 === cellPosition.rowIndex && cellPosition.columnIndex >= 0) {\n      isFirstValidCell = isFirstValidCell || !this._hasValidCellBeforePosition(cellPosition);\n    }\n\n    return isFirstValidCell;\n  },\n  _hasValidCellBeforePosition: function (cellPosition) {\n    var columnIndex = cellPosition.columnIndex;\n    var hasValidCells = false;\n\n    while (columnIndex > 0 && !hasValidCells) {\n      var checkingPosition = {\n        columnIndex: --columnIndex,\n        rowIndex: cellPosition.rowIndex\n      };\n      hasValidCells = this._isCellByPositionValid(checkingPosition);\n    }\n\n    return hasValidCells;\n  },\n  _hasValidCellAfterPosition: function (cellPosition) {\n    var columnIndex = cellPosition.columnIndex;\n    var hasValidCells = false;\n\n    var visibleColumnCount = this._getVisibleColumnCount();\n\n    while (columnIndex < visibleColumnCount - 1 && !hasValidCells) {\n      var checkingPosition = {\n        columnIndex: ++columnIndex,\n        rowIndex: cellPosition.rowIndex\n      };\n      hasValidCells = this._isCellByPositionValid(checkingPosition);\n    }\n\n    return hasValidCells;\n  },\n  _isLastValidCell: function (cellPosition) {\n    var nextColumnIndex = cellPosition.columnIndex >= 0 ? cellPosition.columnIndex + 1 : 0;\n    var rowIndex = cellPosition.rowIndex;\n    var checkingPosition = {\n      columnIndex: nextColumnIndex,\n      rowIndex: rowIndex\n    };\n\n    var visibleRows = this._dataController.getVisibleRows();\n\n    var row = visibleRows && visibleRows[rowIndex];\n\n    var isLastRow = this._isLastRow(rowIndex);\n\n    if (!isLastRow) {\n      return false;\n    }\n\n    if (row && \"group\" === row.rowType && cellPosition.columnIndex > 0) {\n      return true;\n    }\n\n    if (cellPosition.columnIndex === this._getVisibleColumnCount() - 1) {\n      return true;\n    }\n\n    if (this._isCellByPositionValid(checkingPosition)) {\n      return false;\n    }\n\n    return this._isLastValidCell(checkingPosition);\n  },\n  _isCellValid: function ($cell, isClick) {\n    if (isElementDefined($cell)) {\n      var rowsView = this.getView(\"rowsView\");\n      var $row = $cell.parent();\n      var columnsController = this._columnsController;\n      var columnIndex = rowsView.getCellIndex($cell) + columnsController.getColumnIndexOffset();\n      var column = columnsController.getVisibleColumns(null, true)[columnIndex];\n\n      var visibleColumnCount = this._getVisibleColumnCount();\n\n      var editingController = this._editingController;\n      var isMasterDetailRow = isDetailRow($row);\n      var isShowWhenGrouped = column && column.showWhenGrouped;\n      var isDataCell = column && !$cell.hasClass(COMMAND_EXPAND_CLASS) && isDataRow($row);\n\n      var isValidGroupSpaceColumn = function () {\n        return !isMasterDetailRow && column && (!(0, _type.isDefined)(column.groupIndex) || isShowWhenGrouped && isDataCell) || parseInt($cell.attr(\"colspan\")) > 1;\n      };\n\n      if (this._isMasterDetailCell($cell)) {\n        return true;\n      }\n\n      if (visibleColumnCount > columnIndex && isValidGroupSpaceColumn()) {\n        var rowItems = this._dataController.items();\n\n        var visibleRowIndex = rowsView.getRowIndex($row);\n        var row = rowItems[visibleRowIndex];\n        var isCellEditing = editingController && this._isCellEditMode() && editingController.isEditing();\n        var isRowEditingInCurrentRow = editingController && editingController.isEditRow(visibleRowIndex);\n        var isEditing = isRowEditingInCurrentRow || isCellEditing;\n\n        if (column.command) {\n          if (this._isLegacyNavigation()) {\n            return !isEditing && \"expand\" === column.command;\n          }\n\n          if (isCellEditing) {\n            return false;\n          }\n\n          if (isRowEditingInCurrentRow) {\n            return \"select\" !== column.command;\n          }\n\n          return !isEditing;\n        }\n\n        if (isCellEditing && row && \"data\" !== row.rowType) {\n          return false;\n        }\n\n        return !isEditing || column.allowEditing || isClick;\n      }\n    }\n  },\n  getFirstValidCellInRow: function ($row, columnIndex) {\n    var that = this;\n    var $cells = $row.find(\"> td\");\n    var $cell;\n    var $result;\n    columnIndex = columnIndex || 0;\n\n    for (var i = columnIndex; i < $cells.length; ++i) {\n      $cell = $cells.eq(i);\n\n      if (that._isCellValid($cell)) {\n        $result = $cell;\n        break;\n      }\n    }\n\n    return $result;\n  },\n  _getNextCell: function (keyCode, elementType, cellPosition) {\n    var focusedCellPosition = cellPosition || this._focusedCellPosition;\n    var isRowFocusType = this.isRowFocusType();\n    var includeCommandCells = isRowFocusType || (0, _array.inArray)(keyCode, [\"next\", \"previous\"]) > -1;\n    var $cell;\n    var $row;\n\n    if (this._focusedView && focusedCellPosition) {\n      var newFocusedCellPosition = this._getNewPositionByCode(focusedCellPosition, elementType, keyCode);\n\n      $cell = (0, _renderer.default)(this._getCell(newFocusedCellPosition));\n      var isLastCellOnDirection = \"previous\" === keyCode ? this._isFirstValidCell(newFocusedCellPosition) : this._isLastValidCell(newFocusedCellPosition);\n\n      if (isElementDefined($cell) && !this._isCellValid($cell) && this._isCellInRow(newFocusedCellPosition, includeCommandCells) && !isLastCellOnDirection) {\n        if (isRowFocusType) {\n          $cell = this.getFirstValidCellInRow($cell.parent(), newFocusedCellPosition.columnIndex);\n        } else {\n          $cell = this._getNextCell(keyCode, \"cell\", newFocusedCellPosition);\n        }\n      }\n\n      $row = isElementDefined($cell) && $cell.parent();\n\n      if (this._hasSkipRow($row)) {\n        var rowIndex = this._getRowIndex($row);\n\n        if (!this._isLastRow(rowIndex)) {\n          $cell = this._getNextCell(keyCode, \"row\", {\n            columnIndex: focusedCellPosition.columnIndex,\n            rowIndex: rowIndex\n          });\n        } else {\n          return null;\n        }\n      }\n\n      return isElementDefined($cell) ? $cell : null;\n    }\n\n    return null;\n  },\n  _startEditing: function (eventArgs, fastEditingKey) {\n    var focusedCellPosition = this._focusedCellPosition;\n    var visibleRowIndex = this.getVisibleRowIndex();\n    var visibleColumnIndex = this.getVisibleColumnIndex();\n\n    var row = this._dataController.items()[visibleRowIndex];\n\n    var column = this._columnsController.getVisibleColumns()[visibleColumnIndex];\n\n    if (this._isAllowEditing(row, column)) {\n      if (this._isRowEditMode()) {\n        this._editingController.editRow(visibleRowIndex);\n      } else {\n        if (focusedCellPosition) {\n          this._startEditCell(eventArgs, fastEditingKey);\n        }\n      }\n    }\n  },\n  _isAllowEditing: function (row, column) {\n    return this._editingController.allowUpdating({\n      row: row\n    }) && column && column.allowEditing;\n  },\n  _editFocusedCell: function () {\n    var rowIndex = this.getVisibleRowIndex();\n    var colIndex = this.getVisibleColumnIndex();\n    return this._editingController.editCell(rowIndex, colIndex);\n  },\n  _startEditCell: function (eventArgs, fastEditingKey) {\n    var _this7 = this;\n\n    this._fastEditingStarted = (0, _type.isDefined)(fastEditingKey);\n\n    var editResult = this._editFocusedCell();\n\n    if (this._isFastEditingStarted()) {\n      if (true === editResult) {\n        this._editingCellHandler(eventArgs, fastEditingKey);\n      } else {\n        if (editResult && editResult.done) {\n          var editorValue = fastEditingKey !== FAST_EDITING_DELETE_KEY ? fastEditingKey : \"\";\n          editResult.done(function () {\n            return _this7._editingCellHandler(eventArgs, editorValue);\n          });\n        }\n      }\n    }\n  },\n  _editingCellHandler: function (eventArgs, editorValue) {\n    var $input = this._getFocusedCell().find(\".dx-texteditor-input\").eq(0);\n\n    var keyDownEvent = (0, _index.createEvent)(eventArgs, {\n      type: \"keydown\",\n      target: $input.get(0)\n    });\n    var keyPressEvent = (0, _index.createEvent)(eventArgs, {\n      type: \"keypress\",\n      target: $input.get(0)\n    });\n    var inputEvent = (0, _index.createEvent)(eventArgs, {\n      type: \"input\",\n      target: $input.get(0)\n    });\n\n    _events_engine.default.trigger($input, keyDownEvent);\n\n    if (!keyDownEvent.isDefaultPrevented()) {\n      _events_engine.default.trigger($input, keyPressEvent);\n\n      if (!keyPressEvent.isDefaultPrevented()) {\n        var timeout = _browser.default.mozilla ? 25 : 0;\n        setTimeout(function () {\n          $input.val(editorValue);\n          var $widgetContainer = $input.closest(\".\".concat(WIDGET_CLASS));\n\n          _events_engine.default.off($widgetContainer, \"focusout\");\n\n          _events_engine.default.one($widgetContainer, \"focusout\", function () {\n            _events_engine.default.trigger($input, \"change\");\n          });\n\n          _events_engine.default.trigger($input, inputEvent);\n        }, timeout);\n      }\n    }\n  },\n  _fireFocusChangingEvents: function ($event, $cell, fireRowEvent, isHighlighted) {\n    var args = {};\n    var cellPosition = this._getCellPosition($cell) || {};\n\n    if (this.isCellFocusType()) {\n      args = this._fireFocusedCellChanging($event, $cell, isHighlighted);\n\n      if (!args.cancel) {\n        cellPosition.columnIndex = args.newColumnIndex;\n        cellPosition.rowIndex = args.newRowIndex;\n        isHighlighted = args.isHighlighted;\n        $cell = (0, _renderer.default)(this._getCell(cellPosition));\n      }\n    }\n\n    if (!args.cancel && fireRowEvent && $cell) {\n      args = this._fireFocusedRowChanging($event, $cell.parent());\n\n      if (!args.cancel) {\n        cellPosition.rowIndex = args.newRowIndex;\n        args.isHighlighted = isHighlighted;\n      }\n    }\n\n    args.$newCellElement = (0, _renderer.default)(this._getCell(cellPosition));\n\n    if (!args.$newCellElement.length) {\n      args.$newCellElement = $cell;\n    }\n\n    return args;\n  },\n  _fireFocusedCellChanging: function ($event, $cellElement, isHighlighted) {\n    var that = this;\n    var prevCellIndex = that.option(\"focusedColumnIndex\");\n    var prevRowIndex = that.option(\"focusedRowIndex\");\n\n    var cellPosition = that._getCellPosition($cellElement);\n\n    var columnIndex = cellPosition ? cellPosition.columnIndex : -1;\n    var rowIndex = cellPosition ? cellPosition.rowIndex : -1;\n    var args = {\n      cellElement: $cellElement,\n      prevColumnIndex: prevCellIndex,\n      prevRowIndex: prevRowIndex,\n      newColumnIndex: columnIndex,\n      newRowIndex: rowIndex,\n      rows: that._dataController.getVisibleRows(),\n      columns: that._columnsController.getVisibleColumns(),\n      event: $event,\n      isHighlighted: isHighlighted || false,\n      cancel: false\n    };\n    this._canceledCellPosition = null;\n    that.executeAction(\"onFocusedCellChanging\", args);\n\n    if (args.newColumnIndex !== columnIndex || args.newRowIndex !== rowIndex) {\n      args.$newCellElement = (0, _renderer.default)(this._getCell({\n        columnIndex: args.newColumnIndex,\n        rowIndex: args.newRowIndex\n      }));\n    }\n\n    if (args.cancel) {\n      this._canceledCellPosition = {\n        rowIndex: rowIndex,\n        columnIndex: columnIndex\n      };\n    }\n\n    return args;\n  },\n  _fireFocusedCellChanged: function ($cellElement, prevCellIndex, prevRowIndex) {\n    var that = this;\n    var dataController = that._dataController;\n    var columnIndex = that.getView(\"rowsView\").getCellIndex($cellElement);\n\n    var rowIndex = this._getRowIndex($cellElement && $cellElement.parent());\n\n    var localRowIndex = Math.min(rowIndex - dataController.getRowIndexOffset(), dataController.items().length - 1);\n\n    var isEditingCell = that._editingController.isEditCell(localRowIndex, columnIndex);\n\n    var row = dataController.items()[localRowIndex];\n\n    if (!isEditingCell && (prevCellIndex !== columnIndex || prevRowIndex !== rowIndex)) {\n      that.executeAction(\"onFocusedCellChanged\", {\n        cellElement: $cellElement,\n        columnIndex: columnIndex,\n        rowIndex: rowIndex,\n        row: row,\n        column: that._columnsController.getVisibleColumns()[columnIndex]\n      });\n    }\n  },\n  _fireFocusedRowChanging: function (eventArgs, $newFocusedRow) {\n    var newRowIndex = this._getRowIndex($newFocusedRow);\n\n    var dataController = this._dataController;\n    var prevFocusedRowIndex = this.option(\"focusedRowIndex\");\n    var loadingOperationTypes = dataController.loadingOperationTypes();\n    var args = {\n      rowElement: $newFocusedRow,\n      prevRowIndex: prevFocusedRowIndex,\n      newRowIndex: newRowIndex,\n      event: eventArgs,\n      rows: dataController.getVisibleRows(),\n      cancel: false\n    };\n\n    if (!dataController || dataController.isLoading() && (loadingOperationTypes.reload || loadingOperationTypes.paging)) {\n      args.cancel = true;\n      return args;\n    }\n\n    if (this.option(\"focusedRowEnabled\")) {\n      this.executeAction(\"onFocusedRowChanging\", args);\n\n      if (!args.cancel && args.newRowIndex !== newRowIndex) {\n        args.resetFocusedRow = args.newRowIndex < 0;\n\n        if (!args.resetFocusedRow) {\n          this.setFocusedRowIndex(args.newRowIndex);\n        }\n\n        args.rowIndexChanged = true;\n      }\n    }\n\n    return args;\n  },\n  _fireFocusedRowChanged: function ($rowElement) {\n    var row;\n    var focusedRowKey = this.option(\"focusedRowKey\");\n    var focusController = this.getController(\"focus\");\n    var focusedRowIndex = null === focusController || void 0 === focusController ? void 0 : focusController.getFocusedRowIndexByKey(focusedRowKey);\n\n    if (this.option(\"focusedRowEnabled\")) {\n      if (focusedRowIndex >= 0) {\n        var dataController = this._dataController;\n        row = focusedRowIndex >= 0 && dataController.getVisibleRows()[focusedRowIndex - dataController.getRowIndexOffset()];\n      }\n\n      this.executeAction(\"onFocusedRowChanged\", {\n        rowElement: $rowElement,\n        rowIndex: focusedRowIndex,\n        row: row\n      });\n    }\n  },\n  _isEventInCurrentGrid: function (event) {\n    return _uiGrid_core2.default.isElementInCurrentGrid(this, (0, _renderer.default)(event.target));\n  },\n  _isRowEditMode: function () {\n    var editMode = this._editingController.getEditMode();\n\n    return editMode === EDIT_MODE_ROW || editMode === EDIT_MODE_FORM;\n  },\n  _isCellEditMode: function () {\n    var editMode = this._editingController.getEditMode();\n\n    return editMode === EDIT_MODE_CELL || editMode === EDIT_MODE_BATCH;\n  },\n  _isFastEditingAllowed: function () {\n    return this._isCellEditMode() && this.option(\"keyboardNavigation.editOnKeyPress\");\n  },\n  _getInteractiveElement: function ($cell, isLast) {\n    var $focusedElement = $cell.find(INTERACTIVE_ELEMENTS_SELECTOR).filter(\":visible\");\n    return isLast ? $focusedElement.last() : $focusedElement.first();\n  },\n  _applyTabIndexToElement: function ($element) {\n    var tabIndex = this.option(\"tabIndex\") || 0;\n    $element.attr(\"tabindex\", (0, _type.isDefined)(tabIndex) ? tabIndex : 0);\n  },\n  _getCell: function (cellPosition) {\n    if (this._focusedView && cellPosition) {\n      var rowIndexOffset = this._dataController.getRowIndexOffset();\n\n      var column = this._columnsController.getVisibleColumns(null, true)[cellPosition.columnIndex];\n\n      var columnIndexOffset = column && column.fixed ? this._getFixedColumnIndexOffset(column) : this._columnsController.getColumnIndexOffset();\n      var rowIndex = cellPosition.rowIndex >= 0 ? cellPosition.rowIndex - rowIndexOffset : -1;\n      var columnIndex = cellPosition.columnIndex >= 0 ? cellPosition.columnIndex - columnIndexOffset : -1;\n      return this._focusedView.getCell({\n        rowIndex: rowIndex,\n        columnIndex: columnIndex\n      });\n    }\n  },\n  _getRowIndex: function ($row) {\n    var rowsView = this.getView(\"rowsView\");\n    var rowIndex = rowsView.getRowIndex($row);\n\n    if (rowIndex >= 0) {\n      rowIndex += this._dataController.getRowIndexOffset();\n    }\n\n    return rowIndex;\n  },\n  _hasSkipRow: function ($row) {\n    var row = $row && $row.get(0);\n    return row && (\"none\" === row.style.display || $row.hasClass(this.addWidgetPrefix(GROUP_FOOTER_CLASS)) || isDetailRow($row) && !$row.hasClass(this.addWidgetPrefix(EDIT_FORM_CLASS)));\n  },\n  _allowEditingOnEnterKey: function () {\n    return \"startEdit\" === this.option(\"keyboardNavigation.enterKeyAction\");\n  },\n  _isLegacyNavigation: function () {\n    return this.option(\"useLegacyKeyboardNavigation\");\n  },\n  _getDirectionCodeByKey: function (key) {\n    var directionCode;\n\n    switch (key) {\n      case \"upArrow\":\n        directionCode = \"prevRow\";\n        break;\n\n      case \"downArrow\":\n        directionCode = \"nextRow\";\n        break;\n\n      case \"leftArrow\":\n        directionCode = this.option(\"rtlEnabled\") ? \"nextInRow\" : \"previousInRow\";\n        break;\n\n      case \"rightArrow\":\n        directionCode = this.option(\"rtlEnabled\") ? \"previousInRow\" : \"nextInRow\";\n    }\n\n    return directionCode;\n  },\n  _isVirtualScrolling: function () {\n    var scrollingMode = this.option(\"scrolling.mode\");\n    return \"virtual\" === scrollingMode || \"infinite\" === scrollingMode;\n  },\n  _isVirtualRowRender: function () {\n    return this._isVirtualScrolling() || \"virtual\" === this.option(\"scrolling.rowRenderingMode\");\n  },\n  _isVirtualColumnRender: function () {\n    return \"virtual\" === this.option(\"scrolling.columnRenderingMode\");\n  },\n  _scrollBy: function (left, top, rowIndex, $event) {\n    var that = this;\n    var scrollable = this.getView(\"rowsView\").getScrollable();\n\n    if (that._focusedCellPosition) {\n      var scrollHandler = function scrollHandler() {\n        scrollable.off(\"scroll\", scrollHandler);\n        setTimeout(that.restoreFocusableElement.bind(that, rowIndex, $event));\n      };\n\n      scrollable.on(\"scroll\", scrollHandler);\n    }\n\n    return scrollable.scrollBy({\n      left: left,\n      top: top\n    });\n  },\n  _isInsideEditForm: function (element) {\n    return (0, _renderer.default)(element).closest(\".\" + this.addWidgetPrefix(EDIT_FORM_CLASS)).length > 0;\n  },\n  _isMasterDetailCell: function (element) {\n    var $masterDetailCell = (0, _renderer.default)(element).closest(\".\" + MASTER_DETAIL_CELL_CLASS);\n    var $masterDetailGrid = $masterDetailCell.closest(\".\" + this.getWidgetContainerClass()).parent();\n    return $masterDetailCell.length && $masterDetailGrid.is(this.component.$element());\n  },\n  _processNextCellInMasterDetail: function ($nextCell) {\n    if (!this._isInsideEditForm($nextCell) && $nextCell) {\n      this._applyTabIndexToElement($nextCell);\n    }\n  },\n  _handleTabKeyOnMasterDetailCell: function (target, direction) {\n    if (this._isMasterDetailCell(target)) {\n      this._updateFocusedCellPosition((0, _renderer.default)(target), direction);\n\n      var $nextCell = this._getNextCell(direction, \"row\");\n\n      this._processNextCellInMasterDetail($nextCell);\n\n      return true;\n    }\n\n    return false;\n  },\n  _getElementType: function (target) {\n    return (0, _renderer.default)(target).is(\"tr\") ? \"row\" : \"cell\";\n  },\n  _isFastEditingStarted: function () {\n    return this._isFastEditingAllowed() && this._fastEditingStarted;\n  },\n  _getVisibleColumnCount: function () {\n    return this._columnsController.getVisibleColumns(null, true).length;\n  },\n  _isCellInRow: function (cellPosition, includeCommandCells) {\n    var columnIndex = cellPosition.columnIndex;\n\n    var visibleColumnsCount = this._getVisibleColumnCount();\n\n    return includeCommandCells ? columnIndex >= 0 && columnIndex <= visibleColumnsCount - 1 : columnIndex > 0 && columnIndex < visibleColumnsCount - 1;\n  },\n  _getCellElementFromTarget: function (target) {\n    var elementType = this._getElementType(target);\n\n    var $targetElement = (0, _renderer.default)(target);\n    var $cell;\n\n    if (\"cell\" === elementType) {\n      $cell = $targetElement.closest(\".\".concat(ROW_CLASS, \" > td\"));\n    } else {\n      $cell = $targetElement.children().not(\".\" + COMMAND_EXPAND_CLASS).first();\n    }\n\n    return $cell;\n  },\n  _getRowsViewElement: function () {\n    var rowsView = this.getView(\"rowsView\");\n    return rowsView && rowsView.element();\n  },\n  isKeyboardEnabled: function () {\n    return this.option(\"keyboardNavigation.enabled\");\n  },\n  _processCanceledEditCellPosition: function (rowIndex, columnIndex) {\n    if (this._canceledCellPosition) {\n      var isCanceled = this._canceledCellPosition.rowIndex === rowIndex && this._canceledCellPosition.columnIndex === columnIndex;\n      this._canceledCellPosition = null;\n      return isCanceled;\n    }\n  }\n});\n\nvar _default = {\n  defaultOptions: function () {\n    return {\n      useLegacyKeyboardNavigation: false,\n      keyboardNavigation: {\n        enabled: true,\n        enterKeyAction: \"startEdit\",\n        enterKeyDirection: \"none\",\n        editOnKeyPress: false\n      }\n    };\n  },\n  controllers: {\n    keyboardNavigation: KeyboardNavigationController\n  },\n  extenders: {\n    views: {\n      rowsView: {\n        _rowClick: function (e) {\n          var editRowIndex = this.getController(\"editing\").getEditRowIndex();\n          var keyboardController = this.getController(\"keyboardNavigation\");\n\n          if (editRowIndex === e.rowIndex) {\n            keyboardController.setCellFocusType();\n          }\n\n          var needTriggerPointerEventHandler = isMobile() && this.option(\"focusedRowEnabled\");\n\n          if (needTriggerPointerEventHandler) {\n            this._triggerPointerDownEventHandler(e);\n          }\n\n          this.callBase.apply(this, arguments);\n        },\n        _triggerPointerDownEventHandler: function (e) {\n          var originalEvent = e.event.originalEvent;\n\n          if (originalEvent) {\n            var keyboardController = this.getController(\"keyboardNavigation\");\n            var $cell = (0, _renderer.default)(originalEvent.target);\n            var columnIndex = this.getCellIndex($cell);\n            var column = this.getController(\"columns\").getVisibleColumns()[columnIndex];\n            var row = this.getController(\"data\").items()[e.rowIndex];\n\n            if (keyboardController._isAllowEditing(row, column)) {\n              var eventArgs = (0, _index.createEvent)(originalEvent, {\n                currentTarget: originalEvent.target\n              });\n\n              keyboardController._pointerEventHandler(eventArgs);\n            }\n          }\n        },\n        renderFocusState: function (preventScroll) {\n          var keyboardController = this.getController(\"keyboardNavigation\");\n          var $rowsViewElement = this.element();\n\n          if ($rowsViewElement && !(0, _selectors.focused)($rowsViewElement)) {\n            $rowsViewElement.attr(\"tabindex\", null);\n          }\n\n          var rowIndex = keyboardController.getVisibleRowIndex();\n\n          if (!(0, _type.isDefined)(rowIndex) || rowIndex < 0) {\n            rowIndex = 0;\n          }\n\n          var cellElements = this.getCellElements(rowIndex);\n\n          if (keyboardController.isKeyboardEnabled() && cellElements.length) {\n            this.updateFocusElementTabIndex(cellElements, preventScroll);\n          }\n        },\n        updateFocusElementTabIndex: function (cellElements) {\n          var keyboardController = this.getController(\"keyboardNavigation\");\n          var $row = cellElements.eq(0).parent();\n\n          if (isGroupRow($row)) {\n            keyboardController._applyTabIndexToElement($row);\n          } else {\n            var columnIndex = keyboardController.getColumnIndex();\n\n            if (!(0, _type.isDefined)(columnIndex) || columnIndex < 0) {\n              columnIndex = 0;\n            }\n\n            this._updateFocusedCellTabIndex(cellElements, columnIndex);\n          }\n        },\n        _updateFocusedCellTabIndex: function (cellElements, columnIndex) {\n          var keyboardController = this.getController(\"keyboardNavigation\");\n          var cellElementsLength = cellElements ? cellElements.length : -1;\n\n          var updateCellTabIndex = function ($cell) {\n            var isMasterDetailCell = keyboardController._isMasterDetailCell($cell);\n\n            var isValidCell = keyboardController._isCellValid($cell);\n\n            if (!isMasterDetailCell && isValidCell && isCellElement($cell)) {\n              keyboardController._applyTabIndexToElement($cell);\n\n              keyboardController.setCellFocusType();\n              return true;\n            }\n          };\n\n          var $cell = cellElements.filter(\"[aria-colindex='\".concat(columnIndex + 1, \"']\"));\n\n          if ($cell.length) {\n            updateCellTabIndex($cell);\n          } else {\n            if (cellElementsLength <= columnIndex) {\n              columnIndex = cellElementsLength - 1;\n            }\n\n            for (var i = columnIndex; i < cellElementsLength; ++i) {\n              if (updateCellTabIndex((0, _renderer.default)(cellElements[i]))) {\n                break;\n              }\n            }\n          }\n        },\n        renderDelayedTemplates: function (change) {\n          this.callBase.apply(this, arguments);\n\n          this._renderFocusByChange(change);\n        },\n        _renderFocusByChange: function (change) {\n          if (!change || !change.repaintChangesOnly) {\n            var preventScroll = shouldPreventScroll(this);\n            this.renderFocusState(preventScroll);\n          }\n        },\n        _renderCore: function (change) {\n          this.callBase.apply(this, arguments);\n\n          this._renderFocusByChange(change);\n        },\n        _editCellPrepared: function ($cell) {\n          var editorInstance = this._getEditorInstance($cell);\n\n          var keyboardController = this.getController(\"keyboardNavigation\");\n\n          var isEditingNavigationMode = keyboardController && keyboardController._isFastEditingStarted();\n\n          if (editorInstance && isEditingNavigationMode) {\n            this._handleEditingNavigationMode(editorInstance);\n          }\n\n          this.callBase.apply(this, arguments);\n        },\n        _handleEditingNavigationMode: function (editorInstance) {\n          [\"downArrow\", \"upArrow\"].forEach(function (keyName) {\n            var originalKeyHandler = editorInstance._supportedKeys()[keyName];\n\n            editorInstance.registerKeyHandler(keyName, function (e) {\n              var isDropDownOpened = \"true\" === editorInstance._input().attr(\"aria-expanded\");\n\n              if (isDropDownOpened) {\n                return originalKeyHandler && originalKeyHandler.call(editorInstance, e);\n              }\n            });\n          });\n          editorInstance.registerKeyHandler(\"leftArrow\", _common.noop);\n          editorInstance.registerKeyHandler(\"rightArrow\", _common.noop);\n          var isDateBoxWithMask = editorInstance.NAME === DATEBOX_WIDGET_NAME && editorInstance.option(\"useMaskBehavior\");\n\n          if (isDateBoxWithMask) {\n            editorInstance.registerKeyHandler(\"enter\", _common.noop);\n          }\n        },\n        _getEditorInstance: function ($cell) {\n          var $editor = $cell.find(\".dx-texteditor\").eq(0);\n          return _uiGrid_core2.default.getWidgetInstance($editor);\n        }\n      }\n    },\n    controllers: {\n      editing: {\n        editCell: function (rowIndex, columnIndex) {\n          var keyboardController = this.getController(\"keyboardNavigation\");\n\n          if (keyboardController._processCanceledEditCellPosition(rowIndex, columnIndex)) {\n            return false;\n          }\n\n          var isCellEditing = this.callBase(rowIndex, columnIndex);\n\n          if (isCellEditing) {\n            keyboardController.setupFocusedView();\n          }\n\n          return isCellEditing;\n        },\n        editRow: function (rowIndex) {\n          var keyboardController = this.getController(\"keyboardNavigation\");\n          var visibleColumnIndex = keyboardController.getVisibleColumnIndex();\n\n          var column = this._columnsController.getVisibleColumns()[visibleColumnIndex];\n\n          if (column && column.type || this.option(\"editing.mode\") === EDIT_MODE_FORM) {\n            keyboardController._resetFocusedCell();\n          }\n\n          this.callBase(rowIndex);\n        },\n        addRow: function (parentKey) {\n          this.getController(\"keyboardNavigation\").setupFocusedView();\n          return this.callBase.apply(this, arguments);\n        },\n        getFocusedCellInRow: function (rowIndex) {\n          var keyboardNavigationController = this.getController(\"keyboardNavigation\");\n          var $cell = this.callBase(rowIndex);\n\n          if (keyboardNavigationController.isKeyboardEnabled() && keyboardNavigationController._focusedCellPosition.rowIndex === rowIndex) {\n            var $focusedCell = keyboardNavigationController._getFocusedCell();\n\n            if (isElementDefined($focusedCell) && !$focusedCell.hasClass(COMMAND_EDIT_CLASS)) {\n              $cell = $focusedCell;\n            }\n          }\n\n          return $cell;\n        },\n        _processCanceledEditingCell: function () {\n          var _this8 = this;\n\n          this.closeEditCell().done(function () {\n            var keyboardNavigation = _this8.getController(\"keyboardNavigation\");\n\n            keyboardNavigation._updateFocus();\n          });\n        },\n        init: function () {\n          this.callBase();\n          this._keyboardNavigationController = this.getController(\"keyboardNavigation\");\n        },\n        closeEditCell: function () {\n          var keyboardNavigation = this.getController(\"keyboardNavigation\");\n          keyboardNavigation._fastEditingStarted = false;\n          var result = this.callBase.apply(this, arguments);\n\n          keyboardNavigation._updateFocus();\n\n          return result;\n        },\n        _delayedInputFocus: function () {\n          this._keyboardNavigationController._isNeedScroll = true;\n          this.callBase.apply(this, arguments);\n        },\n        _isEditingStart: function () {\n          var keyboardNavigation = this.getController(\"keyboardNavigation\");\n          var cancel = this.callBase.apply(this, arguments);\n\n          if (cancel && !keyboardNavigation._isNeedFocus) {\n            var $cell = keyboardNavigation._getFocusedCell();\n\n            keyboardNavigation._focus($cell, true);\n          }\n\n          return cancel;\n        }\n      },\n      data: {\n        _correctRowIndices: function (getRowIndexCorrection) {\n          var that = this;\n          var keyboardNavigationController = that.getController(\"keyboardNavigation\");\n          var editorFactory = that.getController(\"editorFactory\");\n          var focusedCellPosition = keyboardNavigationController._focusedCellPosition;\n          that.callBase.apply(that, arguments);\n\n          if (focusedCellPosition && focusedCellPosition.rowIndex >= 0) {\n            var focusedRowIndexCorrection = getRowIndexCorrection(focusedCellPosition.rowIndex);\n\n            if (focusedRowIndexCorrection) {\n              focusedCellPosition.rowIndex += focusedRowIndexCorrection;\n              editorFactory.refocus();\n            }\n          }\n        }\n      },\n      adaptiveColumns: {\n        _showHiddenCellsInView: function (_ref) {\n          var viewName = _ref.viewName,\n              $cells = _ref.$cells,\n              isCommandColumn = _ref.isCommandColumn;\n          this.callBase.apply(this, arguments);\n          viewName === COLUMN_HEADERS_VIEW && !isCommandColumn && $cells.each(function (_, cellElement) {\n            var $cell = (0, _renderer.default)(cellElement);\n            isCellInHeaderRow($cell) && $cell.attr(\"tabindex\", 0);\n          });\n        },\n        _hideVisibleCellInView: function (_ref2) {\n          var viewName = _ref2.viewName,\n              $cell = _ref2.$cell,\n              isCommandColumn = _ref2.isCommandColumn;\n          this.callBase.apply(this, arguments);\n\n          if (viewName === COLUMN_HEADERS_VIEW && !isCommandColumn && isCellInHeaderRow($cell)) {\n            $cell.removeAttr(\"tabindex\");\n          }\n        }\n      }\n    }\n  }\n};\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/node_modules/devextreme/ui/grid_core/ui.grid_core.keyboard_navigation.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","exports","default","_renderer","_interopRequireDefault","require","_dom_adapter","_events_engine","_uiGrid_core","_uiGrid_core2","_type","_array","_selectors","_index","_pointer","_click","_common","accessibility","_interopRequireWildcard","_browser","_short","_devices","_getRequireWildcardCache","WeakMap","cache","__esModule","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","ROWS_VIEW_CLASS","EDIT_FORM_CLASS","GROUP_FOOTER_CLASS","ROW_CLASS","DATA_ROW_CLASS","GROUP_ROW_CLASS","HEADER_ROW_CLASS","EDIT_FORM_ITEM_CLASS","MASTER_DETAIL_ROW_CLASS","FREESPACE_ROW_CLASS","VIRTUAL_ROW_CLASS","MASTER_DETAIL_CELL_CLASS","EDITOR_CELL_CLASS","DROPDOWN_EDITOR_OVERLAY_CLASS","COMMAND_EXPAND_CLASS","COMMAND_SELECT_CLASS","COMMAND_EDIT_CLASS","COMMAND_CELL_SELECTOR","CELL_FOCUS_DISABLED_CLASS","DATEBOX_WIDGET_NAME","FOCUS_STATE_CLASS","WIDGET_CLASS","REVERT_BUTTON_CLASS","FAST_EDITING_DELETE_KEY","INTERACTIVE_ELEMENTS_SELECTOR","EDIT_MODE_ROW","EDIT_MODE_FORM","EDIT_MODE_BATCH","EDIT_MODE_CELL","FOCUS_TYPE_ROW","FOCUS_TYPE_CELL","COLUMN_HEADERS_VIEW","isGroupRow","$row","hasClass","isDetailRow","isDataRow","isNotFocusedRow","isCellElement","$element","length","tagName","isEditorCell","that","$cell","_isRowEditMode","isElementDefined","isDefined","isMobile","current","deviceType","isCellInHeaderRow","parent","concat","isFixedColumnIndexOffsetRequired","column","rtlEnabled","option","result","fixedPosition","command","shouldPreventScroll","keyboardController","getController","_isVirtualScrolling","getRowIndex","KeyboardNavigationController","ViewController","inherit","init","_this","_dataController","_selectionController","_editingController","_headerPanel","getView","_columnsController","_editorFactory","isKeyboardEnabled","subscribeVisibilityChange","_updateFocusTimeout","_fastEditingStarted","_focusedCellPosition","_canceledCellPosition","elementFocused","setupFocusedView","_isNeedScroll","is","_focusedView","getScrollable","_scrollToElement","focused","add","_initViewHandlers","_initDocumentHandlers","createAction","_this2","rowsView","rowsViewFocusHandler","event","target","isRelatedTargetInRowsView","relatedTarget","closest","element","isCommandButton","_isEventInCurrentGrid","$focusedCell","_getFocusedCell","getCellElements","filter","eq","preventDefault","trigger","renderCompleted","e","$rowsView","isFullUpdate","changeType","isFocusedViewCorrect","name","needUpdateFocus","isAppend","$focusedElement","isFocusedElementCorrect","msie","off","on","_initPointerEventHandler","_initKeyDownHandler","_setRowsViewAttributes","_isNeedFocus","_isHiddenFocus","_updateFocus","_this3","document","getDocument","_documentClickHandler","$target","isCurrentRowsViewClick","addWidgetPrefix","isEditorOverlay","columnsResizerController","isColumnResizing","isResizing","targetInsideFocusedView","parents","_resetFocusedCell","_resetFocusedView","addNamespace","down","_getRowsViewElement","isGridEmpty","getVisibleRows","_applyTabIndexToElement","pointerEventName","clickSelector","_pointerEventAction","_pointerEventHandler","_this4","keyboard","_keyDownListener","_keyDownHandler","dispose","callBase","clearTimeout","unsubscribeVisibilityChange","optionChanged","args","handled","isRowFocusType","focusType","isCellFocusType","setRowFocusType","setCellFocusType","isEditing","needStopPropagation","originalEvent","isHandled","_processOnKeyDown","isDefaultPrevented","_updateFocusedCellPositionByTarget","keyName","_leftRightKeysHandler","ctrl","selectView","_upDownKeysHandler","_pageUpDownKeyHandler","_spaceKeyHandler","_ctrlAKeyHandler","_beginFastEditing","_tabKeyHandler","_enterKeyHandler","_escapeKeyHandler","_ctrlFKeyHandler","_f2KeyHandler","_isFastEditingAllowed","_isFastEditingStarted","stopPropagation","eventArgs","executeAction","ctrlKey","alt","altKey","shift","shiftKey","_closeEditCell","_this5","setTimeout","closeEditCell","rowIndex","getVisibleRowIndex","$event","getRow","directionCode","_getDirectionCodeByKey","isEditingNavigationMode","allowNavigate","_isVirtualColumnRender","_processVirtualHorizontalPosition","_getNextCell","_arrowKeysHandlerFocusCell","visibleRowIndex","isUpArrow","dataSource","_navigateNextCell","_isVirtualRowRender","isLoading","rowHeight","outerHeight","_scrollBy","pageIndex","pageCount","pagingEnabled","isPageUp","pageStep","scrollable","_container","height","$content","mode","isFocusedRowElement","_getElementType","isFocusedSelectionCell","startSelectionWithCheckboxes","changeItemSelection","control","selectAll","editingOptions","direction","isCellPositionDefined","isEmptyObject","isOriginalHandlerRequired","_isLastValidCell","_isFirstValidCell","eventTarget","focusedViewElement","_handleTabKeyOnMasterDetailCell","addClass","_editingCellTabHandler","_targetCellTabHandler","loseFocus","_getMaxHorizontalOffset","component","offset","scrollWidth","width","_isColumnRendered","columnIndex","allVisibleColumns","getVisibleColumns","renderedVisibleColumns","indexOf","_isFixedColumn","fixed","_isColumnVirtual","localColumnIndex","getColumnIndexOffset","visibleColumns","getColumnIndex","nextColumnIndex","horizontalScrollPosition","needToScroll","columnsCount","_getVisibleColumnCount","columnIndexOffset","leftEdgePosition","scrollTo","left","_getHorizontalScrollPositionOffset","scrollBy","top","positionOffset","$currentCell","_getCell","currentCellWidth","outerWidth","rtlMultiplier","_getCellElementFromTarget","isEditingAllowed","elementType","_updateFocusedCellPosition","nextCellInfo","_getNextCellByTabKey","columnsController","cellIndex","getCellIndex","_getRowIndex","row","items","editingController","allowEditing","_isDataRow","rowType","allowUpdating","isNewRow","_focusCell","isHighlighted","_editFocusedCell","_focusInteractiveElement","$lastInteractiveElement","_getInteractiveElement","getFirstValidCellInRow","_checkNewLineTransition","_fireFocusedCellChanging","cancel","$newCellElement","cellPosition","_getCellPosition","_fireFocusedRowChanging","rowIndexChanged","setFocusedColumnIndex","getKeyByRowIndex","item","data","isContinuation","changeRowExpand","_processEnterKeyForDataCell","_getEnterKeyDirection","allowEditingOnEnterKey","_allowEditingOnEnterKey","_handleEnterKeyEditingCell","_startEditing","enterKeyDirection","isShift","isRowEditMode","_focusEditFormCell","saveEditData","bind","getEditMode","cancelEditData","searchTextEditor","getSearchTextEditor","focus","keyCode","isCellValid","_isCellValid","$nextCell","isVerticalDirection","_fireFocusChangingEvents","_focus","isDeleting","which","fastEditingKey","String","fromCharCode","currentTarget","$parent","isInteractiveElement","isRevertButton","isExpandCommandCell","_isInsideEditForm","_focusView","removeClass","_isMasterDetailCell","_clickTargetCellHandler","isCellEditMode","_isCellEditMode","resetFocusedRow","_resetFocusedRow","_allowRowUpdating","isInteractiveTarget","not","isEditor","isDisabled","setFocusedRowIndex","prevRowIndex","activeElementSelector","focusedRowEnabled","find","first","_focusElement","getFocusedView","rowsViewElement","$focusedView","_getFocusedViewByElement","view","$view","isLast","focusAndSelectElement","disableFocus","focusedView","$focusViewElement","$focusElement","removeAttr","one","isRenderView","_this6","_hasSkipRow","_checkCellOverlapped","isCommandCell","$focusedElementInsideCell","isFocusedElementDefined","cellOffset","hasScrollable","isOverlapped","_this$_focusedCellPos","position","setFocusedCellPosition","_getFocusedColumnIndexOffset","_getFixedColumnIndexOffset","_applyColumnIndexBoundaries","preventScroll","_this$_focusedView","renderFocusState","restoreFocusableElement","$rowElement","$rowsViewElement","rowIndexOffset","getRowIndexOffset","getTopVisibleItemIndex","newRowIndex","_getNewPositionByCode","code","visibleColumnsCount","_hasValidCellAfterPosition","_isLastRow","_hasValidCellBeforePosition","getVisibleColumnIndex","_isCellByPositionValid","totalItemsCount","isFirstValidCell","hasValidCells","checkingPosition","visibleColumnCount","visibleRows","isLastRow","isClick","isMasterDetailRow","isShowWhenGrouped","showWhenGrouped","isDataCell","isValidGroupSpaceColumn","groupIndex","parseInt","attr","rowItems","isCellEditing","isRowEditingInCurrentRow","isEditRow","_isLegacyNavigation","$cells","$result","i","focusedCellPosition","includeCommandCells","inArray","newFocusedCellPosition","isLastCellOnDirection","_isCellInRow","visibleColumnIndex","_isAllowEditing","editRow","_startEditCell","colIndex","editCell","_this7","editResult","_editingCellHandler","done","editorValue","$input","keyDownEvent","createEvent","type","keyPressEvent","inputEvent","timeout","mozilla","val","$widgetContainer","fireRowEvent","newColumnIndex","$cellElement","prevCellIndex","cellElement","prevColumnIndex","rows","columns","_fireFocusedCellChanged","dataController","localRowIndex","Math","min","isEditingCell","isEditCell","$newFocusedRow","prevFocusedRowIndex","loadingOperationTypes","rowElement","reload","paging","_fireFocusedRowChanged","focusedRowKey","focusController","focusedRowIndex","getFocusedRowIndexByKey","isElementInCurrentGrid","editMode","last","tabIndex","getCell","style","display","scrollingMode","scrollHandler","$masterDetailCell","$masterDetailGrid","getWidgetContainerClass","_processNextCellInMasterDetail","$targetElement","children","_processCanceledEditCellPosition","isCanceled","_default","defaultOptions","useLegacyKeyboardNavigation","keyboardNavigation","enabled","enterKeyAction","editOnKeyPress","controllers","extenders","views","_rowClick","editRowIndex","getEditRowIndex","needTriggerPointerEventHandler","_triggerPointerDownEventHandler","apply","arguments","cellElements","updateFocusElementTabIndex","_updateFocusedCellTabIndex","cellElementsLength","updateCellTabIndex","isMasterDetailCell","isValidCell","renderDelayedTemplates","change","_renderFocusByChange","repaintChangesOnly","_renderCore","_editCellPrepared","editorInstance","_getEditorInstance","_handleEditingNavigationMode","forEach","originalKeyHandler","_supportedKeys","registerKeyHandler","isDropDownOpened","_input","noop","isDateBoxWithMask","NAME","$editor","getWidgetInstance","editing","addRow","parentKey","getFocusedCellInRow","keyboardNavigationController","_processCanceledEditingCell","_this8","_keyboardNavigationController","_delayedInputFocus","_isEditingStart","_correctRowIndices","getRowIndexCorrection","editorFactory","focusedRowIndexCorrection","refocus","adaptiveColumns","_showHiddenCellsInView","_ref","viewName","isCommandColumn","each","_","_hideVisibleCellInView","_ref2","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.keyboard_navigation.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\n\r\nfunction _typeof(obj) {\r\n    \"@babel/helpers - typeof\";\r\n    if (\"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator) {\r\n        _typeof = function(obj) {\r\n            return typeof obj\r\n        }\r\n    } else {\r\n        _typeof = function(obj) {\r\n            return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n        }\r\n    }\r\n    return _typeof(obj)\r\n}\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _dom_adapter = _interopRequireDefault(require(\"../../core/dom_adapter\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _uiGrid_core = _interopRequireDefault(require(\"./ui.grid_core.modules\"));\r\nvar _uiGrid_core2 = _interopRequireDefault(require(\"./ui.grid_core.utils\"));\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _array = require(\"../../core/utils/array\");\r\nvar _selectors = require(\"../widget/selectors\");\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _pointer = _interopRequireDefault(require(\"../../events/pointer\"));\r\nvar _click = require(\"../../events/click\");\r\nvar _common = require(\"../../core/utils/common\");\r\nvar accessibility = _interopRequireWildcard(require(\"../shared/accessibility\"));\r\nvar _browser = _interopRequireDefault(require(\"../../core/utils/browser\"));\r\nvar _short = require(\"../../events/short\");\r\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\r\n\r\nfunction _getRequireWildcardCache() {\r\n    if (\"function\" !== typeof WeakMap) {\r\n        return null\r\n    }\r\n    var cache = new WeakMap;\r\n    _getRequireWildcardCache = function() {\r\n        return cache\r\n    };\r\n    return cache\r\n}\r\n\r\nfunction _interopRequireWildcard(obj) {\r\n    if (obj && obj.__esModule) {\r\n        return obj\r\n    }\r\n    if (null === obj || \"object\" !== _typeof(obj) && \"function\" !== typeof obj) {\r\n        return {\r\n            \"default\": obj\r\n        }\r\n    }\r\n    var cache = _getRequireWildcardCache();\r\n    if (cache && cache.has(obj)) {\r\n        return cache.get(obj)\r\n    }\r\n    var newObj = {};\r\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\r\n    for (var key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\r\n            if (desc && (desc.get || desc.set)) {\r\n                Object.defineProperty(newObj, key, desc)\r\n            } else {\r\n                newObj[key] = obj[key]\r\n            }\r\n        }\r\n    }\r\n    newObj.default = obj;\r\n    if (cache) {\r\n        cache.set(obj, newObj)\r\n    }\r\n    return newObj\r\n}\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar ROWS_VIEW_CLASS = \"rowsview\";\r\nvar EDIT_FORM_CLASS = \"edit-form\";\r\nvar GROUP_FOOTER_CLASS = \"group-footer\";\r\nvar ROW_CLASS = \"dx-row\";\r\nvar DATA_ROW_CLASS = \"dx-data-row\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar HEADER_ROW_CLASS = \"dx-header-row\";\r\nvar EDIT_FORM_ITEM_CLASS = \"edit-form-item\";\r\nvar MASTER_DETAIL_ROW_CLASS = \"dx-master-detail-row\";\r\nvar FREESPACE_ROW_CLASS = \"dx-freespace-row\";\r\nvar VIRTUAL_ROW_CLASS = \"dx-virtual-row\";\r\nvar MASTER_DETAIL_CELL_CLASS = \"dx-master-detail-cell\";\r\nvar EDITOR_CELL_CLASS = \"dx-editor-cell\";\r\nvar DROPDOWN_EDITOR_OVERLAY_CLASS = \"dx-dropdowneditor-overlay\";\r\nvar COMMAND_EXPAND_CLASS = \"dx-command-expand\";\r\nvar COMMAND_SELECT_CLASS = \"dx-command-select\";\r\nvar COMMAND_EDIT_CLASS = \"dx-command-edit\";\r\nvar COMMAND_CELL_SELECTOR = \"[class^=dx-command]\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar DATEBOX_WIDGET_NAME = \"dxDateBox\";\r\nvar FOCUS_STATE_CLASS = \"dx-state-focused\";\r\nvar WIDGET_CLASS = \"dx-widget\";\r\nvar REVERT_BUTTON_CLASS = \"dx-revert-button\";\r\nvar FAST_EDITING_DELETE_KEY = \"delete\";\r\nvar INTERACTIVE_ELEMENTS_SELECTOR = \"input:not([type='hidden']), textarea, a, select, button, [tabindex]\";\r\nvar EDIT_MODE_ROW = \"row\";\r\nvar EDIT_MODE_FORM = \"form\";\r\nvar EDIT_MODE_BATCH = \"batch\";\r\nvar EDIT_MODE_CELL = \"cell\";\r\nvar FOCUS_TYPE_ROW = \"row\";\r\nvar FOCUS_TYPE_CELL = \"cell\";\r\nvar COLUMN_HEADERS_VIEW = \"columnHeadersView\";\r\n\r\nfunction isGroupRow($row) {\r\n    return $row && $row.hasClass(GROUP_ROW_CLASS)\r\n}\r\n\r\nfunction isDetailRow($row) {\r\n    return $row && $row.hasClass(MASTER_DETAIL_ROW_CLASS)\r\n}\r\n\r\nfunction isDataRow($row) {\r\n    return $row && !isGroupRow($row) && !isDetailRow($row)\r\n}\r\n\r\nfunction isNotFocusedRow($row) {\r\n    return !$row || $row.hasClass(FREESPACE_ROW_CLASS) || $row.hasClass(VIRTUAL_ROW_CLASS)\r\n}\r\n\r\nfunction isCellElement($element) {\r\n    return $element.length && \"TD\" === $element[0].tagName\r\n}\r\n\r\nfunction isEditorCell(that, $cell) {\r\n    return !that._isRowEditMode() && $cell && !$cell.hasClass(COMMAND_SELECT_CLASS) && $cell.hasClass(EDITOR_CELL_CLASS)\r\n}\r\n\r\nfunction isElementDefined($element) {\r\n    return (0, _type.isDefined)($element) && $element.length > 0\r\n}\r\n\r\nfunction isMobile() {\r\n    return \"desktop\" !== _devices.default.current().deviceType\r\n}\r\n\r\nfunction isCellInHeaderRow($cell) {\r\n    return !!$cell.parent(\".\".concat(HEADER_ROW_CLASS)).length\r\n}\r\n\r\nfunction isFixedColumnIndexOffsetRequired(that, column) {\r\n    var rtlEnabled = that.option(\"rtlEnabled\");\r\n    var result = false;\r\n    if (rtlEnabled) {\r\n        result = !(\"right\" === column.fixedPosition || (0, _type.isDefined)(column.command) && !(0, _type.isDefined)(column.fixedPosition))\r\n    } else {\r\n        result = !(!(0, _type.isDefined)(column.fixedPosition) || \"left\" === column.fixedPosition)\r\n    }\r\n    return result\r\n}\r\n\r\nfunction shouldPreventScroll(that) {\r\n    var keyboardController = that.getController(\"keyboardNavigation\");\r\n    return keyboardController._isVirtualScrolling() ? that.option(\"focusedRowIndex\") === keyboardController.getRowIndex() : false\r\n}\r\nvar KeyboardNavigationController = _uiGrid_core.default.ViewController.inherit({\r\n    init: function() {\r\n        var _this = this;\r\n        this._dataController = this.getController(\"data\");\r\n        this._selectionController = this.getController(\"selection\");\r\n        this._editingController = this.getController(\"editing\");\r\n        this._headerPanel = this.getView(\"headerPanel\");\r\n        this._columnsController = this.getController(\"columns\");\r\n        this._editorFactory = this.getController(\"editorFactory\");\r\n        if (this.isKeyboardEnabled()) {\r\n            accessibility.subscribeVisibilityChange();\r\n            this._updateFocusTimeout = null;\r\n            this._fastEditingStarted = false;\r\n            this._focusedCellPosition = {};\r\n            this._canceledCellPosition = null;\r\n            var elementFocused = function($element) {\r\n                _this.setupFocusedView();\r\n                if (_this._isNeedScroll) {\r\n                    if ($element.is(\":visible\") && _this._focusedView && _this._focusedView.getScrollable) {\r\n                        _this._focusedView._scrollToElement($element);\r\n                        _this._isNeedScroll = false\r\n                    }\r\n                }\r\n            };\r\n            this._editorFactory.focused.add(elementFocused);\r\n            this._initViewHandlers();\r\n            this._initDocumentHandlers();\r\n            this.createAction(\"onKeyDown\")\r\n        }\r\n    },\r\n    _initViewHandlers: function() {\r\n        var _this2 = this;\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var rowsViewFocusHandler = function(event) {\r\n            var $element = (0, _renderer.default)(event.target);\r\n            var isRelatedTargetInRowsView = (0, _renderer.default)(event.relatedTarget).closest(rowsView.element()).length;\r\n            var isCommandButton = $element.hasClass(\"dx-link\");\r\n            if (isCommandButton && !isRelatedTargetInRowsView && _this2._isEventInCurrentGrid(event)) {\r\n                var $focusedCell = _this2._getFocusedCell();\r\n                $focusedCell = !isElementDefined($focusedCell) ? rowsView.getCellElements(0).filter(\"[tabindex]\").eq(0) : $focusedCell;\r\n                if (!$element.closest($focusedCell).length) {\r\n                    event.preventDefault();\r\n                    _events_engine.default.trigger($focusedCell, \"focus\")\r\n                }\r\n            }\r\n        };\r\n        rowsView.renderCompleted.add(function(e) {\r\n            var $rowsView = rowsView.element();\r\n            var isFullUpdate = !e || \"refresh\" === e.changeType;\r\n            var isFocusedViewCorrect = _this2._focusedView && _this2._focusedView.name === rowsView.name;\r\n            var needUpdateFocus = false;\r\n            var isAppend = e && (\"append\" === e.changeType || \"prepend\" === e.changeType);\r\n            var $focusedElement = (0, _renderer.default)(\":focus\");\r\n            var isFocusedElementCorrect = !$focusedElement.length || $focusedElement.closest($rowsView).length || _browser.default.msie && $focusedElement.is(\"body\");\r\n            _events_engine.default.off($rowsView, \"focusin\", rowsViewFocusHandler);\r\n            _events_engine.default.on($rowsView, \"focusin\", rowsViewFocusHandler);\r\n            _this2._initPointerEventHandler();\r\n            _this2._initKeyDownHandler();\r\n            _this2._setRowsViewAttributes();\r\n            if (isFocusedViewCorrect && isFocusedElementCorrect) {\r\n                needUpdateFocus = _this2._isNeedFocus ? !isAppend : _this2._isHiddenFocus && isFullUpdate;\r\n                needUpdateFocus && _this2._updateFocus(true)\r\n            }\r\n        })\r\n    },\r\n    _initDocumentHandlers: function() {\r\n        var _this3 = this;\r\n        var document = _dom_adapter.default.getDocument();\r\n        this._documentClickHandler = this.createAction(function(e) {\r\n            var $target = (0, _renderer.default)(e.event.target);\r\n            var isCurrentRowsViewClick = _this3._isEventInCurrentGrid(e.event) && $target.closest(\".\".concat(_this3.addWidgetPrefix(ROWS_VIEW_CLASS))).length;\r\n            var isEditorOverlay = $target.closest(\".\".concat(DROPDOWN_EDITOR_OVERLAY_CLASS)).length;\r\n            var columnsResizerController = _this3.getController(\"columnsResizer\");\r\n            var isColumnResizing = !!columnsResizerController && columnsResizerController.isResizing();\r\n            if (!isCurrentRowsViewClick && !isEditorOverlay && !isColumnResizing) {\r\n                var targetInsideFocusedView = _this3._focusedView ? $target.parents().filter(_this3._focusedView.element()).length > 0 : false;\r\n                !targetInsideFocusedView && _this3._resetFocusedCell(true);\r\n                _this3._resetFocusedView()\r\n            }\r\n        });\r\n        _events_engine.default.on(document, (0, _index.addNamespace)(_pointer.default.down, \"dxDataGridKeyboardNavigation\"), this._documentClickHandler)\r\n    },\r\n    _setRowsViewAttributes: function() {\r\n        var $rowsView = this._getRowsViewElement();\r\n        var isGridEmpty = !this._dataController.getVisibleRows().length;\r\n        if (isGridEmpty) {\r\n            this._applyTabIndexToElement($rowsView)\r\n        }\r\n    },\r\n    _initPointerEventHandler: function() {\r\n        var pointerEventName = !isMobile() ? _pointer.default.down : _click.name;\r\n        var clickSelector = \".\".concat(ROW_CLASS, \" > td, .\").concat(ROW_CLASS);\r\n        var $rowsView = this._getRowsViewElement();\r\n        if (!(0, _type.isDefined)(this._pointerEventAction)) {\r\n            this._pointerEventAction = this.createAction(this._pointerEventHandler)\r\n        }\r\n        _events_engine.default.off($rowsView, (0, _index.addNamespace)(pointerEventName, \"dxDataGridKeyboardNavigation\"), this._pointerEventAction);\r\n        _events_engine.default.on($rowsView, (0, _index.addNamespace)(pointerEventName, \"dxDataGridKeyboardNavigation\"), clickSelector, this._pointerEventAction)\r\n    },\r\n    _initKeyDownHandler: function() {\r\n        var _this4 = this;\r\n        var $rowsView = this._getRowsViewElement();\r\n        _short.keyboard.off(this._keyDownListener);\r\n        this._keyDownListener = _short.keyboard.on($rowsView, null, function(e) {\r\n            return _this4._keyDownHandler(e)\r\n        })\r\n    },\r\n    dispose: function() {\r\n        this.callBase();\r\n        this._resetFocusedView();\r\n        _short.keyboard.off(this._keyDownListener);\r\n        _events_engine.default.off(_dom_adapter.default.getDocument(), (0, _index.addNamespace)(_pointer.default.down, \"dxDataGridKeyboardNavigation\"), this._documentClickHandler);\r\n        clearTimeout(this._updateFocusTimeout);\r\n        accessibility.unsubscribeVisibilityChange()\r\n    },\r\n    optionChanged: function(args) {\r\n        var that = this;\r\n        switch (args.name) {\r\n            case \"keyboardNavigation\":\r\n            case \"useLegacyKeyboardNavigation\":\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                that.callBase(args)\r\n        }\r\n    },\r\n    isRowFocusType: function() {\r\n        return this.focusType === FOCUS_TYPE_ROW\r\n    },\r\n    isCellFocusType: function() {\r\n        return this.focusType === FOCUS_TYPE_CELL\r\n    },\r\n    setRowFocusType: function() {\r\n        if (this.option(\"focusedRowEnabled\")) {\r\n            this.focusType = FOCUS_TYPE_ROW\r\n        }\r\n    },\r\n    setCellFocusType: function() {\r\n        this.focusType = FOCUS_TYPE_CELL\r\n    },\r\n    _keyDownHandler: function(e) {\r\n        var isEditing = this._editingController.isEditing();\r\n        var needStopPropagation = true;\r\n        var originalEvent = e.originalEvent;\r\n        var isHandled = this._processOnKeyDown(e);\r\n        if (originalEvent.isDefaultPrevented()) {\r\n            return\r\n        }\r\n        this._isNeedFocus = true;\r\n        this._isNeedScroll = true;\r\n        this._updateFocusedCellPositionByTarget(originalEvent.target);\r\n        if (!isHandled) {\r\n            switch (e.keyName) {\r\n                case \"leftArrow\":\r\n                case \"rightArrow\":\r\n                    this._leftRightKeysHandler(e, isEditing);\r\n                    break;\r\n                case \"upArrow\":\r\n                case \"downArrow\":\r\n                    if (e.ctrl) {\r\n                        accessibility.selectView(\"rowsView\", this, originalEvent)\r\n                    } else {\r\n                        this._upDownKeysHandler(e, isEditing)\r\n                    }\r\n                    break;\r\n                case \"pageUp\":\r\n                case \"pageDown\":\r\n                    this._pageUpDownKeyHandler(e);\r\n                    break;\r\n                case \"space\":\r\n                    this._spaceKeyHandler(e, isEditing);\r\n                    break;\r\n                case \"A\":\r\n                    if (e.ctrl) {\r\n                        this._ctrlAKeyHandler(e, isEditing)\r\n                    } else {\r\n                        this._beginFastEditing(e.originalEvent)\r\n                    }\r\n                    break;\r\n                case \"tab\":\r\n                    this._tabKeyHandler(e, isEditing);\r\n                    break;\r\n                case \"enter\":\r\n                    this._enterKeyHandler(e, isEditing);\r\n                    break;\r\n                case \"escape\":\r\n                    this._escapeKeyHandler(e, isEditing);\r\n                    break;\r\n                case \"F\":\r\n                    if (e.ctrl) {\r\n                        this._ctrlFKeyHandler(e)\r\n                    } else {\r\n                        this._beginFastEditing(e.originalEvent)\r\n                    }\r\n                    break;\r\n                case \"F2\":\r\n                    this._f2KeyHandler();\r\n                    break;\r\n                case \"del\":\r\n                case \"backspace\":\r\n                    if (this._isFastEditingAllowed() && !this._isFastEditingStarted()) {\r\n                        this._beginFastEditing(originalEvent, true)\r\n                    }\r\n                    break;\r\n                default:\r\n                    if (!this._beginFastEditing(originalEvent)) {\r\n                        this._isNeedFocus = false;\r\n                        this._isNeedScroll = false;\r\n                        needStopPropagation = false\r\n                    }\r\n            }\r\n            if (needStopPropagation) {\r\n                originalEvent.stopPropagation()\r\n            }\r\n        }\r\n    },\r\n    _processOnKeyDown: function(eventArgs) {\r\n        var originalEvent = eventArgs.originalEvent;\r\n        var args = {\r\n            handled: false,\r\n            event: originalEvent\r\n        };\r\n        this.executeAction(\"onKeyDown\", args);\r\n        eventArgs.ctrl = originalEvent.ctrlKey;\r\n        eventArgs.alt = originalEvent.altKey;\r\n        eventArgs.shift = originalEvent.shiftKey;\r\n        return !!args.handled\r\n    },\r\n    _closeEditCell: function() {\r\n        var _this5 = this;\r\n        setTimeout(function() {\r\n            _this5._editingController.closeEditCell()\r\n        })\r\n    },\r\n    _leftRightKeysHandler: function(eventArgs, isEditing) {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $event = eventArgs.originalEvent;\r\n        var $row = this._focusedView && this._focusedView.getRow(rowIndex);\r\n        var directionCode = this._getDirectionCodeByKey(eventArgs.keyName);\r\n        var isEditingNavigationMode = this._isFastEditingStarted();\r\n        var allowNavigate = (!isEditing || isEditingNavigationMode) && isDataRow($row);\r\n        if (allowNavigate) {\r\n            this.setCellFocusType();\r\n            isEditingNavigationMode && this._closeEditCell();\r\n            if (this._isVirtualColumnRender()) {\r\n                this._processVirtualHorizontalPosition(directionCode)\r\n            }\r\n            var $cell = this._getNextCell(directionCode);\r\n            if (isElementDefined($cell)) {\r\n                this._arrowKeysHandlerFocusCell($event, $cell, directionCode)\r\n            }\r\n            $event && $event.preventDefault()\r\n        }\r\n    },\r\n    _upDownKeysHandler: function(eventArgs, isEditing) {\r\n        var rowIndex = this._focusedCellPosition.rowIndex;\r\n        var visibleRowIndex = this.getVisibleRowIndex();\r\n        var $row = this._focusedView && this._focusedView.getRow(visibleRowIndex);\r\n        var $event = eventArgs.originalEvent;\r\n        var isUpArrow = \"upArrow\" === eventArgs.keyName;\r\n        var dataSource = this._dataController.dataSource();\r\n        var isEditingNavigationMode = this._isFastEditingStarted();\r\n        var allowNavigate = (!isEditing || isEditingNavigationMode) && $row && !isDetailRow($row);\r\n        if (allowNavigate) {\r\n            isEditingNavigationMode && this._closeEditCell();\r\n            if (!this._navigateNextCell($event, eventArgs.keyName)) {\r\n                if (this._isVirtualRowRender() && isUpArrow && dataSource && !dataSource.isLoading()) {\r\n                    var rowHeight = $row.outerHeight();\r\n                    rowIndex = this._focusedCellPosition.rowIndex - 1;\r\n                    this._scrollBy(0, -rowHeight, rowIndex, $event)\r\n                }\r\n            }\r\n            $event && $event.preventDefault()\r\n        }\r\n    },\r\n    _pageUpDownKeyHandler: function(eventArgs) {\r\n        var pageIndex = this._dataController.pageIndex();\r\n        var pageCount = this._dataController.pageCount();\r\n        var pagingEnabled = this.option(\"paging.enabled\");\r\n        var isPageUp = \"pageUp\" === eventArgs.keyName;\r\n        var pageStep = isPageUp ? -1 : 1;\r\n        var scrollable = this.getView(\"rowsView\").getScrollable();\r\n        if (pagingEnabled && !this._isVirtualScrolling()) {\r\n            if ((isPageUp ? pageIndex > 0 : pageIndex < pageCount - 1) && !this._isVirtualScrolling()) {\r\n                this._dataController.pageIndex(pageIndex + pageStep);\r\n                eventArgs.originalEvent.preventDefault()\r\n            }\r\n        } else {\r\n            if (scrollable && scrollable._container().height() < scrollable.$content().height()) {\r\n                this._scrollBy(0, scrollable._container().height() * pageStep);\r\n                eventArgs.originalEvent.preventDefault()\r\n            }\r\n        }\r\n    },\r\n    _spaceKeyHandler: function(eventArgs, isEditing) {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $target = (0, _renderer.default)(eventArgs.originalEvent && eventArgs.originalEvent.target);\r\n        if (this.option(\"selection\") && \"none\" !== this.option(\"selection\").mode && !isEditing) {\r\n            var isFocusedRowElement = \"row\" === this._getElementType($target) && this.isRowFocusType() && isDataRow($target);\r\n            var isFocusedSelectionCell = $target.hasClass(COMMAND_SELECT_CLASS);\r\n            if (isFocusedSelectionCell && \"onClick\" === this.option(\"selection.showCheckBoxesMode\")) {\r\n                this._selectionController.startSelectionWithCheckboxes()\r\n            }\r\n            if (isFocusedRowElement || $target.parent().hasClass(DATA_ROW_CLASS) || $target.hasClass(this.addWidgetPrefix(ROWS_VIEW_CLASS))) {\r\n                this._selectionController.changeItemSelection(rowIndex, {\r\n                    shift: eventArgs.shift,\r\n                    control: eventArgs.ctrl\r\n                });\r\n                eventArgs.originalEvent.preventDefault()\r\n            }\r\n        } else {\r\n            this._beginFastEditing(eventArgs.originalEvent)\r\n        }\r\n    },\r\n    _ctrlAKeyHandler: function(eventArgs, isEditing) {\r\n        if (!isEditing && eventArgs.ctrl && !eventArgs.alt && \"multiple\" === this.option(\"selection.mode\") && this.option(\"selection.allowSelectAll\")) {\r\n            this._selectionController.selectAll();\r\n            eventArgs.originalEvent.preventDefault()\r\n        }\r\n    },\r\n    _tabKeyHandler: function(eventArgs, isEditing) {\r\n        var editingOptions = this.option(\"editing\");\r\n        var direction = eventArgs.shift ? \"previous\" : \"next\";\r\n        var isCellPositionDefined = (0, _type.isDefined)(this._focusedCellPosition) && !(0, _type.isEmptyObject)(this._focusedCellPosition);\r\n        var isOriginalHandlerRequired = !isCellPositionDefined || !eventArgs.shift && this._isLastValidCell(this._focusedCellPosition) || eventArgs.shift && this._isFirstValidCell(this._focusedCellPosition);\r\n        var eventTarget = eventArgs.originalEvent.target;\r\n        var focusedViewElement = this._focusedView && this._focusedView.element();\r\n        if (this._handleTabKeyOnMasterDetailCell(eventTarget, direction)) {\r\n            return\r\n        }(0, _renderer.default)(focusedViewElement).addClass(FOCUS_STATE_CLASS);\r\n        if (editingOptions && eventTarget && !isOriginalHandlerRequired) {\r\n            if ((0, _renderer.default)(eventTarget).hasClass(this.addWidgetPrefix(ROWS_VIEW_CLASS))) {\r\n                this._resetFocusedCell()\r\n            }\r\n            if (this._isVirtualColumnRender()) {\r\n                this._processVirtualHorizontalPosition(direction)\r\n            }\r\n            if (isEditing) {\r\n                if (!this._editingCellTabHandler(eventArgs, direction)) {\r\n                    return\r\n                }\r\n            } else {\r\n                if (this._targetCellTabHandler(eventArgs, direction)) {\r\n                    isOriginalHandlerRequired = true\r\n                }\r\n            }\r\n        }\r\n        if (isOriginalHandlerRequired) {\r\n            this._editorFactory.loseFocus();\r\n            if (this._editingController.isEditing() && !this._isRowEditMode()) {\r\n                this._resetFocusedCell(true);\r\n                this._resetFocusedView();\r\n                this._closeEditCell()\r\n            }\r\n        } else {\r\n            eventArgs.originalEvent.preventDefault()\r\n        }\r\n    },\r\n    _getMaxHorizontalOffset: function() {\r\n        var scrollable = this.component.getScrollable();\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var offset = scrollable ? scrollable.scrollWidth() - (0, _renderer.default)(rowsView.element()).width() : 0;\r\n        return offset\r\n    },\r\n    _isColumnRendered: function(columnIndex) {\r\n        var allVisibleColumns = this._columnsController.getVisibleColumns(null, true);\r\n        var renderedVisibleColumns = this._columnsController.getVisibleColumns();\r\n        var column = allVisibleColumns[columnIndex];\r\n        var result = false;\r\n        if (column) {\r\n            result = renderedVisibleColumns.indexOf(column) >= 0\r\n        }\r\n        return result\r\n    },\r\n    _isFixedColumn: function(columnIndex) {\r\n        var allVisibleColumns = this._columnsController.getVisibleColumns(null, true);\r\n        var column = allVisibleColumns[columnIndex];\r\n        return !!column && !!column.fixed\r\n    },\r\n    _isColumnVirtual: function(columnIndex) {\r\n        var localColumnIndex = columnIndex - this._columnsController.getColumnIndexOffset();\r\n        var visibleColumns = this._columnsController.getVisibleColumns();\r\n        var column = visibleColumns[localColumnIndex];\r\n        return !!column && \"virtual\" === column.command\r\n    },\r\n    _processVirtualHorizontalPosition: function(direction) {\r\n        var scrollable = this.component.getScrollable();\r\n        var columnIndex = this.getColumnIndex();\r\n        var nextColumnIndex;\r\n        var horizontalScrollPosition = 0;\r\n        var needToScroll = false;\r\n        switch (direction) {\r\n            case \"next\":\r\n            case \"nextInRow\":\r\n                var columnsCount = this._getVisibleColumnCount();\r\n                nextColumnIndex = columnIndex + 1;\r\n                horizontalScrollPosition = this.option(\"rtlEnabled\") ? this._getMaxHorizontalOffset() : 0;\r\n                if (\"next\" === direction) {\r\n                    needToScroll = columnsCount === nextColumnIndex || this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex)\r\n                } else {\r\n                    needToScroll = columnsCount > nextColumnIndex && this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex)\r\n                }\r\n                break;\r\n            case \"previous\":\r\n            case \"previousInRow\":\r\n                nextColumnIndex = columnIndex - 1;\r\n                horizontalScrollPosition = this.option(\"rtlEnabled\") ? 0 : this._getMaxHorizontalOffset();\r\n                if (\"previous\" === direction) {\r\n                    var columnIndexOffset = this._columnsController.getColumnIndexOffset();\r\n                    var leftEdgePosition = nextColumnIndex < 0 && 0 === columnIndexOffset;\r\n                    needToScroll = leftEdgePosition || this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex)\r\n                } else {\r\n                    needToScroll = nextColumnIndex >= 0 && this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex)\r\n                }\r\n        }\r\n        if (needToScroll) {\r\n            scrollable.scrollTo({\r\n                left: horizontalScrollPosition\r\n            })\r\n        } else {\r\n            if ((0, _type.isDefined)(nextColumnIndex) && (0, _type.isDefined)(direction) && this._isColumnVirtual(nextColumnIndex)) {\r\n                horizontalScrollPosition = this._getHorizontalScrollPositionOffset(direction);\r\n                0 !== horizontalScrollPosition && scrollable.scrollBy({\r\n                    left: horizontalScrollPosition,\r\n                    top: 0\r\n                })\r\n            }\r\n        }\r\n    },\r\n    _getHorizontalScrollPositionOffset: function(direction) {\r\n        var positionOffset = 0;\r\n        var $currentCell = this._getCell(this._focusedCellPosition);\r\n        var currentCellWidth = $currentCell && $currentCell.outerWidth();\r\n        if (currentCellWidth > 0) {\r\n            var rtlMultiplier = this.option(\"rtlEnabled\") ? -1 : 1;\r\n            positionOffset = \"nextInRow\" === direction || \"next\" === direction ? currentCellWidth * rtlMultiplier : currentCellWidth * rtlMultiplier * -1\r\n        }\r\n        return positionOffset\r\n    },\r\n    _editingCellTabHandler: function(eventArgs, direction) {\r\n        var eventTarget = eventArgs.originalEvent.target;\r\n        var $cell = this._getCellElementFromTarget(eventTarget);\r\n        var isEditingAllowed;\r\n        var $event = eventArgs.originalEvent;\r\n        var elementType = this._getElementType(eventTarget);\r\n        if ($cell.is(COMMAND_CELL_SELECTOR)) {\r\n            return !this._targetCellTabHandler(eventArgs, direction)\r\n        }\r\n        this._updateFocusedCellPosition($cell);\r\n        var nextCellInfo = this._getNextCellByTabKey($event, direction, elementType);\r\n        $cell = nextCellInfo.$cell;\r\n        if (!$cell || this._handleTabKeyOnMasterDetailCell($cell, direction)) {\r\n            return false\r\n        }\r\n        var columnsController = this._columnsController;\r\n        var cellIndex = this.getView(\"rowsView\").getCellIndex($cell);\r\n        var columnIndex = cellIndex + columnsController.getColumnIndexOffset();\r\n        var column = columnsController.getVisibleColumns(null, true)[columnIndex];\r\n        var $row = $cell && $cell.parent();\r\n        var rowIndex = this._getRowIndex($row);\r\n        var row = this._dataController.items()[rowIndex];\r\n        var editingController = this._editingController;\r\n        if (column && column.allowEditing) {\r\n            var _isDataRow = !row || \"data\" === row.rowType;\r\n            isEditingAllowed = editingController.allowUpdating({\r\n                row: row\r\n            }) ? _isDataRow : row && row.isNewRow\r\n        }\r\n        if (!isEditingAllowed) {\r\n            this._closeEditCell()\r\n        }\r\n        if (this._focusCell($cell, !nextCellInfo.isHighlighted)) {\r\n            if (!this._isRowEditMode() && isEditingAllowed) {\r\n                this._editFocusedCell()\r\n            } else {\r\n                this._focusInteractiveElement($cell, eventArgs.shift)\r\n            }\r\n        }\r\n        return true\r\n    },\r\n    _targetCellTabHandler: function(eventArgs, direction) {\r\n        var $event = eventArgs.originalEvent;\r\n        var eventTarget = $event.target;\r\n        var $cell = this._getCellElementFromTarget(eventTarget);\r\n        var $lastInteractiveElement = this._getInteractiveElement($cell, !eventArgs.shift);\r\n        var isOriginalHandlerRequired = false;\r\n        var elementType;\r\n        if (!isEditorCell(this, $cell) && $lastInteractiveElement.length && eventTarget !== $lastInteractiveElement.get(0)) {\r\n            isOriginalHandlerRequired = true\r\n        } else {\r\n            if (void 0 === this._focusedCellPosition.rowIndex && (0, _renderer.default)(eventTarget).hasClass(ROW_CLASS)) {\r\n                this._updateFocusedCellPosition($cell)\r\n            }\r\n            elementType = this._getElementType(eventTarget);\r\n            if (this.isRowFocusType()) {\r\n                this.setCellFocusType();\r\n                if (\"row\" === elementType && isDataRow((0, _renderer.default)(eventTarget))) {\r\n                    eventTarget = this.getFirstValidCellInRow((0, _renderer.default)(eventTarget));\r\n                    elementType = this._getElementType(eventTarget)\r\n                }\r\n            }\r\n            var nextCellInfo = this._getNextCellByTabKey($event, direction, elementType);\r\n            $cell = nextCellInfo.$cell;\r\n            if (!$cell) {\r\n                return false\r\n            }\r\n            $cell = this._checkNewLineTransition($event, $cell);\r\n            if (!$cell) {\r\n                return false\r\n            }\r\n            this._focusCell($cell, !nextCellInfo.isHighlighted);\r\n            if (!isEditorCell(this, $cell)) {\r\n                this._focusInteractiveElement($cell, eventArgs.shift)\r\n            }\r\n        }\r\n        return isOriginalHandlerRequired\r\n    },\r\n    _getNextCellByTabKey: function($event, direction, elementType) {\r\n        var $cell = this._getNextCell(direction, elementType);\r\n        var args = $cell && this._fireFocusedCellChanging($event, $cell, true);\r\n        if (!args || args.cancel) {\r\n            return {}\r\n        }\r\n        if (args.$newCellElement) {\r\n            $cell = args.$newCellElement\r\n        }\r\n        return {\r\n            $cell: $cell,\r\n            isHighlighted: args.isHighlighted\r\n        }\r\n    },\r\n    _checkNewLineTransition: function($event, $cell) {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $row = $cell.parent();\r\n        if (rowIndex !== this._getRowIndex($row)) {\r\n            var cellPosition = this._getCellPosition($cell);\r\n            var args = this._fireFocusedRowChanging($event, $row);\r\n            if (args.cancel) {\r\n                return\r\n            }\r\n            if (args.rowIndexChanged) {\r\n                this.setFocusedColumnIndex(cellPosition.columnIndex);\r\n                $cell = this._getFocusedCell()\r\n            }\r\n        }\r\n        return $cell\r\n    },\r\n    _enterKeyHandler: function(eventArgs, isEditing) {\r\n        var $cell = this._getFocusedCell();\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $row = this._focusedView && this._focusedView.getRow(rowIndex);\r\n        if (this.option(\"grouping.allowCollapsing\") && isGroupRow($row) || this.option(\"masterDetail.enabled\") && $cell && $cell.hasClass(COMMAND_EXPAND_CLASS)) {\r\n            var key = this._dataController.getKeyByRowIndex(rowIndex);\r\n            var item = this._dataController.items()[rowIndex];\r\n            if (void 0 !== key && item && item.data && !item.data.isContinuation) {\r\n                this._dataController.changeRowExpand(key)\r\n            }\r\n        } else {\r\n            this._processEnterKeyForDataCell(eventArgs, isEditing)\r\n        }\r\n    },\r\n    _processEnterKeyForDataCell: function(eventArgs, isEditing) {\r\n        var direction = this._getEnterKeyDirection(eventArgs);\r\n        var allowEditingOnEnterKey = this._allowEditingOnEnterKey();\r\n        if (isEditing || !allowEditingOnEnterKey && direction) {\r\n            this._handleEnterKeyEditingCell(eventArgs.originalEvent);\r\n            if (\"next\" === direction || \"previous\" === direction) {\r\n                this._targetCellTabHandler(eventArgs, direction)\r\n            } else {\r\n                if (\"upArrow\" === direction || \"downArrow\" === direction) {\r\n                    this._navigateNextCell(eventArgs.originalEvent, direction)\r\n                }\r\n            }\r\n        } else {\r\n            if (allowEditingOnEnterKey) {\r\n                this._startEditing(eventArgs)\r\n            }\r\n        }\r\n    },\r\n    _getEnterKeyDirection: function(eventArgs) {\r\n        var enterKeyDirection = this.option(\"keyboardNavigation.enterKeyDirection\");\r\n        var isShift = eventArgs.shift;\r\n        if (\"column\" === enterKeyDirection) {\r\n            return isShift ? \"upArrow\" : \"downArrow\"\r\n        }\r\n        if (\"row\" === enterKeyDirection) {\r\n            return isShift ? \"previous\" : \"next\"\r\n        }\r\n    },\r\n    _handleEnterKeyEditingCell: function(event) {\r\n        var target = event.target;\r\n        var $cell = this._getCellElementFromTarget(target);\r\n        var isRowEditMode = this._isRowEditMode();\r\n        this._updateFocusedCellPosition($cell);\r\n        if (isRowEditMode) {\r\n            this._focusEditFormCell($cell);\r\n            setTimeout(this._editingController.saveEditData.bind(this._editingController))\r\n        } else {\r\n            _events_engine.default.trigger((0, _renderer.default)(target), \"change\");\r\n            this._closeEditCell();\r\n            event.preventDefault()\r\n        }\r\n    },\r\n    _escapeKeyHandler: function(eventArgs, isEditing) {\r\n        var $cell = this._getCellElementFromTarget(eventArgs.originalEvent.target);\r\n        if (isEditing) {\r\n            this._updateFocusedCellPosition($cell);\r\n            if (!this._isRowEditMode()) {\r\n                if (\"cell\" === this._editingController.getEditMode()) {\r\n                    this._editingController.cancelEditData()\r\n                } else {\r\n                    this._closeEditCell()\r\n                }\r\n            } else {\r\n                this._focusEditFormCell($cell);\r\n                this._editingController.cancelEditData();\r\n                if (0 === this._dataController.items().length) {\r\n                    this._resetFocusedCell();\r\n                    this._editorFactory.loseFocus()\r\n                }\r\n            }\r\n            eventArgs.originalEvent.preventDefault()\r\n        }\r\n    },\r\n    _ctrlFKeyHandler: function(eventArgs) {\r\n        if (this.option(\"searchPanel.visible\")) {\r\n            var searchTextEditor = this._headerPanel.getSearchTextEditor();\r\n            if (searchTextEditor) {\r\n                searchTextEditor.focus();\r\n                eventArgs.originalEvent.preventDefault()\r\n            }\r\n        }\r\n    },\r\n    _f2KeyHandler: function() {\r\n        var isEditing = this._editingController.isEditing();\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $row = this._focusedView && this._focusedView.getRow(rowIndex);\r\n        if (!isEditing && isDataRow($row)) {\r\n            this._startEditing()\r\n        }\r\n    },\r\n    _navigateNextCell: function($event, keyCode) {\r\n        var $cell = this._getNextCell(keyCode);\r\n        var directionCode = this._getDirectionCodeByKey(keyCode);\r\n        var isCellValid = $cell && this._isCellValid($cell);\r\n        var result = isCellValid ? this._arrowKeysHandlerFocusCell($event, $cell, directionCode) : false;\r\n        return result\r\n    },\r\n    _arrowKeysHandlerFocusCell: function($event, $nextCell, direction) {\r\n        var isVerticalDirection = \"prevRow\" === direction || \"nextRow\" === direction;\r\n        var args = this._fireFocusChangingEvents($event, $nextCell, isVerticalDirection, true);\r\n        $nextCell = args.$newCellElement;\r\n        if (!args.cancel && this._isCellValid($nextCell)) {\r\n            this._focus($nextCell, !args.isHighlighted);\r\n            return true\r\n        }\r\n        return false\r\n    },\r\n    _beginFastEditing: function(originalEvent, isDeleting) {\r\n        if (!this._isFastEditingAllowed() || originalEvent.altKey || originalEvent.ctrlKey || this._editingController.isEditing()) {\r\n            return false\r\n        }\r\n        if (isDeleting) {\r\n            this._startEditing(originalEvent, FAST_EDITING_DELETE_KEY)\r\n        } else {\r\n            var key = originalEvent.key;\r\n            var keyCode = originalEvent.keyCode || originalEvent.which;\r\n            var fastEditingKey = key || keyCode && String.fromCharCode(keyCode);\r\n            if (fastEditingKey && (1 === fastEditingKey.length || fastEditingKey === FAST_EDITING_DELETE_KEY)) {\r\n                this._startEditing(originalEvent, fastEditingKey)\r\n            }\r\n        }\r\n        return true\r\n    },\r\n    _pointerEventHandler: function(e) {\r\n        var event = e.event || e;\r\n        var $target = (0, _renderer.default)(event.currentTarget);\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var focusedViewElement = rowsView && rowsView.element();\r\n        var $parent = $target.parent();\r\n        var isInteractiveElement = (0, _renderer.default)(event.target).is(INTERACTIVE_ELEMENTS_SELECTOR);\r\n        var isRevertButton = !!(0, _renderer.default)(event.target).closest(\".\".concat(REVERT_BUTTON_CLASS)).length;\r\n        var isExpandCommandCell = $target.hasClass(COMMAND_EXPAND_CLASS);\r\n        if (!this._isEventInCurrentGrid(event)) {\r\n            return\r\n        }\r\n        if (!isRevertButton && (this._isCellValid($target, !isInteractiveElement) || isExpandCommandCell)) {\r\n            $target = this._isInsideEditForm($target) ? (0, _renderer.default)(event.target) : $target;\r\n            this._focusView();\r\n            (0, _renderer.default)(focusedViewElement).removeClass(FOCUS_STATE_CLASS);\r\n            if ($parent.hasClass(FREESPACE_ROW_CLASS)) {\r\n                this._updateFocusedCellPosition($target);\r\n                this._applyTabIndexToElement(this._focusedView.element());\r\n                this._focusedView.focus()\r\n            } else {\r\n                if (!this._isMasterDetailCell($target)) {\r\n                    this._clickTargetCellHandler(event, $target)\r\n                } else {\r\n                    this._updateFocusedCellPosition($target)\r\n                }\r\n            }\r\n        } else {\r\n            if ($target.is(\"td\")) {\r\n                this._resetFocusedCell()\r\n            }\r\n        }\r\n    },\r\n    _clickTargetCellHandler: function(event, $cell) {\r\n        var columnIndex = this.getView(\"rowsView\").getCellIndex($cell);\r\n        var column = this._columnsController.getVisibleColumns()[columnIndex];\r\n        var isCellEditMode = this._isCellEditMode();\r\n        this.setCellFocusType();\r\n        var args = this._fireFocusChangingEvents(event, $cell, true);\r\n        $cell = args.$newCellElement;\r\n        if (!args.cancel) {\r\n            if (args.resetFocusedRow) {\r\n                this.getController(\"focus\")._resetFocusedRow();\r\n                return\r\n            }\r\n            if (args.rowIndexChanged) {\r\n                $cell = this._getFocusedCell()\r\n            }\r\n            if (!args.isHighlighted && !isCellEditMode) {\r\n                this.setRowFocusType()\r\n            }\r\n            this._updateFocusedCellPosition($cell);\r\n            if (this._allowRowUpdating() && isCellEditMode && column && column.allowEditing) {\r\n                this._isNeedFocus = false;\r\n                this._isHiddenFocus = false\r\n            } else {\r\n                var $target = event && (0, _renderer.default)(event.target).closest(INTERACTIVE_ELEMENTS_SELECTOR + \", td\");\r\n                var isInteractiveTarget = $target && $target.not($cell).is(INTERACTIVE_ELEMENTS_SELECTOR);\r\n                var isEditor = !!column && !column.command && $cell.hasClass(EDITOR_CELL_CLASS);\r\n                var isDisabled = !isEditor && (!args.isHighlighted || isInteractiveTarget);\r\n                this._focus($cell, isDisabled, isInteractiveTarget)\r\n            }\r\n        } else {\r\n            this.setRowFocusType();\r\n            this.setFocusedRowIndex(args.prevRowIndex);\r\n            $cell = this._getFocusedCell();\r\n            if (this._editingController.isEditing() && isCellEditMode) {\r\n                this._closeEditCell()\r\n            }\r\n        }\r\n    },\r\n    _allowRowUpdating: function() {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var row = this._dataController.items()[rowIndex];\r\n        return this._editingController.allowUpdating({\r\n            row: row\r\n        }, \"click\")\r\n    },\r\n    focus: function(element) {\r\n        var activeElementSelector;\r\n        var focusedRowEnabled = this.option(\"focusedRowEnabled\");\r\n        var isHighlighted = isCellElement((0, _renderer.default)(element));\r\n        if (!element) {\r\n            activeElementSelector = \".dx-datagrid-rowsview .dx-row[tabindex]\";\r\n            if (!focusedRowEnabled) {\r\n                activeElementSelector += \", .dx-datagrid-rowsview .dx-row > td[tabindex]\"\r\n            }\r\n            element = this.component.$element().find(activeElementSelector).first()\r\n        }\r\n        element && this._focusElement((0, _renderer.default)(element), isHighlighted)\r\n    },\r\n    getFocusedView: function() {\r\n        return this._focusedView\r\n    },\r\n    setupFocusedView: function() {\r\n        if (this.isKeyboardEnabled() && !(0, _type.isDefined)(this._focusedView)) {\r\n            this._focusView()\r\n        }\r\n    },\r\n    _focusElement: function($element, isHighlighted) {\r\n        var rowsViewElement = (0, _renderer.default)(this._getRowsViewElement());\r\n        var $focusedView = $element.closest(rowsViewElement);\r\n        var isRowFocusType = this.isRowFocusType();\r\n        var args = {};\r\n        if (!$focusedView.length || isCellElement($element) && !this._isCellValid($element)) {\r\n            return\r\n        }\r\n        this._focusView();\r\n        this._isNeedFocus = true;\r\n        this._isNeedScroll = true;\r\n        if (isCellElement($element) || isGroupRow($element)) {\r\n            this.setCellFocusType();\r\n            args = this._fireFocusChangingEvents(null, $element, false, isHighlighted);\r\n            $element = args.$newCellElement;\r\n            if (isRowFocusType && !args.isHighlighted) {\r\n                this.setRowFocusType()\r\n            }\r\n        }\r\n        if (!args.cancel) {\r\n            this._focus($element, !args.isHighlighted);\r\n            this._focusInteractiveElement($element)\r\n        }\r\n    },\r\n    _getFocusedViewByElement: function($element) {\r\n        var view = this.getFocusedView();\r\n        var $view = view && (0, _renderer.default)(view.element());\r\n        return $element && 0 !== $element.closest($view).length\r\n    },\r\n    _focusView: function() {\r\n        this._focusedView = this.getView(\"rowsView\")\r\n    },\r\n    _resetFocusedView: function() {\r\n        this.setRowFocusType();\r\n        this._focusedView = null\r\n    },\r\n    _focusInteractiveElement: function($cell, isLast) {\r\n        if (!$cell) {\r\n            return\r\n        }\r\n        var $focusedElement = this._getInteractiveElement($cell, isLast);\r\n        _uiGrid_core2.default.focusAndSelectElement(this, $focusedElement)\r\n    },\r\n    _focus: function($cell, disableFocus, isInteractiveElement) {\r\n        var $row = $cell && !$cell.hasClass(ROW_CLASS) ? $cell.closest(\".\".concat(ROW_CLASS)) : $cell;\r\n        if ($row && isNotFocusedRow($row)) {\r\n            return\r\n        }\r\n        var focusedView = this._focusedView;\r\n        var $focusViewElement = focusedView && focusedView.element();\r\n        var $focusElement;\r\n        this._isHiddenFocus = disableFocus;\r\n        if (isGroupRow($row) || this.isRowFocusType()) {\r\n            $focusElement = $row;\r\n            if (focusedView) {\r\n                this.setFocusedRowIndex(this._getRowIndex($row))\r\n            }\r\n        } else {\r\n            if (isCellElement($cell)) {\r\n                $focusElement = $cell;\r\n                this._updateFocusedCellPosition($cell)\r\n            }\r\n        }\r\n        if ($focusElement) {\r\n            if ($focusViewElement) {\r\n                $focusViewElement.find(\".dx-row[tabindex], .dx-row > td[tabindex]\").not($focusElement).removeClass(CELL_FOCUS_DISABLED_CLASS).removeAttr(\"tabindex\")\r\n            }\r\n            _events_engine.default.one($focusElement, \"blur\", function(e) {\r\n                if (e.relatedTarget) {\r\n                    $focusElement.removeClass(CELL_FOCUS_DISABLED_CLASS)\r\n                }\r\n            });\r\n            if (!isInteractiveElement) {\r\n                this._applyTabIndexToElement($focusElement);\r\n                _events_engine.default.trigger($focusElement, \"focus\")\r\n            }\r\n            if (disableFocus) {\r\n                $focusElement.addClass(CELL_FOCUS_DISABLED_CLASS)\r\n            } else {\r\n                this._editorFactory.focus($focusElement)\r\n            }\r\n        }\r\n    },\r\n    _updateFocus: function(isRenderView) {\r\n        var _this6 = this;\r\n        this._updateFocusTimeout = setTimeout(function() {\r\n            var $cell = _this6._getFocusedCell();\r\n            var isEditing = _this6._editingController.isEditing();\r\n            if ($cell && !(_this6._isMasterDetailCell($cell) && !_this6._isRowEditMode())) {\r\n                if (_this6._hasSkipRow($cell.parent())) {\r\n                    var direction = _this6._focusedCellPosition && _this6._focusedCellPosition.rowIndex > 0 ? \"upArrow\" : \"downArrow\";\r\n                    $cell = _this6._getNextCell(direction)\r\n                }\r\n                if (isElementDefined($cell)) {\r\n                    if (isRenderView && !isEditing && _this6._checkCellOverlapped($cell)) {\r\n                        return\r\n                    }\r\n                    if ($cell.is(\"td\") || $cell.hasClass(_this6.addWidgetPrefix(EDIT_FORM_ITEM_CLASS))) {\r\n                        var isCommandCell = $cell.is(COMMAND_CELL_SELECTOR);\r\n                        var $focusedElementInsideCell = $cell.find(\":focus\");\r\n                        var isFocusedElementDefined = isElementDefined($focusedElementInsideCell);\r\n                        if ((isRenderView || !isCommandCell) && _this6._editorFactory.focus()) {\r\n                            if (isCommandCell && isFocusedElementDefined) {\r\n                                _uiGrid_core2.default.focusAndSelectElement(_this6, $focusedElementInsideCell);\r\n                                return\r\n                            }!isFocusedElementDefined && _this6._focus($cell)\r\n                        } else {\r\n                            if (!isFocusedElementDefined && (_this6._isNeedFocus || _this6._isHiddenFocus)) {\r\n                                _this6._focus($cell, _this6._isHiddenFocus)\r\n                            }\r\n                        }\r\n                        if (isEditing) {\r\n                            _this6._focusInteractiveElement.bind(_this6)($cell)\r\n                        }\r\n                    } else {\r\n                        _events_engine.default.trigger($cell, \"focus\")\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    },\r\n    _checkCellOverlapped: function($cell) {\r\n        var cellOffset = $cell.offset();\r\n        var hasScrollable = this.component.getScrollable && this.component.getScrollable();\r\n        var isOverlapped = false;\r\n        if (hasScrollable) {\r\n            if (cellOffset.left < 0) {\r\n                isOverlapped = $cell.width() + cellOffset.left <= 0\r\n            } else {\r\n                if (cellOffset.top < 0) {\r\n                    isOverlapped = $cell.height() + cellOffset.top <= 0\r\n                }\r\n            }\r\n        }\r\n        return isOverlapped\r\n    },\r\n    _getFocusedCell: function() {\r\n        return (0, _renderer.default)(this._getCell(this._focusedCellPosition))\r\n    },\r\n    _updateFocusedCellPositionByTarget: function(target) {\r\n        var _this$_focusedCellPos;\r\n        var elementType = this._getElementType(target);\r\n        if (\"row\" === elementType && (0, _type.isDefined)(null === (_this$_focusedCellPos = this._focusedCellPosition) || void 0 === _this$_focusedCellPos ? void 0 : _this$_focusedCellPos.columnIndex)) {\r\n            var $row = (0, _renderer.default)(target);\r\n            this._focusedView && isGroupRow($row) && this.setFocusedRowIndex(this._getRowIndex($row))\r\n        } else {\r\n            this._updateFocusedCellPosition(this._getCellElementFromTarget(target))\r\n        }\r\n    },\r\n    _updateFocusedCellPosition: function($cell, direction) {\r\n        var position = this._getCellPosition($cell, direction);\r\n        if (position) {\r\n            if (!$cell.length || position.rowIndex >= 0 && position.columnIndex >= 0) {\r\n                this.setFocusedCellPosition(position.rowIndex, position.columnIndex)\r\n            }\r\n        }\r\n        return position\r\n    },\r\n    _getFocusedColumnIndexOffset: function(columnIndex) {\r\n        var offset = 0;\r\n        var column = this._columnsController.getVisibleColumns()[columnIndex];\r\n        if (column && column.fixed) {\r\n            offset = this._getFixedColumnIndexOffset(column)\r\n        } else {\r\n            if (columnIndex >= 0) {\r\n                offset = this._columnsController.getColumnIndexOffset()\r\n            }\r\n        }\r\n        return offset\r\n    },\r\n    _getFixedColumnIndexOffset: function(column) {\r\n        var offset = isFixedColumnIndexOffsetRequired(this, column) ? this._getVisibleColumnCount() - this._columnsController.getVisibleColumns().length : 0;\r\n        return offset\r\n    },\r\n    _getCellPosition: function($cell, direction) {\r\n        var columnIndex;\r\n        var $row = isElementDefined($cell) && $cell.closest(\"tr\");\r\n        var rowsView = this.getView(\"rowsView\");\r\n        if (isElementDefined($row)) {\r\n            var rowIndex = this._getRowIndex($row);\r\n            columnIndex = rowsView.getCellIndex($cell, rowIndex);\r\n            columnIndex += this._getFocusedColumnIndexOffset(columnIndex);\r\n            if (direction) {\r\n                columnIndex = \"previous\" === direction ? columnIndex - 1 : columnIndex + 1;\r\n                columnIndex = this._applyColumnIndexBoundaries(columnIndex)\r\n            }\r\n            return {\r\n                rowIndex: rowIndex,\r\n                columnIndex: columnIndex\r\n            }\r\n        }\r\n    },\r\n    _focusCell: function($cell, isDisabled) {\r\n        if (this._isCellValid($cell)) {\r\n            this._focus($cell, isDisabled);\r\n            return true\r\n        }\r\n    },\r\n    _focusEditFormCell: function($cell) {\r\n        if ($cell.hasClass(MASTER_DETAIL_CELL_CLASS)) {\r\n            this._editorFactory.focus($cell, true)\r\n        }\r\n    },\r\n    _resetFocusedCell: function(preventScroll) {\r\n        var _this$_focusedView;\r\n        var $cell = this._getFocusedCell();\r\n        isElementDefined($cell) && $cell.removeAttr(\"tabindex\");\r\n        this._isNeedFocus = false;\r\n        this._isNeedScroll = false;\r\n        this._focusedCellPosition = {};\r\n        clearTimeout(this._updateFocusTimeout);\r\n        null === (_this$_focusedView = this._focusedView) || void 0 === _this$_focusedView ? void 0 : _this$_focusedView.renderFocusState(preventScroll)\r\n    },\r\n    restoreFocusableElement: function(rowIndex, $event) {\r\n        var that = this;\r\n        var args;\r\n        var $rowElement;\r\n        var isUpArrow = (0, _type.isDefined)(rowIndex);\r\n        var rowsView = that.getView(\"rowsView\");\r\n        var $rowsViewElement = rowsView.element();\r\n        var columnIndex = that._focusedCellPosition.columnIndex;\r\n        var rowIndexOffset = that._dataController.getRowIndexOffset();\r\n        rowIndex = isUpArrow ? rowIndex : rowsView.getTopVisibleItemIndex() + rowIndexOffset;\r\n        if (!isUpArrow) {\r\n            that._editorFactory.loseFocus();\r\n            that._applyTabIndexToElement($rowsViewElement);\r\n            _events_engine.default.trigger($rowsViewElement, \"focus\")\r\n        } else {\r\n            $rowElement = rowsView.getRow(rowIndex - rowIndexOffset);\r\n            args = that._fireFocusedRowChanging($event, $rowElement);\r\n            if (!args.cancel && args.rowIndexChanged) {\r\n                rowIndex = args.newRowIndex\r\n            }\r\n        }\r\n        if (!isUpArrow || !args.cancel) {\r\n            that.setFocusedCellPosition(rowIndex, columnIndex)\r\n        }\r\n        isUpArrow && that._updateFocus()\r\n    },\r\n    _getNewPositionByCode: function(cellPosition, elementType, code) {\r\n        var columnIndex = cellPosition.columnIndex;\r\n        var rowIndex = cellPosition.rowIndex;\r\n        var visibleColumnsCount;\r\n        if (void 0 === cellPosition.rowIndex && \"next\" === code) {\r\n            return {\r\n                columnIndex: 0,\r\n                rowIndex: 0\r\n            }\r\n        }\r\n        switch (code) {\r\n            case \"nextInRow\":\r\n            case \"next\":\r\n                visibleColumnsCount = this._getVisibleColumnCount();\r\n                if (columnIndex < visibleColumnsCount - 1 && \"row\" !== elementType && this._hasValidCellAfterPosition({\r\n                        columnIndex: columnIndex,\r\n                        rowIndex: rowIndex\r\n                    })) {\r\n                    columnIndex++\r\n                } else {\r\n                    if (!this._isLastRow(rowIndex) && \"next\" === code) {\r\n                        columnIndex = 0;\r\n                        rowIndex++\r\n                    }\r\n                }\r\n                break;\r\n            case \"previousInRow\":\r\n            case \"previous\":\r\n                if (columnIndex > 0 && \"row\" !== elementType && this._hasValidCellBeforePosition({\r\n                        columnIndex: columnIndex,\r\n                        rowIndex: rowIndex\r\n                    })) {\r\n                    columnIndex--\r\n                } else {\r\n                    if (rowIndex > 0 && \"previous\" === code) {\r\n                        rowIndex--;\r\n                        visibleColumnsCount = this._getVisibleColumnCount();\r\n                        columnIndex = visibleColumnsCount - 1\r\n                    }\r\n                }\r\n                break;\r\n            case \"upArrow\":\r\n                rowIndex = rowIndex > 0 ? rowIndex - 1 : rowIndex;\r\n                break;\r\n            case \"downArrow\":\r\n                rowIndex = !this._isLastRow(rowIndex) ? rowIndex + 1 : rowIndex\r\n        }\r\n        return {\r\n            columnIndex: columnIndex,\r\n            rowIndex: rowIndex\r\n        }\r\n    },\r\n    setFocusedCellPosition: function(rowIndex, columnIndex) {\r\n        this.setFocusedRowIndex(rowIndex);\r\n        this.setFocusedColumnIndex(columnIndex)\r\n    },\r\n    setFocusedRowIndex: function(rowIndex) {\r\n        if (!this._focusedCellPosition) {\r\n            this._focusedCellPosition = {}\r\n        }\r\n        this._focusedCellPosition.rowIndex = rowIndex\r\n    },\r\n    setFocusedColumnIndex: function(columnIndex) {\r\n        if (!this._focusedCellPosition) {\r\n            this._focusedCellPosition = {}\r\n        }\r\n        this._focusedCellPosition.columnIndex = columnIndex\r\n    },\r\n    getRowIndex: function() {\r\n        return this._focusedCellPosition ? this._focusedCellPosition.rowIndex : -1\r\n    },\r\n    getColumnIndex: function() {\r\n        return this._focusedCellPosition ? this._focusedCellPosition.columnIndex : -1\r\n    },\r\n    getVisibleRowIndex: function() {\r\n        var rowIndex = this._focusedCellPosition && this._focusedCellPosition.rowIndex;\r\n        if (!(0, _type.isDefined)(rowIndex)) {\r\n            return -1\r\n        }\r\n        return rowIndex - this._dataController.getRowIndexOffset()\r\n    },\r\n    getVisibleColumnIndex: function() {\r\n        var columnIndex = this._focusedCellPosition && this._focusedCellPosition.columnIndex;\r\n        if (!(0, _type.isDefined)(columnIndex)) {\r\n            return -1\r\n        }\r\n        return columnIndex - this._columnsController.getColumnIndexOffset()\r\n    },\r\n    _applyColumnIndexBoundaries: function(columnIndex) {\r\n        var visibleColumnsCount = this._getVisibleColumnCount();\r\n        if (columnIndex < 0) {\r\n            columnIndex = 0\r\n        } else {\r\n            if (columnIndex >= visibleColumnsCount) {\r\n                columnIndex = visibleColumnsCount - 1\r\n            }\r\n        }\r\n        return columnIndex\r\n    },\r\n    _isCellByPositionValid: function(cellPosition) {\r\n        var $cell = (0, _renderer.default)(this._getCell(cellPosition));\r\n        return this._isCellValid($cell)\r\n    },\r\n    _isLastRow: function(rowIndex) {\r\n        if (this._isVirtualRowRender()) {\r\n            return rowIndex >= this._dataController.totalItemsCount() - 1\r\n        }\r\n        return rowIndex === this._dataController.items().length - 1\r\n    },\r\n    _isFirstValidCell: function(cellPosition) {\r\n        var isFirstValidCell = false;\r\n        if (0 === cellPosition.rowIndex && cellPosition.columnIndex >= 0) {\r\n            isFirstValidCell = isFirstValidCell || !this._hasValidCellBeforePosition(cellPosition)\r\n        }\r\n        return isFirstValidCell\r\n    },\r\n    _hasValidCellBeforePosition: function(cellPosition) {\r\n        var columnIndex = cellPosition.columnIndex;\r\n        var hasValidCells = false;\r\n        while (columnIndex > 0 && !hasValidCells) {\r\n            var checkingPosition = {\r\n                columnIndex: --columnIndex,\r\n                rowIndex: cellPosition.rowIndex\r\n            };\r\n            hasValidCells = this._isCellByPositionValid(checkingPosition)\r\n        }\r\n        return hasValidCells\r\n    },\r\n    _hasValidCellAfterPosition: function(cellPosition) {\r\n        var columnIndex = cellPosition.columnIndex;\r\n        var hasValidCells = false;\r\n        var visibleColumnCount = this._getVisibleColumnCount();\r\n        while (columnIndex < visibleColumnCount - 1 && !hasValidCells) {\r\n            var checkingPosition = {\r\n                columnIndex: ++columnIndex,\r\n                rowIndex: cellPosition.rowIndex\r\n            };\r\n            hasValidCells = this._isCellByPositionValid(checkingPosition)\r\n        }\r\n        return hasValidCells\r\n    },\r\n    _isLastValidCell: function(cellPosition) {\r\n        var nextColumnIndex = cellPosition.columnIndex >= 0 ? cellPosition.columnIndex + 1 : 0;\r\n        var rowIndex = cellPosition.rowIndex;\r\n        var checkingPosition = {\r\n            columnIndex: nextColumnIndex,\r\n            rowIndex: rowIndex\r\n        };\r\n        var visibleRows = this._dataController.getVisibleRows();\r\n        var row = visibleRows && visibleRows[rowIndex];\r\n        var isLastRow = this._isLastRow(rowIndex);\r\n        if (!isLastRow) {\r\n            return false\r\n        }\r\n        if (row && \"group\" === row.rowType && cellPosition.columnIndex > 0) {\r\n            return true\r\n        }\r\n        if (cellPosition.columnIndex === this._getVisibleColumnCount() - 1) {\r\n            return true\r\n        }\r\n        if (this._isCellByPositionValid(checkingPosition)) {\r\n            return false\r\n        }\r\n        return this._isLastValidCell(checkingPosition)\r\n    },\r\n    _isCellValid: function($cell, isClick) {\r\n        if (isElementDefined($cell)) {\r\n            var rowsView = this.getView(\"rowsView\");\r\n            var $row = $cell.parent();\r\n            var columnsController = this._columnsController;\r\n            var columnIndex = rowsView.getCellIndex($cell) + columnsController.getColumnIndexOffset();\r\n            var column = columnsController.getVisibleColumns(null, true)[columnIndex];\r\n            var visibleColumnCount = this._getVisibleColumnCount();\r\n            var editingController = this._editingController;\r\n            var isMasterDetailRow = isDetailRow($row);\r\n            var isShowWhenGrouped = column && column.showWhenGrouped;\r\n            var isDataCell = column && !$cell.hasClass(COMMAND_EXPAND_CLASS) && isDataRow($row);\r\n            var isValidGroupSpaceColumn = function() {\r\n                return !isMasterDetailRow && column && (!(0, _type.isDefined)(column.groupIndex) || isShowWhenGrouped && isDataCell) || parseInt($cell.attr(\"colspan\")) > 1\r\n            };\r\n            if (this._isMasterDetailCell($cell)) {\r\n                return true\r\n            }\r\n            if (visibleColumnCount > columnIndex && isValidGroupSpaceColumn()) {\r\n                var rowItems = this._dataController.items();\r\n                var visibleRowIndex = rowsView.getRowIndex($row);\r\n                var row = rowItems[visibleRowIndex];\r\n                var isCellEditing = editingController && this._isCellEditMode() && editingController.isEditing();\r\n                var isRowEditingInCurrentRow = editingController && editingController.isEditRow(visibleRowIndex);\r\n                var isEditing = isRowEditingInCurrentRow || isCellEditing;\r\n                if (column.command) {\r\n                    if (this._isLegacyNavigation()) {\r\n                        return !isEditing && \"expand\" === column.command\r\n                    }\r\n                    if (isCellEditing) {\r\n                        return false\r\n                    }\r\n                    if (isRowEditingInCurrentRow) {\r\n                        return \"select\" !== column.command\r\n                    }\r\n                    return !isEditing\r\n                }\r\n                if (isCellEditing && row && \"data\" !== row.rowType) {\r\n                    return false\r\n                }\r\n                return !isEditing || column.allowEditing || isClick\r\n            }\r\n        }\r\n    },\r\n    getFirstValidCellInRow: function($row, columnIndex) {\r\n        var that = this;\r\n        var $cells = $row.find(\"> td\");\r\n        var $cell;\r\n        var $result;\r\n        columnIndex = columnIndex || 0;\r\n        for (var i = columnIndex; i < $cells.length; ++i) {\r\n            $cell = $cells.eq(i);\r\n            if (that._isCellValid($cell)) {\r\n                $result = $cell;\r\n                break\r\n            }\r\n        }\r\n        return $result\r\n    },\r\n    _getNextCell: function(keyCode, elementType, cellPosition) {\r\n        var focusedCellPosition = cellPosition || this._focusedCellPosition;\r\n        var isRowFocusType = this.isRowFocusType();\r\n        var includeCommandCells = isRowFocusType || (0, _array.inArray)(keyCode, [\"next\", \"previous\"]) > -1;\r\n        var $cell;\r\n        var $row;\r\n        if (this._focusedView && focusedCellPosition) {\r\n            var newFocusedCellPosition = this._getNewPositionByCode(focusedCellPosition, elementType, keyCode);\r\n            $cell = (0, _renderer.default)(this._getCell(newFocusedCellPosition));\r\n            var isLastCellOnDirection = \"previous\" === keyCode ? this._isFirstValidCell(newFocusedCellPosition) : this._isLastValidCell(newFocusedCellPosition);\r\n            if (isElementDefined($cell) && !this._isCellValid($cell) && this._isCellInRow(newFocusedCellPosition, includeCommandCells) && !isLastCellOnDirection) {\r\n                if (isRowFocusType) {\r\n                    $cell = this.getFirstValidCellInRow($cell.parent(), newFocusedCellPosition.columnIndex)\r\n                } else {\r\n                    $cell = this._getNextCell(keyCode, \"cell\", newFocusedCellPosition)\r\n                }\r\n            }\r\n            $row = isElementDefined($cell) && $cell.parent();\r\n            if (this._hasSkipRow($row)) {\r\n                var rowIndex = this._getRowIndex($row);\r\n                if (!this._isLastRow(rowIndex)) {\r\n                    $cell = this._getNextCell(keyCode, \"row\", {\r\n                        columnIndex: focusedCellPosition.columnIndex,\r\n                        rowIndex: rowIndex\r\n                    })\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n            return isElementDefined($cell) ? $cell : null\r\n        }\r\n        return null\r\n    },\r\n    _startEditing: function(eventArgs, fastEditingKey) {\r\n        var focusedCellPosition = this._focusedCellPosition;\r\n        var visibleRowIndex = this.getVisibleRowIndex();\r\n        var visibleColumnIndex = this.getVisibleColumnIndex();\r\n        var row = this._dataController.items()[visibleRowIndex];\r\n        var column = this._columnsController.getVisibleColumns()[visibleColumnIndex];\r\n        if (this._isAllowEditing(row, column)) {\r\n            if (this._isRowEditMode()) {\r\n                this._editingController.editRow(visibleRowIndex)\r\n            } else {\r\n                if (focusedCellPosition) {\r\n                    this._startEditCell(eventArgs, fastEditingKey)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _isAllowEditing: function(row, column) {\r\n        return this._editingController.allowUpdating({\r\n            row: row\r\n        }) && column && column.allowEditing\r\n    },\r\n    _editFocusedCell: function() {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var colIndex = this.getVisibleColumnIndex();\r\n        return this._editingController.editCell(rowIndex, colIndex)\r\n    },\r\n    _startEditCell: function(eventArgs, fastEditingKey) {\r\n        var _this7 = this;\r\n        this._fastEditingStarted = (0, _type.isDefined)(fastEditingKey);\r\n        var editResult = this._editFocusedCell();\r\n        if (this._isFastEditingStarted()) {\r\n            if (true === editResult) {\r\n                this._editingCellHandler(eventArgs, fastEditingKey)\r\n            } else {\r\n                if (editResult && editResult.done) {\r\n                    var editorValue = fastEditingKey !== FAST_EDITING_DELETE_KEY ? fastEditingKey : \"\";\r\n                    editResult.done(function() {\r\n                        return _this7._editingCellHandler(eventArgs, editorValue)\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _editingCellHandler: function(eventArgs, editorValue) {\r\n        var $input = this._getFocusedCell().find(\".dx-texteditor-input\").eq(0);\r\n        var keyDownEvent = (0, _index.createEvent)(eventArgs, {\r\n            type: \"keydown\",\r\n            target: $input.get(0)\r\n        });\r\n        var keyPressEvent = (0, _index.createEvent)(eventArgs, {\r\n            type: \"keypress\",\r\n            target: $input.get(0)\r\n        });\r\n        var inputEvent = (0, _index.createEvent)(eventArgs, {\r\n            type: \"input\",\r\n            target: $input.get(0)\r\n        });\r\n        _events_engine.default.trigger($input, keyDownEvent);\r\n        if (!keyDownEvent.isDefaultPrevented()) {\r\n            _events_engine.default.trigger($input, keyPressEvent);\r\n            if (!keyPressEvent.isDefaultPrevented()) {\r\n                var timeout = _browser.default.mozilla ? 25 : 0;\r\n                setTimeout(function() {\r\n                    $input.val(editorValue);\r\n                    var $widgetContainer = $input.closest(\".\".concat(WIDGET_CLASS));\r\n                    _events_engine.default.off($widgetContainer, \"focusout\");\r\n                    _events_engine.default.one($widgetContainer, \"focusout\", function() {\r\n                        _events_engine.default.trigger($input, \"change\")\r\n                    });\r\n                    _events_engine.default.trigger($input, inputEvent)\r\n                }, timeout)\r\n            }\r\n        }\r\n    },\r\n    _fireFocusChangingEvents: function($event, $cell, fireRowEvent, isHighlighted) {\r\n        var args = {};\r\n        var cellPosition = this._getCellPosition($cell) || {};\r\n        if (this.isCellFocusType()) {\r\n            args = this._fireFocusedCellChanging($event, $cell, isHighlighted);\r\n            if (!args.cancel) {\r\n                cellPosition.columnIndex = args.newColumnIndex;\r\n                cellPosition.rowIndex = args.newRowIndex;\r\n                isHighlighted = args.isHighlighted;\r\n                $cell = (0, _renderer.default)(this._getCell(cellPosition))\r\n            }\r\n        }\r\n        if (!args.cancel && fireRowEvent && $cell) {\r\n            args = this._fireFocusedRowChanging($event, $cell.parent());\r\n            if (!args.cancel) {\r\n                cellPosition.rowIndex = args.newRowIndex;\r\n                args.isHighlighted = isHighlighted\r\n            }\r\n        }\r\n        args.$newCellElement = (0, _renderer.default)(this._getCell(cellPosition));\r\n        if (!args.$newCellElement.length) {\r\n            args.$newCellElement = $cell\r\n        }\r\n        return args\r\n    },\r\n    _fireFocusedCellChanging: function($event, $cellElement, isHighlighted) {\r\n        var that = this;\r\n        var prevCellIndex = that.option(\"focusedColumnIndex\");\r\n        var prevRowIndex = that.option(\"focusedRowIndex\");\r\n        var cellPosition = that._getCellPosition($cellElement);\r\n        var columnIndex = cellPosition ? cellPosition.columnIndex : -1;\r\n        var rowIndex = cellPosition ? cellPosition.rowIndex : -1;\r\n        var args = {\r\n            cellElement: $cellElement,\r\n            prevColumnIndex: prevCellIndex,\r\n            prevRowIndex: prevRowIndex,\r\n            newColumnIndex: columnIndex,\r\n            newRowIndex: rowIndex,\r\n            rows: that._dataController.getVisibleRows(),\r\n            columns: that._columnsController.getVisibleColumns(),\r\n            event: $event,\r\n            isHighlighted: isHighlighted || false,\r\n            cancel: false\r\n        };\r\n        this._canceledCellPosition = null;\r\n        that.executeAction(\"onFocusedCellChanging\", args);\r\n        if (args.newColumnIndex !== columnIndex || args.newRowIndex !== rowIndex) {\r\n            args.$newCellElement = (0, _renderer.default)(this._getCell({\r\n                columnIndex: args.newColumnIndex,\r\n                rowIndex: args.newRowIndex\r\n            }))\r\n        }\r\n        if (args.cancel) {\r\n            this._canceledCellPosition = {\r\n                rowIndex: rowIndex,\r\n                columnIndex: columnIndex\r\n            }\r\n        }\r\n        return args\r\n    },\r\n    _fireFocusedCellChanged: function($cellElement, prevCellIndex, prevRowIndex) {\r\n        var that = this;\r\n        var dataController = that._dataController;\r\n        var columnIndex = that.getView(\"rowsView\").getCellIndex($cellElement);\r\n        var rowIndex = this._getRowIndex($cellElement && $cellElement.parent());\r\n        var localRowIndex = Math.min(rowIndex - dataController.getRowIndexOffset(), dataController.items().length - 1);\r\n        var isEditingCell = that._editingController.isEditCell(localRowIndex, columnIndex);\r\n        var row = dataController.items()[localRowIndex];\r\n        if (!isEditingCell && (prevCellIndex !== columnIndex || prevRowIndex !== rowIndex)) {\r\n            that.executeAction(\"onFocusedCellChanged\", {\r\n                cellElement: $cellElement,\r\n                columnIndex: columnIndex,\r\n                rowIndex: rowIndex,\r\n                row: row,\r\n                column: that._columnsController.getVisibleColumns()[columnIndex]\r\n            })\r\n        }\r\n    },\r\n    _fireFocusedRowChanging: function(eventArgs, $newFocusedRow) {\r\n        var newRowIndex = this._getRowIndex($newFocusedRow);\r\n        var dataController = this._dataController;\r\n        var prevFocusedRowIndex = this.option(\"focusedRowIndex\");\r\n        var loadingOperationTypes = dataController.loadingOperationTypes();\r\n        var args = {\r\n            rowElement: $newFocusedRow,\r\n            prevRowIndex: prevFocusedRowIndex,\r\n            newRowIndex: newRowIndex,\r\n            event: eventArgs,\r\n            rows: dataController.getVisibleRows(),\r\n            cancel: false\r\n        };\r\n        if (!dataController || dataController.isLoading() && (loadingOperationTypes.reload || loadingOperationTypes.paging)) {\r\n            args.cancel = true;\r\n            return args\r\n        }\r\n        if (this.option(\"focusedRowEnabled\")) {\r\n            this.executeAction(\"onFocusedRowChanging\", args);\r\n            if (!args.cancel && args.newRowIndex !== newRowIndex) {\r\n                args.resetFocusedRow = args.newRowIndex < 0;\r\n                if (!args.resetFocusedRow) {\r\n                    this.setFocusedRowIndex(args.newRowIndex)\r\n                }\r\n                args.rowIndexChanged = true\r\n            }\r\n        }\r\n        return args\r\n    },\r\n    _fireFocusedRowChanged: function($rowElement) {\r\n        var row;\r\n        var focusedRowKey = this.option(\"focusedRowKey\");\r\n        var focusController = this.getController(\"focus\");\r\n        var focusedRowIndex = null === focusController || void 0 === focusController ? void 0 : focusController.getFocusedRowIndexByKey(focusedRowKey);\r\n        if (this.option(\"focusedRowEnabled\")) {\r\n            if (focusedRowIndex >= 0) {\r\n                var dataController = this._dataController;\r\n                row = focusedRowIndex >= 0 && dataController.getVisibleRows()[focusedRowIndex - dataController.getRowIndexOffset()]\r\n            }\r\n            this.executeAction(\"onFocusedRowChanged\", {\r\n                rowElement: $rowElement,\r\n                rowIndex: focusedRowIndex,\r\n                row: row\r\n            })\r\n        }\r\n    },\r\n    _isEventInCurrentGrid: function(event) {\r\n        return _uiGrid_core2.default.isElementInCurrentGrid(this, (0, _renderer.default)(event.target))\r\n    },\r\n    _isRowEditMode: function() {\r\n        var editMode = this._editingController.getEditMode();\r\n        return editMode === EDIT_MODE_ROW || editMode === EDIT_MODE_FORM\r\n    },\r\n    _isCellEditMode: function() {\r\n        var editMode = this._editingController.getEditMode();\r\n        return editMode === EDIT_MODE_CELL || editMode === EDIT_MODE_BATCH\r\n    },\r\n    _isFastEditingAllowed: function() {\r\n        return this._isCellEditMode() && this.option(\"keyboardNavigation.editOnKeyPress\")\r\n    },\r\n    _getInteractiveElement: function($cell, isLast) {\r\n        var $focusedElement = $cell.find(INTERACTIVE_ELEMENTS_SELECTOR).filter(\":visible\");\r\n        return isLast ? $focusedElement.last() : $focusedElement.first()\r\n    },\r\n    _applyTabIndexToElement: function($element) {\r\n        var tabIndex = this.option(\"tabIndex\") || 0;\r\n        $element.attr(\"tabindex\", (0, _type.isDefined)(tabIndex) ? tabIndex : 0)\r\n    },\r\n    _getCell: function(cellPosition) {\r\n        if (this._focusedView && cellPosition) {\r\n            var rowIndexOffset = this._dataController.getRowIndexOffset();\r\n            var column = this._columnsController.getVisibleColumns(null, true)[cellPosition.columnIndex];\r\n            var columnIndexOffset = column && column.fixed ? this._getFixedColumnIndexOffset(column) : this._columnsController.getColumnIndexOffset();\r\n            var rowIndex = cellPosition.rowIndex >= 0 ? cellPosition.rowIndex - rowIndexOffset : -1;\r\n            var columnIndex = cellPosition.columnIndex >= 0 ? cellPosition.columnIndex - columnIndexOffset : -1;\r\n            return this._focusedView.getCell({\r\n                rowIndex: rowIndex,\r\n                columnIndex: columnIndex\r\n            })\r\n        }\r\n    },\r\n    _getRowIndex: function($row) {\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var rowIndex = rowsView.getRowIndex($row);\r\n        if (rowIndex >= 0) {\r\n            rowIndex += this._dataController.getRowIndexOffset()\r\n        }\r\n        return rowIndex\r\n    },\r\n    _hasSkipRow: function($row) {\r\n        var row = $row && $row.get(0);\r\n        return row && (\"none\" === row.style.display || $row.hasClass(this.addWidgetPrefix(GROUP_FOOTER_CLASS)) || isDetailRow($row) && !$row.hasClass(this.addWidgetPrefix(EDIT_FORM_CLASS)))\r\n    },\r\n    _allowEditingOnEnterKey: function() {\r\n        return \"startEdit\" === this.option(\"keyboardNavigation.enterKeyAction\")\r\n    },\r\n    _isLegacyNavigation: function() {\r\n        return this.option(\"useLegacyKeyboardNavigation\")\r\n    },\r\n    _getDirectionCodeByKey: function(key) {\r\n        var directionCode;\r\n        switch (key) {\r\n            case \"upArrow\":\r\n                directionCode = \"prevRow\";\r\n                break;\r\n            case \"downArrow\":\r\n                directionCode = \"nextRow\";\r\n                break;\r\n            case \"leftArrow\":\r\n                directionCode = this.option(\"rtlEnabled\") ? \"nextInRow\" : \"previousInRow\";\r\n                break;\r\n            case \"rightArrow\":\r\n                directionCode = this.option(\"rtlEnabled\") ? \"previousInRow\" : \"nextInRow\"\r\n        }\r\n        return directionCode\r\n    },\r\n    _isVirtualScrolling: function() {\r\n        var scrollingMode = this.option(\"scrolling.mode\");\r\n        return \"virtual\" === scrollingMode || \"infinite\" === scrollingMode\r\n    },\r\n    _isVirtualRowRender: function() {\r\n        return this._isVirtualScrolling() || \"virtual\" === this.option(\"scrolling.rowRenderingMode\")\r\n    },\r\n    _isVirtualColumnRender: function() {\r\n        return \"virtual\" === this.option(\"scrolling.columnRenderingMode\")\r\n    },\r\n    _scrollBy: function(left, top, rowIndex, $event) {\r\n        var that = this;\r\n        var scrollable = this.getView(\"rowsView\").getScrollable();\r\n        if (that._focusedCellPosition) {\r\n            var scrollHandler = function scrollHandler() {\r\n                scrollable.off(\"scroll\", scrollHandler);\r\n                setTimeout(that.restoreFocusableElement.bind(that, rowIndex, $event))\r\n            };\r\n            scrollable.on(\"scroll\", scrollHandler)\r\n        }\r\n        return scrollable.scrollBy({\r\n            left: left,\r\n            top: top\r\n        })\r\n    },\r\n    _isInsideEditForm: function(element) {\r\n        return (0, _renderer.default)(element).closest(\".\" + this.addWidgetPrefix(EDIT_FORM_CLASS)).length > 0\r\n    },\r\n    _isMasterDetailCell: function(element) {\r\n        var $masterDetailCell = (0, _renderer.default)(element).closest(\".\" + MASTER_DETAIL_CELL_CLASS);\r\n        var $masterDetailGrid = $masterDetailCell.closest(\".\" + this.getWidgetContainerClass()).parent();\r\n        return $masterDetailCell.length && $masterDetailGrid.is(this.component.$element())\r\n    },\r\n    _processNextCellInMasterDetail: function($nextCell) {\r\n        if (!this._isInsideEditForm($nextCell) && $nextCell) {\r\n            this._applyTabIndexToElement($nextCell)\r\n        }\r\n    },\r\n    _handleTabKeyOnMasterDetailCell: function(target, direction) {\r\n        if (this._isMasterDetailCell(target)) {\r\n            this._updateFocusedCellPosition((0, _renderer.default)(target), direction);\r\n            var $nextCell = this._getNextCell(direction, \"row\");\r\n            this._processNextCellInMasterDetail($nextCell);\r\n            return true\r\n        }\r\n        return false\r\n    },\r\n    _getElementType: function(target) {\r\n        return (0, _renderer.default)(target).is(\"tr\") ? \"row\" : \"cell\"\r\n    },\r\n    _isFastEditingStarted: function() {\r\n        return this._isFastEditingAllowed() && this._fastEditingStarted\r\n    },\r\n    _getVisibleColumnCount: function() {\r\n        return this._columnsController.getVisibleColumns(null, true).length\r\n    },\r\n    _isCellInRow: function(cellPosition, includeCommandCells) {\r\n        var columnIndex = cellPosition.columnIndex;\r\n        var visibleColumnsCount = this._getVisibleColumnCount();\r\n        return includeCommandCells ? columnIndex >= 0 && columnIndex <= visibleColumnsCount - 1 : columnIndex > 0 && columnIndex < visibleColumnsCount - 1\r\n    },\r\n    _getCellElementFromTarget: function(target) {\r\n        var elementType = this._getElementType(target);\r\n        var $targetElement = (0, _renderer.default)(target);\r\n        var $cell;\r\n        if (\"cell\" === elementType) {\r\n            $cell = $targetElement.closest(\".\".concat(ROW_CLASS, \" > td\"))\r\n        } else {\r\n            $cell = $targetElement.children().not(\".\" + COMMAND_EXPAND_CLASS).first()\r\n        }\r\n        return $cell\r\n    },\r\n    _getRowsViewElement: function() {\r\n        var rowsView = this.getView(\"rowsView\");\r\n        return rowsView && rowsView.element()\r\n    },\r\n    isKeyboardEnabled: function() {\r\n        return this.option(\"keyboardNavigation.enabled\")\r\n    },\r\n    _processCanceledEditCellPosition: function(rowIndex, columnIndex) {\r\n        if (this._canceledCellPosition) {\r\n            var isCanceled = this._canceledCellPosition.rowIndex === rowIndex && this._canceledCellPosition.columnIndex === columnIndex;\r\n            this._canceledCellPosition = null;\r\n            return isCanceled\r\n        }\r\n    }\r\n});\r\nvar _default = {\r\n    defaultOptions: function() {\r\n        return {\r\n            useLegacyKeyboardNavigation: false,\r\n            keyboardNavigation: {\r\n                enabled: true,\r\n                enterKeyAction: \"startEdit\",\r\n                enterKeyDirection: \"none\",\r\n                editOnKeyPress: false\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        keyboardNavigation: KeyboardNavigationController\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: {\r\n                _rowClick: function(e) {\r\n                    var editRowIndex = this.getController(\"editing\").getEditRowIndex();\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    if (editRowIndex === e.rowIndex) {\r\n                        keyboardController.setCellFocusType()\r\n                    }\r\n                    var needTriggerPointerEventHandler = isMobile() && this.option(\"focusedRowEnabled\");\r\n                    if (needTriggerPointerEventHandler) {\r\n                        this._triggerPointerDownEventHandler(e)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _triggerPointerDownEventHandler: function(e) {\r\n                    var originalEvent = e.event.originalEvent;\r\n                    if (originalEvent) {\r\n                        var keyboardController = this.getController(\"keyboardNavigation\");\r\n                        var $cell = (0, _renderer.default)(originalEvent.target);\r\n                        var columnIndex = this.getCellIndex($cell);\r\n                        var column = this.getController(\"columns\").getVisibleColumns()[columnIndex];\r\n                        var row = this.getController(\"data\").items()[e.rowIndex];\r\n                        if (keyboardController._isAllowEditing(row, column)) {\r\n                            var eventArgs = (0, _index.createEvent)(originalEvent, {\r\n                                currentTarget: originalEvent.target\r\n                            });\r\n                            keyboardController._pointerEventHandler(eventArgs)\r\n                        }\r\n                    }\r\n                },\r\n                renderFocusState: function(preventScroll) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var $rowsViewElement = this.element();\r\n                    if ($rowsViewElement && !(0, _selectors.focused)($rowsViewElement)) {\r\n                        $rowsViewElement.attr(\"tabindex\", null)\r\n                    }\r\n                    var rowIndex = keyboardController.getVisibleRowIndex();\r\n                    if (!(0, _type.isDefined)(rowIndex) || rowIndex < 0) {\r\n                        rowIndex = 0\r\n                    }\r\n                    var cellElements = this.getCellElements(rowIndex);\r\n                    if (keyboardController.isKeyboardEnabled() && cellElements.length) {\r\n                        this.updateFocusElementTabIndex(cellElements, preventScroll)\r\n                    }\r\n                },\r\n                updateFocusElementTabIndex: function(cellElements) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var $row = cellElements.eq(0).parent();\r\n                    if (isGroupRow($row)) {\r\n                        keyboardController._applyTabIndexToElement($row)\r\n                    } else {\r\n                        var columnIndex = keyboardController.getColumnIndex();\r\n                        if (!(0, _type.isDefined)(columnIndex) || columnIndex < 0) {\r\n                            columnIndex = 0\r\n                        }\r\n                        this._updateFocusedCellTabIndex(cellElements, columnIndex)\r\n                    }\r\n                },\r\n                _updateFocusedCellTabIndex: function(cellElements, columnIndex) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var cellElementsLength = cellElements ? cellElements.length : -1;\r\n                    var updateCellTabIndex = function($cell) {\r\n                        var isMasterDetailCell = keyboardController._isMasterDetailCell($cell);\r\n                        var isValidCell = keyboardController._isCellValid($cell);\r\n                        if (!isMasterDetailCell && isValidCell && isCellElement($cell)) {\r\n                            keyboardController._applyTabIndexToElement($cell);\r\n                            keyboardController.setCellFocusType();\r\n                            return true\r\n                        }\r\n                    };\r\n                    var $cell = cellElements.filter(\"[aria-colindex='\".concat(columnIndex + 1, \"']\"));\r\n                    if ($cell.length) {\r\n                        updateCellTabIndex($cell)\r\n                    } else {\r\n                        if (cellElementsLength <= columnIndex) {\r\n                            columnIndex = cellElementsLength - 1\r\n                        }\r\n                        for (var i = columnIndex; i < cellElementsLength; ++i) {\r\n                            if (updateCellTabIndex((0, _renderer.default)(cellElements[i]))) {\r\n                                break\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                renderDelayedTemplates: function(change) {\r\n                    this.callBase.apply(this, arguments);\r\n                    this._renderFocusByChange(change)\r\n                },\r\n                _renderFocusByChange: function(change) {\r\n                    if (!change || !change.repaintChangesOnly) {\r\n                        var preventScroll = shouldPreventScroll(this);\r\n                        this.renderFocusState(preventScroll)\r\n                    }\r\n                },\r\n                _renderCore: function(change) {\r\n                    this.callBase.apply(this, arguments);\r\n                    this._renderFocusByChange(change)\r\n                },\r\n                _editCellPrepared: function($cell) {\r\n                    var editorInstance = this._getEditorInstance($cell);\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var isEditingNavigationMode = keyboardController && keyboardController._isFastEditingStarted();\r\n                    if (editorInstance && isEditingNavigationMode) {\r\n                        this._handleEditingNavigationMode(editorInstance)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _handleEditingNavigationMode: function(editorInstance) {\r\n                    [\"downArrow\", \"upArrow\"].forEach(function(keyName) {\r\n                        var originalKeyHandler = editorInstance._supportedKeys()[keyName];\r\n                        editorInstance.registerKeyHandler(keyName, function(e) {\r\n                            var isDropDownOpened = \"true\" === editorInstance._input().attr(\"aria-expanded\");\r\n                            if (isDropDownOpened) {\r\n                                return originalKeyHandler && originalKeyHandler.call(editorInstance, e)\r\n                            }\r\n                        })\r\n                    });\r\n                    editorInstance.registerKeyHandler(\"leftArrow\", _common.noop);\r\n                    editorInstance.registerKeyHandler(\"rightArrow\", _common.noop);\r\n                    var isDateBoxWithMask = editorInstance.NAME === DATEBOX_WIDGET_NAME && editorInstance.option(\"useMaskBehavior\");\r\n                    if (isDateBoxWithMask) {\r\n                        editorInstance.registerKeyHandler(\"enter\", _common.noop)\r\n                    }\r\n                },\r\n                _getEditorInstance: function($cell) {\r\n                    var $editor = $cell.find(\".dx-texteditor\").eq(0);\r\n                    return _uiGrid_core2.default.getWidgetInstance($editor)\r\n                }\r\n            }\r\n        },\r\n        controllers: {\r\n            editing: {\r\n                editCell: function(rowIndex, columnIndex) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    if (keyboardController._processCanceledEditCellPosition(rowIndex, columnIndex)) {\r\n                        return false\r\n                    }\r\n                    var isCellEditing = this.callBase(rowIndex, columnIndex);\r\n                    if (isCellEditing) {\r\n                        keyboardController.setupFocusedView()\r\n                    }\r\n                    return isCellEditing\r\n                },\r\n                editRow: function(rowIndex) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var visibleColumnIndex = keyboardController.getVisibleColumnIndex();\r\n                    var column = this._columnsController.getVisibleColumns()[visibleColumnIndex];\r\n                    if (column && column.type || this.option(\"editing.mode\") === EDIT_MODE_FORM) {\r\n                        keyboardController._resetFocusedCell()\r\n                    }\r\n                    this.callBase(rowIndex)\r\n                },\r\n                addRow: function(parentKey) {\r\n                    this.getController(\"keyboardNavigation\").setupFocusedView();\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                getFocusedCellInRow: function(rowIndex) {\r\n                    var keyboardNavigationController = this.getController(\"keyboardNavigation\");\r\n                    var $cell = this.callBase(rowIndex);\r\n                    if (keyboardNavigationController.isKeyboardEnabled() && keyboardNavigationController._focusedCellPosition.rowIndex === rowIndex) {\r\n                        var $focusedCell = keyboardNavigationController._getFocusedCell();\r\n                        if (isElementDefined($focusedCell) && !$focusedCell.hasClass(COMMAND_EDIT_CLASS)) {\r\n                            $cell = $focusedCell\r\n                        }\r\n                    }\r\n                    return $cell\r\n                },\r\n                _processCanceledEditingCell: function() {\r\n                    var _this8 = this;\r\n                    this.closeEditCell().done(function() {\r\n                        var keyboardNavigation = _this8.getController(\"keyboardNavigation\");\r\n                        keyboardNavigation._updateFocus()\r\n                    })\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._keyboardNavigationController = this.getController(\"keyboardNavigation\")\r\n                },\r\n                closeEditCell: function() {\r\n                    var keyboardNavigation = this.getController(\"keyboardNavigation\");\r\n                    keyboardNavigation._fastEditingStarted = false;\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    keyboardNavigation._updateFocus();\r\n                    return result\r\n                },\r\n                _delayedInputFocus: function() {\r\n                    this._keyboardNavigationController._isNeedScroll = true;\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _isEditingStart: function() {\r\n                    var keyboardNavigation = this.getController(\"keyboardNavigation\");\r\n                    var cancel = this.callBase.apply(this, arguments);\r\n                    if (cancel && !keyboardNavigation._isNeedFocus) {\r\n                        var $cell = keyboardNavigation._getFocusedCell();\r\n                        keyboardNavigation._focus($cell, true)\r\n                    }\r\n                    return cancel\r\n                }\r\n            },\r\n            data: {\r\n                _correctRowIndices: function(getRowIndexCorrection) {\r\n                    var that = this;\r\n                    var keyboardNavigationController = that.getController(\"keyboardNavigation\");\r\n                    var editorFactory = that.getController(\"editorFactory\");\r\n                    var focusedCellPosition = keyboardNavigationController._focusedCellPosition;\r\n                    that.callBase.apply(that, arguments);\r\n                    if (focusedCellPosition && focusedCellPosition.rowIndex >= 0) {\r\n                        var focusedRowIndexCorrection = getRowIndexCorrection(focusedCellPosition.rowIndex);\r\n                        if (focusedRowIndexCorrection) {\r\n                            focusedCellPosition.rowIndex += focusedRowIndexCorrection;\r\n                            editorFactory.refocus()\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            adaptiveColumns: {\r\n                _showHiddenCellsInView: function(_ref) {\r\n                    var viewName = _ref.viewName,\r\n                        $cells = _ref.$cells,\r\n                        isCommandColumn = _ref.isCommandColumn;\r\n                    this.callBase.apply(this, arguments);\r\n                    viewName === COLUMN_HEADERS_VIEW && !isCommandColumn && $cells.each(function(_, cellElement) {\r\n                        var $cell = (0, _renderer.default)(cellElement);\r\n                        isCellInHeaderRow($cell) && $cell.attr(\"tabindex\", 0)\r\n                    })\r\n                },\r\n                _hideVisibleCellInView: function(_ref2) {\r\n                    var viewName = _ref2.viewName,\r\n                        $cell = _ref2.$cell,\r\n                        isCommandColumn = _ref2.isCommandColumn;\r\n                    this.callBase.apply(this, arguments);\r\n                    if (viewName === COLUMN_HEADERS_VIEW && !isCommandColumn && isCellInHeaderRow($cell)) {\r\n                        $cell.removeAttr(\"tabindex\")\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}