{"ast":null,"code":"/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.filter_row.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\n\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _index = require(\"../../events/utils/index\");\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _uiGrid_core = _interopRequireDefault(require(\"./ui.grid_core.modules\"));\n\nvar _uiGrid_core2 = _interopRequireDefault(require(\"./ui.grid_core.utils\"));\n\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\n\nvar _editor = _interopRequireDefault(require(\"../editor/editor\"));\n\nvar _overlay = _interopRequireDefault(require(\"../overlay\"));\n\nvar _menu = _interopRequireDefault(require(\"../menu\"));\n\nvar _accessibility = require(\"../shared/accessibility\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar OPERATION_ICONS = {\n  \"=\": \"filter-operation-equals\",\n  \"<>\": \"filter-operation-not-equals\",\n  \"<\": \"filter-operation-less\",\n  \"<=\": \"filter-operation-less-equal\",\n  \">\": \"filter-operation-greater\",\n  \">=\": \"filter-operation-greater-equal\",\n  \"default\": \"filter-operation-default\",\n  notcontains: \"filter-operation-not-contains\",\n  contains: \"filter-operation-contains\",\n  startswith: \"filter-operation-starts-with\",\n  endswith: \"filter-operation-ends-with\",\n  between: \"filter-operation-between\"\n};\nvar OPERATION_DESCRIPTORS = {\n  \"=\": \"equal\",\n  \"<>\": \"notEqual\",\n  \"<\": \"lessThan\",\n  \"<=\": \"lessThanOrEqual\",\n  \">\": \"greaterThan\",\n  \">=\": \"greaterThanOrEqual\",\n  startswith: \"startsWith\",\n  contains: \"contains\",\n  notcontains: \"notContains\",\n  endswith: \"endsWith\",\n  between: \"between\"\n};\nvar FILTERING_TIMEOUT = 700;\nvar CORRECT_FILTER_RANGE_OVERLAY_WIDTH = 1;\nvar FILTER_ROW_CLASS = \"filter-row\";\nvar FILTER_RANGE_OVERLAY_CLASS = \"filter-range-overlay\";\nvar FILTER_RANGE_START_CLASS = \"filter-range-start\";\nvar FILTER_RANGE_END_CLASS = \"filter-range-end\";\nvar MENU_CLASS = \"dx-menu\";\nvar EDITOR_WITH_MENU_CLASS = \"dx-editor-with-menu\";\nvar EDITOR_CONTAINER_CLASS = \"dx-editor-container\";\nvar EDITOR_CELL_CLASS = \"dx-editor-cell\";\nvar FILTER_MENU = \"dx-filter-menu\";\nvar APPLY_BUTTON_CLASS = \"dx-apply-button\";\nvar HIGHLIGHT_OUTLINE_CLASS = \"dx-highlight-outline\";\nvar FOCUSED_CLASS = \"dx-focused\";\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\nvar FILTER_RANGE_CONTENT_CLASS = \"dx-filter-range-content\";\nvar FILTER_MODIFIED_CLASS = \"dx-filter-modified\";\nvar EDITORS_INPUT_SELECTOR = \"input:not([type='hidden'])\";\nvar BETWEEN_OPERATION_DATA_TYPES = [\"date\", \"datetime\", \"number\"];\n\nfunction isOnClickApplyFilterMode(that) {\n  return \"onClick\" === that.option(\"filterRow.applyFilter\");\n}\n\nvar ColumnHeadersViewFilterRowExtender = function () {\n  var getEditorInstance = function ($editorContainer) {\n    var $editor = $editorContainer && $editorContainer.children();\n    var componentNames = $editor && $editor.data(\"dxComponents\");\n    var editor = componentNames && componentNames.length && $editor.data(componentNames[0]);\n\n    if (editor instanceof _editor.default) {\n      return editor;\n    }\n  };\n\n  var getRangeTextByFilterValue = function (that, column) {\n    var result = \"\";\n    var rangeEnd = \"\";\n    var filterValue = getColumnFilterValue(that, column);\n\n    var formatOptions = _uiGrid_core2.default.getFormatOptionsByColumn(column, \"filterRow\");\n\n    if (Array.isArray(filterValue)) {\n      result = _uiGrid_core2.default.formatValue(filterValue[0], formatOptions);\n      rangeEnd = _uiGrid_core2.default.formatValue(filterValue[1], formatOptions);\n\n      if (\"\" !== rangeEnd) {\n        result += \" - \" + rangeEnd;\n      }\n    } else {\n      if ((0, _type.isDefined)(filterValue)) {\n        result = _uiGrid_core2.default.formatValue(filterValue, formatOptions);\n      }\n    }\n\n    return result;\n  };\n\n  function getColumnFilterValue(that, column) {\n    if (column) {\n      return isOnClickApplyFilterMode(that) && void 0 !== column.bufferedFilterValue ? column.bufferedFilterValue : column.filterValue;\n    }\n  }\n\n  var getColumnSelectedFilterOperation = function (that, column) {\n    if (column) {\n      return isOnClickApplyFilterMode(that) && void 0 !== column.bufferedSelectedFilterOperation ? column.bufferedSelectedFilterOperation : column.selectedFilterOperation;\n    }\n  };\n\n  var isValidFilterValue = function (filterValue, column) {\n    if (column && BETWEEN_OPERATION_DATA_TYPES.indexOf(column.dataType) >= 0 && Array.isArray(filterValue)) {\n      return false;\n    }\n\n    return void 0 !== filterValue;\n  };\n\n  var getFilterValue = function (that, columnIndex, $editorContainer) {\n    var column = that._columnsController.columnOption(columnIndex);\n\n    var filterValue = getColumnFilterValue(that, column);\n    var isFilterRange = $editorContainer.closest(\".\" + that.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS)).length;\n    var isRangeStart = $editorContainer.hasClass(that.addWidgetPrefix(FILTER_RANGE_START_CLASS));\n\n    if (filterValue && Array.isArray(filterValue) && \"between\" === getColumnSelectedFilterOperation(that, column)) {\n      if (isRangeStart) {\n        return filterValue[0];\n      } else {\n        return filterValue[1];\n      }\n    }\n\n    return !isFilterRange && isValidFilterValue(filterValue, column) ? filterValue : null;\n  };\n\n  var normalizeFilterValue = function (that, filterValue, column, $editorContainer) {\n    if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\n      var columnFilterValue = getColumnFilterValue(that, column);\n\n      if ($editorContainer.hasClass(that.addWidgetPrefix(FILTER_RANGE_START_CLASS))) {\n        return [filterValue, Array.isArray(columnFilterValue) ? columnFilterValue[1] : void 0];\n      } else {\n        return [Array.isArray(columnFilterValue) ? columnFilterValue[0] : columnFilterValue, filterValue];\n      }\n    }\n\n    return filterValue;\n  };\n\n  var updateFilterValue = function (that, options) {\n    var value = \"\" === options.value ? null : options.value;\n    var $editorContainer = options.container;\n\n    var column = that._columnsController.columnOption(options.column.index);\n\n    var filterValue = getFilterValue(that, column.index, $editorContainer);\n\n    if (!(0, _type.isDefined)(filterValue) && !(0, _type.isDefined)(value)) {\n      return;\n    }\n\n    that._applyFilterViewController.setHighLight($editorContainer, filterValue !== value);\n\n    that._columnsController.columnOption(column.index, isOnClickApplyFilterMode(that) ? \"bufferedFilterValue\" : \"filterValue\", normalizeFilterValue(that, value, column, $editorContainer), options.notFireEvent);\n  };\n\n  return {\n    _updateEditorValue: function (column, $editorContainer) {\n      var that = this;\n      var editor = getEditorInstance($editorContainer);\n      editor && editor.option(\"value\", getFilterValue(that, column.index, $editorContainer));\n    },\n    _columnOptionChanged: function (e) {\n      var that = this;\n      var optionNames = e.optionNames;\n      var $cell;\n      var $editorContainer;\n      var $editorRangeElements;\n      var $menu;\n\n      if (_uiGrid_core2.default.checkChanges(optionNames, [\"filterValue\", \"bufferedFilterValue\", \"selectedFilterOperation\", \"bufferedSelectedFilterOperation\"]) && void 0 !== e.columnIndex) {\n        var visibleIndex = that._columnsController.getVisibleIndex(e.columnIndex);\n\n        var column = that._columnsController.columnOption(e.columnIndex);\n\n        $cell = that._getCellElement(that.element().find(\".\" + that.addWidgetPrefix(FILTER_ROW_CLASS)).index(), visibleIndex) || (0, _renderer.default)();\n        $editorContainer = $cell.find(\".\" + EDITOR_CONTAINER_CLASS).first();\n\n        if (optionNames.filterValue || optionNames.bufferedFilterValue) {\n          that._updateEditorValue(column, $editorContainer);\n\n          var overlayInstance = $cell.find(\".\" + that.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS)).data(\"dxOverlay\");\n\n          if (overlayInstance) {\n            $editorRangeElements = overlayInstance.$content().find(\".\" + EDITOR_CONTAINER_CLASS);\n\n            that._updateEditorValue(column, $editorRangeElements.first());\n\n            that._updateEditorValue(column, $editorRangeElements.last());\n          }\n\n          if (!overlayInstance || !overlayInstance.option(\"visible\")) {\n            that._updateFilterRangeContent($cell, getRangeTextByFilterValue(that, column));\n          }\n        }\n\n        if (optionNames.selectedFilterOperation || optionNames.bufferedSelectedFilterOperation) {\n          if (visibleIndex >= 0 && column) {\n            $menu = $cell.find(\".\" + MENU_CLASS);\n\n            if ($menu.length) {\n              that._updateFilterOperationChooser($menu, column, $editorContainer);\n\n              if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\n                that._renderFilterRangeContent($cell, column);\n              } else {\n                if ($editorContainer.find(\".\" + FILTER_RANGE_CONTENT_CLASS).length) {\n                  that._renderEditor($editorContainer, that._getEditorOptions($editorContainer, column));\n\n                  that._hideFilterRange();\n                }\n              }\n            }\n          }\n        }\n\n        return;\n      }\n\n      that.callBase(e);\n    },\n    _renderCore: function () {\n      this._filterRangeOverlayInstance = null;\n      this.callBase.apply(this, arguments);\n    },\n    _resizeCore: function () {\n      this.callBase.apply(this, arguments);\n      this._filterRangeOverlayInstance && this._filterRangeOverlayInstance.repaint();\n    },\n    isFilterRowVisible: function () {\n      return this._isElementVisible(this.option(\"filterRow\"));\n    },\n    isVisible: function () {\n      return this.callBase() || this.isFilterRowVisible();\n    },\n    init: function () {\n      this.callBase();\n      this._applyFilterViewController = this.getController(\"applyFilter\");\n    },\n    _initFilterRangeOverlay: function ($cell, column) {\n      var that = this;\n      var sharedData = {};\n      var $editorContainer = $cell.find(\".dx-editor-container\");\n      var $overlay = (0, _renderer.default)(\"<div>\").addClass(that.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS)).appendTo($cell);\n      return that._createComponent($overlay, _overlay.default, {\n        height: \"auto\",\n        shading: false,\n        showTitle: false,\n        focusStateEnabled: false,\n        closeOnTargetScroll: false,\n        closeOnOutsideClick: true,\n        animation: false,\n        position: {\n          my: \"top\",\n          at: \"top\",\n          of: $editorContainer.length && $editorContainer || $cell,\n          offset: \"0 -1\"\n        },\n        contentTemplate: function (contentElement) {\n          var editorOptions;\n          var $editor = (0, _renderer.default)(\"<div>\").addClass(EDITOR_CONTAINER_CLASS + \" \" + that.addWidgetPrefix(FILTER_RANGE_START_CLASS)).appendTo(contentElement);\n          column = that._columnsController.columnOption(column.index);\n          editorOptions = that._getEditorOptions($editor, column);\n          editorOptions.sharedData = sharedData;\n\n          that._renderEditor($editor, editorOptions);\n\n          _events_engine.default.on($editor.find(EDITORS_INPUT_SELECTOR), \"keydown\", function (e) {\n            var $prevElement = $cell.find(\"[tabindex]\").not(e.target).first();\n\n            if (\"tab\" === (0, _index.normalizeKeyName)(e) && e.shiftKey) {\n              e.preventDefault();\n\n              that._hideFilterRange();\n\n              if (!$prevElement.length) {\n                $prevElement = $cell.prev().find(\"[tabindex]\").last();\n              }\n\n              _events_engine.default.trigger($prevElement, \"focus\");\n            }\n          });\n\n          $editor = (0, _renderer.default)(\"<div>\").addClass(EDITOR_CONTAINER_CLASS + \" \" + that.addWidgetPrefix(FILTER_RANGE_END_CLASS)).appendTo(contentElement);\n          editorOptions = that._getEditorOptions($editor, column);\n          editorOptions.sharedData = sharedData;\n\n          that._renderEditor($editor, editorOptions);\n\n          _events_engine.default.on($editor.find(EDITORS_INPUT_SELECTOR), \"keydown\", function (e) {\n            if (\"tab\" === (0, _index.normalizeKeyName)(e) && !e.shiftKey) {\n              e.preventDefault();\n\n              that._hideFilterRange();\n\n              _events_engine.default.trigger($cell.next().find(\"[tabindex]\").first(), \"focus\");\n            }\n          });\n\n          return (0, _renderer.default)(contentElement).addClass(that.getWidgetContainerClass());\n        },\n        onShown: function (e) {\n          var $editor = e.component.$content().find(\".\" + EDITOR_CONTAINER_CLASS).first();\n\n          _events_engine.default.trigger($editor.find(EDITORS_INPUT_SELECTOR), \"focus\");\n        },\n        onHidden: function () {\n          column = that._columnsController.columnOption(column.index);\n          $cell.find(\".\" + MENU_CLASS).parent().addClass(EDITOR_WITH_MENU_CLASS);\n\n          if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\n            that._updateFilterRangeContent($cell, getRangeTextByFilterValue(that, column));\n\n            that.component.updateDimensions();\n          }\n        }\n      });\n    },\n    _updateFilterRangeOverlay: function (options) {\n      var overlayInstance = this._filterRangeOverlayInstance;\n      overlayInstance && overlayInstance.option(options);\n    },\n    _showFilterRange: function ($cell, column) {\n      var that = this;\n      var $overlay = $cell.children(\".\" + that.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS));\n      var overlayInstance = $overlay.length && $overlay.data(\"dxOverlay\");\n\n      if (!overlayInstance && column) {\n        overlayInstance = that._initFilterRangeOverlay($cell, column);\n      }\n\n      if (!overlayInstance.option(\"visible\")) {\n        that._filterRangeOverlayInstance && that._filterRangeOverlayInstance.hide();\n        that._filterRangeOverlayInstance = overlayInstance;\n\n        that._updateFilterRangeOverlay({\n          width: $cell.outerWidth(true) + CORRECT_FILTER_RANGE_OVERLAY_WIDTH\n        });\n\n        that._filterRangeOverlayInstance && that._filterRangeOverlayInstance.show();\n      }\n    },\n    _hideFilterRange: function () {\n      var overlayInstance = this._filterRangeOverlayInstance;\n      overlayInstance && overlayInstance.hide();\n    },\n    getFilterRangeOverlayInstance: function () {\n      return this._filterRangeOverlayInstance;\n    },\n    _createRow: function (row) {\n      var _this = this;\n\n      var $row = this.callBase(row);\n\n      if (\"filter\" === row.rowType) {\n        $row.addClass(this.addWidgetPrefix(FILTER_ROW_CLASS));\n\n        if (!this.option(\"useLegacyKeyboardNavigation\")) {\n          _events_engine.default.on($row, \"keydown\", function (event) {\n            return (0, _accessibility.selectView)(\"filterRow\", _this, event);\n          });\n        }\n      }\n\n      return $row;\n    },\n    _getRows: function () {\n      var result = this.callBase();\n\n      if (this.isFilterRowVisible()) {\n        result.push({\n          rowType: \"filter\"\n        });\n      }\n\n      return result;\n    },\n    _renderFilterCell: function (cell, options) {\n      var that = this;\n      var column = options.column;\n      var $cell = (0, _renderer.default)(cell);\n\n      if (that.component.option(\"showColumnHeaders\")) {\n        that.setAria(\"describedby\", column.headerId, $cell);\n      }\n\n      that.setAria(\"label\", _message.default.format(\"dxDataGrid-ariaFilterCell\"), $cell);\n      $cell.addClass(EDITOR_CELL_CLASS);\n      var $container = (0, _renderer.default)(\"<div>\").appendTo($cell);\n      var $editorContainer = (0, _renderer.default)(\"<div>\").addClass(EDITOR_CONTAINER_CLASS).appendTo($container);\n\n      if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\n        that._renderFilterRangeContent($cell, column);\n      } else {\n        var editorOptions = that._getEditorOptions($editorContainer, column);\n\n        that._renderEditor($editorContainer, editorOptions);\n      }\n\n      var alignment = column.alignment;\n\n      if (alignment && \"center\" !== alignment) {\n        $cell.find(EDITORS_INPUT_SELECTOR).first().css(\"textAlign\", column.alignment);\n      }\n\n      if (column.filterOperations && column.filterOperations.length) {\n        that._renderFilterOperationChooser($container, column, $editorContainer);\n      }\n    },\n    _renderCellContent: function ($cell, options) {\n      var that = this;\n      var column = options.column;\n\n      if (\"filter\" === options.rowType) {\n        if (column.command) {\n          $cell.html(\"&nbsp;\");\n        } else {\n          if (column.allowFiltering) {\n            that.renderTemplate($cell, that._renderFilterCell.bind(that), options).done(function () {\n              that._updateCell($cell, options);\n            });\n            return;\n          }\n        }\n      }\n\n      that.callBase($cell, options);\n    },\n    _getEditorOptions: function ($editorContainer, column) {\n      var that = this;\n      var accessibilityOptions = {\n        editorOptions: {\n          inputAttr: that._getFilterInputAccessibilityAttributes(column)\n        }\n      };\n      var result = (0, _extend.extend)(accessibilityOptions, column, {\n        value: getFilterValue(that, column.index, $editorContainer),\n        parentType: \"filterRow\",\n        showAllText: that.option(\"filterRow.showAllText\"),\n        updateValueTimeout: \"onClick\" === that.option(\"filterRow.applyFilter\") ? 0 : FILTERING_TIMEOUT,\n        width: null,\n        setValue: function (value, notFireEvent) {\n          updateFilterValue(that, {\n            column: column,\n            value: value,\n            container: $editorContainer,\n            notFireEvent: notFireEvent\n          });\n        }\n      });\n\n      if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\n        if ($editorContainer.hasClass(that.addWidgetPrefix(FILTER_RANGE_START_CLASS))) {\n          result.placeholder = that.option(\"filterRow.betweenStartText\");\n        } else {\n          result.placeholder = that.option(\"filterRow.betweenEndText\");\n        }\n      }\n\n      return result;\n    },\n    _getFilterInputAccessibilityAttributes: function (column) {\n      var columnAriaLabel = _message.default.format(\"dxDataGrid-ariaFilterCell\");\n\n      if (this.component.option(\"showColumnHeaders\")) {\n        return {\n          \"aria-label\": columnAriaLabel,\n          \"aria-describedby\": column.headerId\n        };\n      }\n\n      return {\n        \"aria-label\": columnAriaLabel\n      };\n    },\n    _renderEditor: function ($editorContainer, options) {\n      $editorContainer.empty();\n      return this.getController(\"editorFactory\").createEditor((0, _renderer.default)(\"<div>\").appendTo($editorContainer), options);\n    },\n    _renderFilterRangeContent: function ($cell, column) {\n      var that = this;\n      var $editorContainer = $cell.find(\".\" + EDITOR_CONTAINER_CLASS).first();\n      $editorContainer.empty();\n      var $filterRangeContent = (0, _renderer.default)(\"<div>\").addClass(FILTER_RANGE_CONTENT_CLASS).attr(\"tabindex\", this.option(\"tabIndex\"));\n\n      _events_engine.default.on($filterRangeContent, \"focusin\", function () {\n        that._showFilterRange($cell, column);\n      });\n\n      $filterRangeContent.appendTo($editorContainer);\n\n      that._updateFilterRangeContent($cell, getRangeTextByFilterValue(that, column));\n    },\n    _updateFilterRangeContent: function ($cell, value) {\n      var $filterRangeContent = $cell.find(\".\" + FILTER_RANGE_CONTENT_CLASS);\n\n      if ($filterRangeContent.length) {\n        if (\"\" === value) {\n          $filterRangeContent.html(\"&nbsp;\");\n        } else {\n          $filterRangeContent.text(value);\n        }\n      }\n    },\n    _updateFilterOperationChooser: function ($menu, column, $editorContainer) {\n      var that = this;\n      var isCellWasFocused;\n\n      var restoreFocus = function () {\n        var menu = _menu.default.getInstance($menu);\n\n        menu && menu.option(\"focusedElement\", null);\n        isCellWasFocused && that._focusEditor($editorContainer);\n      };\n\n      that._createComponent($menu, _menu.default, {\n        integrationOptions: {},\n        activeStateEnabled: false,\n        selectionMode: \"single\",\n        cssClass: that.getWidgetContainerClass() + \" \" + CELL_FOCUS_DISABLED_CLASS + \" \" + FILTER_MENU,\n        showFirstSubmenuMode: \"onHover\",\n        hideSubmenuOnMouseLeave: true,\n        items: [{\n          disabled: column.filterOperations && column.filterOperations.length ? false : true,\n          icon: OPERATION_ICONS[getColumnSelectedFilterOperation(that, column) || \"default\"],\n          selectable: false,\n          items: that._getFilterOperationMenuItems(column)\n        }],\n        onItemClick: function (properties) {\n          var selectedFilterOperation = properties.itemData.name;\n          var columnSelectedFilterOperation = getColumnSelectedFilterOperation(that, column);\n          var notFocusEditor = false;\n          var isOnClickMode = isOnClickApplyFilterMode(that);\n          var options = {};\n\n          if (properties.itemData.items || selectedFilterOperation && selectedFilterOperation === columnSelectedFilterOperation) {\n            return;\n          }\n\n          if (selectedFilterOperation) {\n            options[isOnClickMode ? \"bufferedSelectedFilterOperation\" : \"selectedFilterOperation\"] = selectedFilterOperation;\n\n            if (\"between\" === selectedFilterOperation || \"between\" === columnSelectedFilterOperation) {\n              notFocusEditor = \"between\" === selectedFilterOperation;\n              options[isOnClickMode ? \"bufferedFilterValue\" : \"filterValue\"] = null;\n            }\n          } else {\n            options[isOnClickMode ? \"bufferedFilterValue\" : \"filterValue\"] = null;\n            options[isOnClickMode ? \"bufferedSelectedFilterOperation\" : \"selectedFilterOperation\"] = column.defaultSelectedFilterOperation || null;\n          }\n\n          that._columnsController.columnOption(column.index, options);\n\n          that._applyFilterViewController.setHighLight($editorContainer, true);\n\n          if (!selectedFilterOperation) {\n            var editor = getEditorInstance($editorContainer);\n\n            if (editor && \"dxDateBox\" === editor.NAME && !editor.option(\"isValid\")) {\n              editor.reset();\n              editor.option(\"isValid\", true);\n            }\n          }\n\n          if (!notFocusEditor) {\n            that._focusEditor($editorContainer);\n          } else {\n            that._showFilterRange($editorContainer.closest(\".\" + EDITOR_CELL_CLASS), column);\n          }\n        },\n        onSubmenuShown: function () {\n          isCellWasFocused = that._isEditorFocused($editorContainer);\n          that.getController(\"editorFactory\").loseFocus();\n        },\n        onSubmenuHiding: function () {\n          _events_engine.default.trigger($menu, \"blur\");\n\n          restoreFocus();\n        },\n        onContentReady: function (e) {\n          _events_engine.default.on($menu, \"blur\", function () {\n            var menu = e.component;\n\n            menu._hideSubmenu(menu._visibleSubmenu);\n\n            restoreFocus();\n          });\n        },\n        rtlEnabled: that.option(\"rtlEnabled\")\n      });\n    },\n    _isEditorFocused: function ($container) {\n      return $container.hasClass(FOCUSED_CLASS) || $container.parents(\".\" + FOCUSED_CLASS).length;\n    },\n    _focusEditor: function ($container) {\n      this.getController(\"editorFactory\").focus($container);\n\n      _events_engine.default.trigger($container.find(EDITORS_INPUT_SELECTOR), \"focus\");\n    },\n    _renderFilterOperationChooser: function ($container, column, $editorContainer) {\n      var that = this;\n      var $menu;\n\n      if (that.option(\"filterRow.showOperationChooser\")) {\n        $container.addClass(EDITOR_WITH_MENU_CLASS);\n        $menu = (0, _renderer.default)(\"<div>\").prependTo($container);\n\n        that._updateFilterOperationChooser($menu, column, $editorContainer);\n      }\n    },\n    _getFilterOperationMenuItems: function (column) {\n      var that = this;\n      var result = [{}];\n      var filterRowOptions = that.option(\"filterRow\");\n      var operationDescriptions = filterRowOptions && filterRowOptions.operationDescriptions || {};\n\n      if (column.filterOperations && column.filterOperations.length) {\n        var availableFilterOperations = column.filterOperations.filter(function (value) {\n          return (0, _type.isDefined)(OPERATION_DESCRIPTORS[value]);\n        });\n        result = (0, _iterator.map)(availableFilterOperations, function (value) {\n          var descriptionName = OPERATION_DESCRIPTORS[value];\n          return {\n            name: value,\n            selected: (getColumnSelectedFilterOperation(that, column) || column.defaultFilterOperation) === value,\n            text: operationDescriptions[descriptionName],\n            icon: OPERATION_ICONS[value]\n          };\n        });\n        result.push({\n          name: null,\n          text: filterRowOptions && filterRowOptions.resetOperationText,\n          icon: OPERATION_ICONS.default\n        });\n      }\n\n      return result;\n    },\n    optionChanged: function (args) {\n      var that = this;\n\n      switch (args.name) {\n        case \"filterRow\":\n        case \"showColumnLines\":\n          this._invalidate(true, true);\n\n          args.handled = true;\n          break;\n\n        default:\n          that.callBase(args);\n      }\n    }\n  };\n}();\n\nvar DataControllerFilterRowExtender = {\n  skipCalculateColumnFilters: function () {\n    return false;\n  },\n  _calculateAdditionalFilter: function () {\n    if (this.skipCalculateColumnFilters()) {\n      return this.callBase();\n    }\n\n    var filters = [this.callBase()];\n\n    var columns = this._columnsController.getVisibleColumns(null, true);\n\n    (0, _iterator.each)(columns, function () {\n      if (this.allowFiltering && this.calculateFilterExpression && (0, _type.isDefined)(this.filterValue)) {\n        var filter = this.createFilterExpression(this.filterValue, this.selectedFilterOperation || this.defaultFilterOperation, \"filterRow\");\n        filters.push(filter);\n      }\n    });\n    return _uiGrid_core2.default.combineFilters(filters);\n  }\n};\n\nvar ApplyFilterViewController = _uiGrid_core.default.ViewController.inherit({\n  _getHeaderPanel: function () {\n    if (!this._headerPanel) {\n      this._headerPanel = this.getView(\"headerPanel\");\n    }\n\n    return this._headerPanel;\n  },\n  setHighLight: function ($element, value) {\n    if (isOnClickApplyFilterMode(this)) {\n      $element && $element.toggleClass(HIGHLIGHT_OUTLINE_CLASS, value) && $element.closest(\".\" + EDITOR_CELL_CLASS).toggleClass(FILTER_MODIFIED_CLASS, value);\n\n      this._getHeaderPanel().enableApplyButton(value);\n    }\n  },\n  applyFilter: function () {\n    var columnsController = this.getController(\"columns\");\n    var columns = columnsController.getColumns();\n    columnsController.beginUpdate();\n\n    for (var i = 0; i < columns.length; i++) {\n      var column = columns[i];\n\n      if (void 0 !== column.bufferedFilterValue) {\n        columnsController.columnOption(i, \"filterValue\", column.bufferedFilterValue);\n        column.bufferedFilterValue = void 0;\n      }\n\n      if (void 0 !== column.bufferedSelectedFilterOperation) {\n        columnsController.columnOption(i, \"selectedFilterOperation\", column.bufferedSelectedFilterOperation);\n        column.bufferedSelectedFilterOperation = void 0;\n      }\n    }\n\n    columnsController.endUpdate();\n    this.removeHighLights();\n  },\n  removeHighLights: function () {\n    if (isOnClickApplyFilterMode(this)) {\n      var columnHeadersViewElement = this.getView(\"columnHeadersView\").element();\n      columnHeadersViewElement.find(\".\" + this.addWidgetPrefix(FILTER_ROW_CLASS) + \" .\" + HIGHLIGHT_OUTLINE_CLASS).removeClass(HIGHLIGHT_OUTLINE_CLASS);\n      columnHeadersViewElement.find(\".\" + this.addWidgetPrefix(FILTER_ROW_CLASS) + \" .\" + FILTER_MODIFIED_CLASS).removeClass(FILTER_MODIFIED_CLASS);\n\n      this._getHeaderPanel().enableApplyButton(false);\n    }\n  }\n});\n\nvar _default = {\n  defaultOptions: function () {\n    return {\n      filterRow: {\n        visible: false,\n        showOperationChooser: true,\n        showAllText: _message.default.format(\"dxDataGrid-filterRowShowAllText\"),\n        resetOperationText: _message.default.format(\"dxDataGrid-filterRowResetOperationText\"),\n        applyFilter: \"auto\",\n        applyFilterText: _message.default.format(\"dxDataGrid-applyFilterText\"),\n        operationDescriptions: {\n          equal: _message.default.format(\"dxDataGrid-filterRowOperationEquals\"),\n          notEqual: _message.default.format(\"dxDataGrid-filterRowOperationNotEquals\"),\n          lessThan: _message.default.format(\"dxDataGrid-filterRowOperationLess\"),\n          lessThanOrEqual: _message.default.format(\"dxDataGrid-filterRowOperationLessOrEquals\"),\n          greaterThan: _message.default.format(\"dxDataGrid-filterRowOperationGreater\"),\n          greaterThanOrEqual: _message.default.format(\"dxDataGrid-filterRowOperationGreaterOrEquals\"),\n          startsWith: _message.default.format(\"dxDataGrid-filterRowOperationStartsWith\"),\n          contains: _message.default.format(\"dxDataGrid-filterRowOperationContains\"),\n          notContains: _message.default.format(\"dxDataGrid-filterRowOperationNotContains\"),\n          endsWith: _message.default.format(\"dxDataGrid-filterRowOperationEndsWith\"),\n          between: _message.default.format(\"dxDataGrid-filterRowOperationBetween\"),\n          isBlank: _message.default.format(\"dxFilterBuilder-filterOperationIsBlank\"),\n          isNotBlank: _message.default.format(\"dxFilterBuilder-filterOperationIsNotBlank\")\n        },\n        betweenStartText: _message.default.format(\"dxDataGrid-filterRowOperationBetweenStartText\"),\n        betweenEndText: _message.default.format(\"dxDataGrid-filterRowOperationBetweenEndText\")\n      }\n    };\n  },\n  controllers: {\n    applyFilter: ApplyFilterViewController\n  },\n  extenders: {\n    controllers: {\n      data: DataControllerFilterRowExtender,\n      columnsResizer: {\n        _startResizing: function () {\n          var that = this;\n          that.callBase.apply(that, arguments);\n\n          if (that.isResizing()) {\n            var overlayInstance = that._columnHeadersView.getFilterRangeOverlayInstance();\n\n            if (overlayInstance) {\n              var cellIndex = overlayInstance.$element().closest(\"td\").index();\n\n              if (cellIndex === that._targetPoint.columnIndex || cellIndex === that._targetPoint.columnIndex + 1) {\n                overlayInstance.$content().hide();\n              }\n            }\n          }\n        },\n        _endResizing: function () {\n          var that = this;\n          var $cell;\n\n          if (that.isResizing()) {\n            var overlayInstance = that._columnHeadersView.getFilterRangeOverlayInstance();\n\n            if (overlayInstance) {\n              $cell = overlayInstance.$element().closest(\"td\");\n\n              that._columnHeadersView._updateFilterRangeOverlay({\n                width: $cell.outerWidth(true) + CORRECT_FILTER_RANGE_OVERLAY_WIDTH\n              });\n\n              overlayInstance.$content().show();\n            }\n          }\n\n          that.callBase.apply(that, arguments);\n        }\n      }\n    },\n    views: {\n      columnHeadersView: ColumnHeadersViewFilterRowExtender,\n      headerPanel: {\n        _getToolbarItems: function () {\n          var items = this.callBase();\n\n          var filterItem = this._prepareFilterItem(items);\n\n          return filterItem.concat(items);\n        },\n        _prepareFilterItem: function () {\n          var that = this;\n          var filterItem = [];\n\n          if (that._isShowApplyFilterButton()) {\n            var hintText = that.option(\"filterRow.applyFilterText\");\n\n            var columns = that._columnsController.getColumns();\n\n            var disabled = !columns.filter(function (column) {\n              return void 0 !== column.bufferedFilterValue;\n            }).length;\n\n            var onInitialized = function (e) {\n              (0, _renderer.default)(e.element).addClass(that._getToolbarButtonClass(APPLY_BUTTON_CLASS));\n            };\n\n            var onClickHandler = function () {\n              that._applyFilterViewController.applyFilter();\n            };\n\n            var toolbarItem = {\n              widget: \"dxButton\",\n              options: {\n                icon: \"apply-filter\",\n                disabled: disabled,\n                onClick: onClickHandler,\n                hint: hintText,\n                text: hintText,\n                onInitialized: onInitialized\n              },\n              showText: \"inMenu\",\n              name: \"applyFilterButton\",\n              location: \"after\",\n              locateInMenu: \"auto\",\n              sortIndex: 10\n            };\n            filterItem.push(toolbarItem);\n          }\n\n          return filterItem;\n        },\n        _isShowApplyFilterButton: function () {\n          var filterRowOptions = this.option(\"filterRow\");\n          return filterRowOptions && filterRowOptions.visible && \"onClick\" === filterRowOptions.applyFilter;\n        },\n        init: function () {\n          this.callBase();\n          this._dataController = this.getController(\"data\");\n          this._applyFilterViewController = this.getController(\"applyFilter\");\n        },\n        enableApplyButton: function (value) {\n          this.setToolbarItemDisabled(\"applyFilterButton\", !value);\n        },\n        isVisible: function () {\n          return this.callBase() || this._isShowApplyFilterButton();\n        },\n        optionChanged: function (args) {\n          if (\"filterRow\" === args.name) {\n            this._invalidate();\n\n            args.handled = true;\n          } else {\n            this.callBase(args);\n          }\n        }\n      }\n    }\n  }\n};\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/node_modules/devextreme/ui/grid_core/ui.grid_core.filter_row.js"],"names":["exports","default","_renderer","_interopRequireDefault","require","_events_engine","_type","_extend","_index","_iterator","_uiGrid_core","_uiGrid_core2","_message","_editor","_overlay","_menu","_accessibility","obj","__esModule","OPERATION_ICONS","notcontains","contains","startswith","endswith","between","OPERATION_DESCRIPTORS","FILTERING_TIMEOUT","CORRECT_FILTER_RANGE_OVERLAY_WIDTH","FILTER_ROW_CLASS","FILTER_RANGE_OVERLAY_CLASS","FILTER_RANGE_START_CLASS","FILTER_RANGE_END_CLASS","MENU_CLASS","EDITOR_WITH_MENU_CLASS","EDITOR_CONTAINER_CLASS","EDITOR_CELL_CLASS","FILTER_MENU","APPLY_BUTTON_CLASS","HIGHLIGHT_OUTLINE_CLASS","FOCUSED_CLASS","CELL_FOCUS_DISABLED_CLASS","FILTER_RANGE_CONTENT_CLASS","FILTER_MODIFIED_CLASS","EDITORS_INPUT_SELECTOR","BETWEEN_OPERATION_DATA_TYPES","isOnClickApplyFilterMode","that","option","ColumnHeadersViewFilterRowExtender","getEditorInstance","$editorContainer","$editor","children","componentNames","data","editor","length","getRangeTextByFilterValue","column","result","rangeEnd","filterValue","getColumnFilterValue","formatOptions","getFormatOptionsByColumn","Array","isArray","formatValue","isDefined","bufferedFilterValue","getColumnSelectedFilterOperation","bufferedSelectedFilterOperation","selectedFilterOperation","isValidFilterValue","indexOf","dataType","getFilterValue","columnIndex","_columnsController","columnOption","isFilterRange","closest","addWidgetPrefix","isRangeStart","hasClass","normalizeFilterValue","columnFilterValue","updateFilterValue","options","value","container","index","_applyFilterViewController","setHighLight","notFireEvent","_updateEditorValue","_columnOptionChanged","e","optionNames","$cell","$editorRangeElements","$menu","checkChanges","visibleIndex","getVisibleIndex","_getCellElement","element","find","first","overlayInstance","$content","last","_updateFilterRangeContent","_updateFilterOperationChooser","_renderFilterRangeContent","_renderEditor","_getEditorOptions","_hideFilterRange","callBase","_renderCore","_filterRangeOverlayInstance","apply","arguments","_resizeCore","repaint","isFilterRowVisible","_isElementVisible","isVisible","init","getController","_initFilterRangeOverlay","sharedData","$overlay","addClass","appendTo","_createComponent","height","shading","showTitle","focusStateEnabled","closeOnTargetScroll","closeOnOutsideClick","animation","position","my","at","of","offset","contentTemplate","contentElement","editorOptions","on","$prevElement","not","target","normalizeKeyName","shiftKey","preventDefault","prev","trigger","next","getWidgetContainerClass","onShown","component","onHidden","parent","updateDimensions","_updateFilterRangeOverlay","_showFilterRange","hide","width","outerWidth","show","getFilterRangeOverlayInstance","_createRow","row","_this","$row","rowType","event","selectView","_getRows","push","_renderFilterCell","cell","setAria","headerId","format","$container","alignment","css","filterOperations","_renderFilterOperationChooser","_renderCellContent","command","html","allowFiltering","renderTemplate","bind","done","_updateCell","accessibilityOptions","inputAttr","_getFilterInputAccessibilityAttributes","extend","parentType","showAllText","updateValueTimeout","setValue","placeholder","columnAriaLabel","empty","createEditor","$filterRangeContent","attr","text","isCellWasFocused","restoreFocus","menu","getInstance","_focusEditor","integrationOptions","activeStateEnabled","selectionMode","cssClass","showFirstSubmenuMode","hideSubmenuOnMouseLeave","items","disabled","icon","selectable","_getFilterOperationMenuItems","onItemClick","properties","itemData","name","columnSelectedFilterOperation","notFocusEditor","isOnClickMode","defaultSelectedFilterOperation","NAME","reset","onSubmenuShown","_isEditorFocused","loseFocus","onSubmenuHiding","onContentReady","_hideSubmenu","_visibleSubmenu","rtlEnabled","parents","focus","prependTo","filterRowOptions","operationDescriptions","availableFilterOperations","filter","map","descriptionName","selected","defaultFilterOperation","resetOperationText","optionChanged","args","_invalidate","handled","DataControllerFilterRowExtender","skipCalculateColumnFilters","_calculateAdditionalFilter","filters","columns","getVisibleColumns","each","calculateFilterExpression","createFilterExpression","combineFilters","ApplyFilterViewController","ViewController","inherit","_getHeaderPanel","_headerPanel","getView","$element","toggleClass","enableApplyButton","applyFilter","columnsController","getColumns","beginUpdate","i","endUpdate","removeHighLights","columnHeadersViewElement","removeClass","_default","defaultOptions","filterRow","visible","showOperationChooser","applyFilterText","equal","notEqual","lessThan","lessThanOrEqual","greaterThan","greaterThanOrEqual","startsWith","notContains","endsWith","isBlank","isNotBlank","betweenStartText","betweenEndText","controllers","extenders","columnsResizer","_startResizing","isResizing","_columnHeadersView","cellIndex","_targetPoint","_endResizing","views","columnHeadersView","headerPanel","_getToolbarItems","filterItem","_prepareFilterItem","concat","_isShowApplyFilterButton","hintText","onInitialized","_getToolbarButtonClass","onClickHandler","toolbarItem","widget","onClick","hint","showText","location","locateInMenu","sortIndex","_dataController","setToolbarItemDisabled","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.filter_row.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _uiGrid_core = _interopRequireDefault(require(\"./ui.grid_core.modules\"));\r\nvar _uiGrid_core2 = _interopRequireDefault(require(\"./ui.grid_core.utils\"));\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _editor = _interopRequireDefault(require(\"../editor/editor\"));\r\nvar _overlay = _interopRequireDefault(require(\"../overlay\"));\r\nvar _menu = _interopRequireDefault(require(\"../menu\"));\r\nvar _accessibility = require(\"../shared/accessibility\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar OPERATION_ICONS = {\r\n    \"=\": \"filter-operation-equals\",\r\n    \"<>\": \"filter-operation-not-equals\",\r\n    \"<\": \"filter-operation-less\",\r\n    \"<=\": \"filter-operation-less-equal\",\r\n    \">\": \"filter-operation-greater\",\r\n    \">=\": \"filter-operation-greater-equal\",\r\n    \"default\": \"filter-operation-default\",\r\n    notcontains: \"filter-operation-not-contains\",\r\n    contains: \"filter-operation-contains\",\r\n    startswith: \"filter-operation-starts-with\",\r\n    endswith: \"filter-operation-ends-with\",\r\n    between: \"filter-operation-between\"\r\n};\r\nvar OPERATION_DESCRIPTORS = {\r\n    \"=\": \"equal\",\r\n    \"<>\": \"notEqual\",\r\n    \"<\": \"lessThan\",\r\n    \"<=\": \"lessThanOrEqual\",\r\n    \">\": \"greaterThan\",\r\n    \">=\": \"greaterThanOrEqual\",\r\n    startswith: \"startsWith\",\r\n    contains: \"contains\",\r\n    notcontains: \"notContains\",\r\n    endswith: \"endsWith\",\r\n    between: \"between\"\r\n};\r\nvar FILTERING_TIMEOUT = 700;\r\nvar CORRECT_FILTER_RANGE_OVERLAY_WIDTH = 1;\r\nvar FILTER_ROW_CLASS = \"filter-row\";\r\nvar FILTER_RANGE_OVERLAY_CLASS = \"filter-range-overlay\";\r\nvar FILTER_RANGE_START_CLASS = \"filter-range-start\";\r\nvar FILTER_RANGE_END_CLASS = \"filter-range-end\";\r\nvar MENU_CLASS = \"dx-menu\";\r\nvar EDITOR_WITH_MENU_CLASS = \"dx-editor-with-menu\";\r\nvar EDITOR_CONTAINER_CLASS = \"dx-editor-container\";\r\nvar EDITOR_CELL_CLASS = \"dx-editor-cell\";\r\nvar FILTER_MENU = \"dx-filter-menu\";\r\nvar APPLY_BUTTON_CLASS = \"dx-apply-button\";\r\nvar HIGHLIGHT_OUTLINE_CLASS = \"dx-highlight-outline\";\r\nvar FOCUSED_CLASS = \"dx-focused\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar FILTER_RANGE_CONTENT_CLASS = \"dx-filter-range-content\";\r\nvar FILTER_MODIFIED_CLASS = \"dx-filter-modified\";\r\nvar EDITORS_INPUT_SELECTOR = \"input:not([type='hidden'])\";\r\nvar BETWEEN_OPERATION_DATA_TYPES = [\"date\", \"datetime\", \"number\"];\r\n\r\nfunction isOnClickApplyFilterMode(that) {\r\n    return \"onClick\" === that.option(\"filterRow.applyFilter\")\r\n}\r\nvar ColumnHeadersViewFilterRowExtender = function() {\r\n    var getEditorInstance = function($editorContainer) {\r\n        var $editor = $editorContainer && $editorContainer.children();\r\n        var componentNames = $editor && $editor.data(\"dxComponents\");\r\n        var editor = componentNames && componentNames.length && $editor.data(componentNames[0]);\r\n        if (editor instanceof _editor.default) {\r\n            return editor\r\n        }\r\n    };\r\n    var getRangeTextByFilterValue = function(that, column) {\r\n        var result = \"\";\r\n        var rangeEnd = \"\";\r\n        var filterValue = getColumnFilterValue(that, column);\r\n        var formatOptions = _uiGrid_core2.default.getFormatOptionsByColumn(column, \"filterRow\");\r\n        if (Array.isArray(filterValue)) {\r\n            result = _uiGrid_core2.default.formatValue(filterValue[0], formatOptions);\r\n            rangeEnd = _uiGrid_core2.default.formatValue(filterValue[1], formatOptions);\r\n            if (\"\" !== rangeEnd) {\r\n                result += \" - \" + rangeEnd\r\n            }\r\n        } else {\r\n            if ((0, _type.isDefined)(filterValue)) {\r\n                result = _uiGrid_core2.default.formatValue(filterValue, formatOptions)\r\n            }\r\n        }\r\n        return result\r\n    };\r\n\r\n    function getColumnFilterValue(that, column) {\r\n        if (column) {\r\n            return isOnClickApplyFilterMode(that) && void 0 !== column.bufferedFilterValue ? column.bufferedFilterValue : column.filterValue\r\n        }\r\n    }\r\n    var getColumnSelectedFilterOperation = function(that, column) {\r\n        if (column) {\r\n            return isOnClickApplyFilterMode(that) && void 0 !== column.bufferedSelectedFilterOperation ? column.bufferedSelectedFilterOperation : column.selectedFilterOperation\r\n        }\r\n    };\r\n    var isValidFilterValue = function(filterValue, column) {\r\n        if (column && BETWEEN_OPERATION_DATA_TYPES.indexOf(column.dataType) >= 0 && Array.isArray(filterValue)) {\r\n            return false\r\n        }\r\n        return void 0 !== filterValue\r\n    };\r\n    var getFilterValue = function(that, columnIndex, $editorContainer) {\r\n        var column = that._columnsController.columnOption(columnIndex);\r\n        var filterValue = getColumnFilterValue(that, column);\r\n        var isFilterRange = $editorContainer.closest(\".\" + that.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS)).length;\r\n        var isRangeStart = $editorContainer.hasClass(that.addWidgetPrefix(FILTER_RANGE_START_CLASS));\r\n        if (filterValue && Array.isArray(filterValue) && \"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n            if (isRangeStart) {\r\n                return filterValue[0]\r\n            } else {\r\n                return filterValue[1]\r\n            }\r\n        }\r\n        return !isFilterRange && isValidFilterValue(filterValue, column) ? filterValue : null\r\n    };\r\n    var normalizeFilterValue = function(that, filterValue, column, $editorContainer) {\r\n        if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n            var columnFilterValue = getColumnFilterValue(that, column);\r\n            if ($editorContainer.hasClass(that.addWidgetPrefix(FILTER_RANGE_START_CLASS))) {\r\n                return [filterValue, Array.isArray(columnFilterValue) ? columnFilterValue[1] : void 0]\r\n            } else {\r\n                return [Array.isArray(columnFilterValue) ? columnFilterValue[0] : columnFilterValue, filterValue]\r\n            }\r\n        }\r\n        return filterValue\r\n    };\r\n    var updateFilterValue = function(that, options) {\r\n        var value = \"\" === options.value ? null : options.value;\r\n        var $editorContainer = options.container;\r\n        var column = that._columnsController.columnOption(options.column.index);\r\n        var filterValue = getFilterValue(that, column.index, $editorContainer);\r\n        if (!(0, _type.isDefined)(filterValue) && !(0, _type.isDefined)(value)) {\r\n            return\r\n        }\r\n        that._applyFilterViewController.setHighLight($editorContainer, filterValue !== value);\r\n        that._columnsController.columnOption(column.index, isOnClickApplyFilterMode(that) ? \"bufferedFilterValue\" : \"filterValue\", normalizeFilterValue(that, value, column, $editorContainer), options.notFireEvent)\r\n    };\r\n    return {\r\n        _updateEditorValue: function(column, $editorContainer) {\r\n            var that = this;\r\n            var editor = getEditorInstance($editorContainer);\r\n            editor && editor.option(\"value\", getFilterValue(that, column.index, $editorContainer))\r\n        },\r\n        _columnOptionChanged: function(e) {\r\n            var that = this;\r\n            var optionNames = e.optionNames;\r\n            var $cell;\r\n            var $editorContainer;\r\n            var $editorRangeElements;\r\n            var $menu;\r\n            if (_uiGrid_core2.default.checkChanges(optionNames, [\"filterValue\", \"bufferedFilterValue\", \"selectedFilterOperation\", \"bufferedSelectedFilterOperation\"]) && void 0 !== e.columnIndex) {\r\n                var visibleIndex = that._columnsController.getVisibleIndex(e.columnIndex);\r\n                var column = that._columnsController.columnOption(e.columnIndex);\r\n                $cell = that._getCellElement(that.element().find(\".\" + that.addWidgetPrefix(FILTER_ROW_CLASS)).index(), visibleIndex) || (0, _renderer.default)();\r\n                $editorContainer = $cell.find(\".\" + EDITOR_CONTAINER_CLASS).first();\r\n                if (optionNames.filterValue || optionNames.bufferedFilterValue) {\r\n                    that._updateEditorValue(column, $editorContainer);\r\n                    var overlayInstance = $cell.find(\".\" + that.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS)).data(\"dxOverlay\");\r\n                    if (overlayInstance) {\r\n                        $editorRangeElements = overlayInstance.$content().find(\".\" + EDITOR_CONTAINER_CLASS);\r\n                        that._updateEditorValue(column, $editorRangeElements.first());\r\n                        that._updateEditorValue(column, $editorRangeElements.last())\r\n                    }\r\n                    if (!overlayInstance || !overlayInstance.option(\"visible\")) {\r\n                        that._updateFilterRangeContent($cell, getRangeTextByFilterValue(that, column))\r\n                    }\r\n                }\r\n                if (optionNames.selectedFilterOperation || optionNames.bufferedSelectedFilterOperation) {\r\n                    if (visibleIndex >= 0 && column) {\r\n                        $menu = $cell.find(\".\" + MENU_CLASS);\r\n                        if ($menu.length) {\r\n                            that._updateFilterOperationChooser($menu, column, $editorContainer);\r\n                            if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n                                that._renderFilterRangeContent($cell, column)\r\n                            } else {\r\n                                if ($editorContainer.find(\".\" + FILTER_RANGE_CONTENT_CLASS).length) {\r\n                                    that._renderEditor($editorContainer, that._getEditorOptions($editorContainer, column));\r\n                                    that._hideFilterRange()\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return\r\n            }\r\n            that.callBase(e)\r\n        },\r\n        _renderCore: function() {\r\n            this._filterRangeOverlayInstance = null;\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        _resizeCore: function() {\r\n            this.callBase.apply(this, arguments);\r\n            this._filterRangeOverlayInstance && this._filterRangeOverlayInstance.repaint()\r\n        },\r\n        isFilterRowVisible: function() {\r\n            return this._isElementVisible(this.option(\"filterRow\"))\r\n        },\r\n        isVisible: function() {\r\n            return this.callBase() || this.isFilterRowVisible()\r\n        },\r\n        init: function() {\r\n            this.callBase();\r\n            this._applyFilterViewController = this.getController(\"applyFilter\")\r\n        },\r\n        _initFilterRangeOverlay: function($cell, column) {\r\n            var that = this;\r\n            var sharedData = {};\r\n            var $editorContainer = $cell.find(\".dx-editor-container\");\r\n            var $overlay = (0, _renderer.default)(\"<div>\").addClass(that.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS)).appendTo($cell);\r\n            return that._createComponent($overlay, _overlay.default, {\r\n                height: \"auto\",\r\n                shading: false,\r\n                showTitle: false,\r\n                focusStateEnabled: false,\r\n                closeOnTargetScroll: false,\r\n                closeOnOutsideClick: true,\r\n                animation: false,\r\n                position: {\r\n                    my: \"top\",\r\n                    at: \"top\",\r\n                    of: $editorContainer.length && $editorContainer || $cell,\r\n                    offset: \"0 -1\"\r\n                },\r\n                contentTemplate: function(contentElement) {\r\n                    var editorOptions;\r\n                    var $editor = (0, _renderer.default)(\"<div>\").addClass(EDITOR_CONTAINER_CLASS + \" \" + that.addWidgetPrefix(FILTER_RANGE_START_CLASS)).appendTo(contentElement);\r\n                    column = that._columnsController.columnOption(column.index);\r\n                    editorOptions = that._getEditorOptions($editor, column);\r\n                    editorOptions.sharedData = sharedData;\r\n                    that._renderEditor($editor, editorOptions);\r\n                    _events_engine.default.on($editor.find(EDITORS_INPUT_SELECTOR), \"keydown\", function(e) {\r\n                        var $prevElement = $cell.find(\"[tabindex]\").not(e.target).first();\r\n                        if (\"tab\" === (0, _index.normalizeKeyName)(e) && e.shiftKey) {\r\n                            e.preventDefault();\r\n                            that._hideFilterRange();\r\n                            if (!$prevElement.length) {\r\n                                $prevElement = $cell.prev().find(\"[tabindex]\").last()\r\n                            }\r\n                            _events_engine.default.trigger($prevElement, \"focus\")\r\n                        }\r\n                    });\r\n                    $editor = (0, _renderer.default)(\"<div>\").addClass(EDITOR_CONTAINER_CLASS + \" \" + that.addWidgetPrefix(FILTER_RANGE_END_CLASS)).appendTo(contentElement);\r\n                    editorOptions = that._getEditorOptions($editor, column);\r\n                    editorOptions.sharedData = sharedData;\r\n                    that._renderEditor($editor, editorOptions);\r\n                    _events_engine.default.on($editor.find(EDITORS_INPUT_SELECTOR), \"keydown\", function(e) {\r\n                        if (\"tab\" === (0, _index.normalizeKeyName)(e) && !e.shiftKey) {\r\n                            e.preventDefault();\r\n                            that._hideFilterRange();\r\n                            _events_engine.default.trigger($cell.next().find(\"[tabindex]\").first(), \"focus\")\r\n                        }\r\n                    });\r\n                    return (0, _renderer.default)(contentElement).addClass(that.getWidgetContainerClass())\r\n                },\r\n                onShown: function(e) {\r\n                    var $editor = e.component.$content().find(\".\" + EDITOR_CONTAINER_CLASS).first();\r\n                    _events_engine.default.trigger($editor.find(EDITORS_INPUT_SELECTOR), \"focus\")\r\n                },\r\n                onHidden: function() {\r\n                    column = that._columnsController.columnOption(column.index);\r\n                    $cell.find(\".\" + MENU_CLASS).parent().addClass(EDITOR_WITH_MENU_CLASS);\r\n                    if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n                        that._updateFilterRangeContent($cell, getRangeTextByFilterValue(that, column));\r\n                        that.component.updateDimensions()\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        _updateFilterRangeOverlay: function(options) {\r\n            var overlayInstance = this._filterRangeOverlayInstance;\r\n            overlayInstance && overlayInstance.option(options)\r\n        },\r\n        _showFilterRange: function($cell, column) {\r\n            var that = this;\r\n            var $overlay = $cell.children(\".\" + that.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS));\r\n            var overlayInstance = $overlay.length && $overlay.data(\"dxOverlay\");\r\n            if (!overlayInstance && column) {\r\n                overlayInstance = that._initFilterRangeOverlay($cell, column)\r\n            }\r\n            if (!overlayInstance.option(\"visible\")) {\r\n                that._filterRangeOverlayInstance && that._filterRangeOverlayInstance.hide();\r\n                that._filterRangeOverlayInstance = overlayInstance;\r\n                that._updateFilterRangeOverlay({\r\n                    width: $cell.outerWidth(true) + CORRECT_FILTER_RANGE_OVERLAY_WIDTH\r\n                });\r\n                that._filterRangeOverlayInstance && that._filterRangeOverlayInstance.show()\r\n            }\r\n        },\r\n        _hideFilterRange: function() {\r\n            var overlayInstance = this._filterRangeOverlayInstance;\r\n            overlayInstance && overlayInstance.hide()\r\n        },\r\n        getFilterRangeOverlayInstance: function() {\r\n            return this._filterRangeOverlayInstance\r\n        },\r\n        _createRow: function(row) {\r\n            var _this = this;\r\n            var $row = this.callBase(row);\r\n            if (\"filter\" === row.rowType) {\r\n                $row.addClass(this.addWidgetPrefix(FILTER_ROW_CLASS));\r\n                if (!this.option(\"useLegacyKeyboardNavigation\")) {\r\n                    _events_engine.default.on($row, \"keydown\", function(event) {\r\n                        return (0, _accessibility.selectView)(\"filterRow\", _this, event)\r\n                    })\r\n                }\r\n            }\r\n            return $row\r\n        },\r\n        _getRows: function() {\r\n            var result = this.callBase();\r\n            if (this.isFilterRowVisible()) {\r\n                result.push({\r\n                    rowType: \"filter\"\r\n                })\r\n            }\r\n            return result\r\n        },\r\n        _renderFilterCell: function(cell, options) {\r\n            var that = this;\r\n            var column = options.column;\r\n            var $cell = (0, _renderer.default)(cell);\r\n            if (that.component.option(\"showColumnHeaders\")) {\r\n                that.setAria(\"describedby\", column.headerId, $cell)\r\n            }\r\n            that.setAria(\"label\", _message.default.format(\"dxDataGrid-ariaFilterCell\"), $cell);\r\n            $cell.addClass(EDITOR_CELL_CLASS);\r\n            var $container = (0, _renderer.default)(\"<div>\").appendTo($cell);\r\n            var $editorContainer = (0, _renderer.default)(\"<div>\").addClass(EDITOR_CONTAINER_CLASS).appendTo($container);\r\n            if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n                that._renderFilterRangeContent($cell, column)\r\n            } else {\r\n                var editorOptions = that._getEditorOptions($editorContainer, column);\r\n                that._renderEditor($editorContainer, editorOptions)\r\n            }\r\n            var alignment = column.alignment;\r\n            if (alignment && \"center\" !== alignment) {\r\n                $cell.find(EDITORS_INPUT_SELECTOR).first().css(\"textAlign\", column.alignment)\r\n            }\r\n            if (column.filterOperations && column.filterOperations.length) {\r\n                that._renderFilterOperationChooser($container, column, $editorContainer)\r\n            }\r\n        },\r\n        _renderCellContent: function($cell, options) {\r\n            var that = this;\r\n            var column = options.column;\r\n            if (\"filter\" === options.rowType) {\r\n                if (column.command) {\r\n                    $cell.html(\"&nbsp;\")\r\n                } else {\r\n                    if (column.allowFiltering) {\r\n                        that.renderTemplate($cell, that._renderFilterCell.bind(that), options).done(function() {\r\n                            that._updateCell($cell, options)\r\n                        });\r\n                        return\r\n                    }\r\n                }\r\n            }\r\n            that.callBase($cell, options)\r\n        },\r\n        _getEditorOptions: function($editorContainer, column) {\r\n            var that = this;\r\n            var accessibilityOptions = {\r\n                editorOptions: {\r\n                    inputAttr: that._getFilterInputAccessibilityAttributes(column)\r\n                }\r\n            };\r\n            var result = (0, _extend.extend)(accessibilityOptions, column, {\r\n                value: getFilterValue(that, column.index, $editorContainer),\r\n                parentType: \"filterRow\",\r\n                showAllText: that.option(\"filterRow.showAllText\"),\r\n                updateValueTimeout: \"onClick\" === that.option(\"filterRow.applyFilter\") ? 0 : FILTERING_TIMEOUT,\r\n                width: null,\r\n                setValue: function(value, notFireEvent) {\r\n                    updateFilterValue(that, {\r\n                        column: column,\r\n                        value: value,\r\n                        container: $editorContainer,\r\n                        notFireEvent: notFireEvent\r\n                    })\r\n                }\r\n            });\r\n            if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n                if ($editorContainer.hasClass(that.addWidgetPrefix(FILTER_RANGE_START_CLASS))) {\r\n                    result.placeholder = that.option(\"filterRow.betweenStartText\")\r\n                } else {\r\n                    result.placeholder = that.option(\"filterRow.betweenEndText\")\r\n                }\r\n            }\r\n            return result\r\n        },\r\n        _getFilterInputAccessibilityAttributes: function(column) {\r\n            var columnAriaLabel = _message.default.format(\"dxDataGrid-ariaFilterCell\");\r\n            if (this.component.option(\"showColumnHeaders\")) {\r\n                return {\r\n                    \"aria-label\": columnAriaLabel,\r\n                    \"aria-describedby\": column.headerId\r\n                }\r\n            }\r\n            return {\r\n                \"aria-label\": columnAriaLabel\r\n            }\r\n        },\r\n        _renderEditor: function($editorContainer, options) {\r\n            $editorContainer.empty();\r\n            return this.getController(\"editorFactory\").createEditor((0, _renderer.default)(\"<div>\").appendTo($editorContainer), options)\r\n        },\r\n        _renderFilterRangeContent: function($cell, column) {\r\n            var that = this;\r\n            var $editorContainer = $cell.find(\".\" + EDITOR_CONTAINER_CLASS).first();\r\n            $editorContainer.empty();\r\n            var $filterRangeContent = (0, _renderer.default)(\"<div>\").addClass(FILTER_RANGE_CONTENT_CLASS).attr(\"tabindex\", this.option(\"tabIndex\"));\r\n            _events_engine.default.on($filterRangeContent, \"focusin\", function() {\r\n                that._showFilterRange($cell, column)\r\n            });\r\n            $filterRangeContent.appendTo($editorContainer);\r\n            that._updateFilterRangeContent($cell, getRangeTextByFilterValue(that, column))\r\n        },\r\n        _updateFilterRangeContent: function($cell, value) {\r\n            var $filterRangeContent = $cell.find(\".\" + FILTER_RANGE_CONTENT_CLASS);\r\n            if ($filterRangeContent.length) {\r\n                if (\"\" === value) {\r\n                    $filterRangeContent.html(\"&nbsp;\")\r\n                } else {\r\n                    $filterRangeContent.text(value)\r\n                }\r\n            }\r\n        },\r\n        _updateFilterOperationChooser: function($menu, column, $editorContainer) {\r\n            var that = this;\r\n            var isCellWasFocused;\r\n            var restoreFocus = function() {\r\n                var menu = _menu.default.getInstance($menu);\r\n                menu && menu.option(\"focusedElement\", null);\r\n                isCellWasFocused && that._focusEditor($editorContainer)\r\n            };\r\n            that._createComponent($menu, _menu.default, {\r\n                integrationOptions: {},\r\n                activeStateEnabled: false,\r\n                selectionMode: \"single\",\r\n                cssClass: that.getWidgetContainerClass() + \" \" + CELL_FOCUS_DISABLED_CLASS + \" \" + FILTER_MENU,\r\n                showFirstSubmenuMode: \"onHover\",\r\n                hideSubmenuOnMouseLeave: true,\r\n                items: [{\r\n                    disabled: column.filterOperations && column.filterOperations.length ? false : true,\r\n                    icon: OPERATION_ICONS[getColumnSelectedFilterOperation(that, column) || \"default\"],\r\n                    selectable: false,\r\n                    items: that._getFilterOperationMenuItems(column)\r\n                }],\r\n                onItemClick: function(properties) {\r\n                    var selectedFilterOperation = properties.itemData.name;\r\n                    var columnSelectedFilterOperation = getColumnSelectedFilterOperation(that, column);\r\n                    var notFocusEditor = false;\r\n                    var isOnClickMode = isOnClickApplyFilterMode(that);\r\n                    var options = {};\r\n                    if (properties.itemData.items || selectedFilterOperation && selectedFilterOperation === columnSelectedFilterOperation) {\r\n                        return\r\n                    }\r\n                    if (selectedFilterOperation) {\r\n                        options[isOnClickMode ? \"bufferedSelectedFilterOperation\" : \"selectedFilterOperation\"] = selectedFilterOperation;\r\n                        if (\"between\" === selectedFilterOperation || \"between\" === columnSelectedFilterOperation) {\r\n                            notFocusEditor = \"between\" === selectedFilterOperation;\r\n                            options[isOnClickMode ? \"bufferedFilterValue\" : \"filterValue\"] = null\r\n                        }\r\n                    } else {\r\n                        options[isOnClickMode ? \"bufferedFilterValue\" : \"filterValue\"] = null;\r\n                        options[isOnClickMode ? \"bufferedSelectedFilterOperation\" : \"selectedFilterOperation\"] = column.defaultSelectedFilterOperation || null\r\n                    }\r\n                    that._columnsController.columnOption(column.index, options);\r\n                    that._applyFilterViewController.setHighLight($editorContainer, true);\r\n                    if (!selectedFilterOperation) {\r\n                        var editor = getEditorInstance($editorContainer);\r\n                        if (editor && \"dxDateBox\" === editor.NAME && !editor.option(\"isValid\")) {\r\n                            editor.reset();\r\n                            editor.option(\"isValid\", true)\r\n                        }\r\n                    }\r\n                    if (!notFocusEditor) {\r\n                        that._focusEditor($editorContainer)\r\n                    } else {\r\n                        that._showFilterRange($editorContainer.closest(\".\" + EDITOR_CELL_CLASS), column)\r\n                    }\r\n                },\r\n                onSubmenuShown: function() {\r\n                    isCellWasFocused = that._isEditorFocused($editorContainer);\r\n                    that.getController(\"editorFactory\").loseFocus()\r\n                },\r\n                onSubmenuHiding: function() {\r\n                    _events_engine.default.trigger($menu, \"blur\");\r\n                    restoreFocus()\r\n                },\r\n                onContentReady: function(e) {\r\n                    _events_engine.default.on($menu, \"blur\", function() {\r\n                        var menu = e.component;\r\n                        menu._hideSubmenu(menu._visibleSubmenu);\r\n                        restoreFocus()\r\n                    })\r\n                },\r\n                rtlEnabled: that.option(\"rtlEnabled\")\r\n            })\r\n        },\r\n        _isEditorFocused: function($container) {\r\n            return $container.hasClass(FOCUSED_CLASS) || $container.parents(\".\" + FOCUSED_CLASS).length\r\n        },\r\n        _focusEditor: function($container) {\r\n            this.getController(\"editorFactory\").focus($container);\r\n            _events_engine.default.trigger($container.find(EDITORS_INPUT_SELECTOR), \"focus\")\r\n        },\r\n        _renderFilterOperationChooser: function($container, column, $editorContainer) {\r\n            var that = this;\r\n            var $menu;\r\n            if (that.option(\"filterRow.showOperationChooser\")) {\r\n                $container.addClass(EDITOR_WITH_MENU_CLASS);\r\n                $menu = (0, _renderer.default)(\"<div>\").prependTo($container);\r\n                that._updateFilterOperationChooser($menu, column, $editorContainer)\r\n            }\r\n        },\r\n        _getFilterOperationMenuItems: function(column) {\r\n            var that = this;\r\n            var result = [{}];\r\n            var filterRowOptions = that.option(\"filterRow\");\r\n            var operationDescriptions = filterRowOptions && filterRowOptions.operationDescriptions || {};\r\n            if (column.filterOperations && column.filterOperations.length) {\r\n                var availableFilterOperations = column.filterOperations.filter(function(value) {\r\n                    return (0, _type.isDefined)(OPERATION_DESCRIPTORS[value])\r\n                });\r\n                result = (0, _iterator.map)(availableFilterOperations, function(value) {\r\n                    var descriptionName = OPERATION_DESCRIPTORS[value];\r\n                    return {\r\n                        name: value,\r\n                        selected: (getColumnSelectedFilterOperation(that, column) || column.defaultFilterOperation) === value,\r\n                        text: operationDescriptions[descriptionName],\r\n                        icon: OPERATION_ICONS[value]\r\n                    }\r\n                });\r\n                result.push({\r\n                    name: null,\r\n                    text: filterRowOptions && filterRowOptions.resetOperationText,\r\n                    icon: OPERATION_ICONS.default\r\n                })\r\n            }\r\n            return result\r\n        },\r\n        optionChanged: function(args) {\r\n            var that = this;\r\n            switch (args.name) {\r\n                case \"filterRow\":\r\n                case \"showColumnLines\":\r\n                    this._invalidate(true, true);\r\n                    args.handled = true;\r\n                    break;\r\n                default:\r\n                    that.callBase(args)\r\n            }\r\n        }\r\n    }\r\n}();\r\nvar DataControllerFilterRowExtender = {\r\n    skipCalculateColumnFilters: function() {\r\n        return false\r\n    },\r\n    _calculateAdditionalFilter: function() {\r\n        if (this.skipCalculateColumnFilters()) {\r\n            return this.callBase()\r\n        }\r\n        var filters = [this.callBase()];\r\n        var columns = this._columnsController.getVisibleColumns(null, true);\r\n        (0, _iterator.each)(columns, function() {\r\n            if (this.allowFiltering && this.calculateFilterExpression && (0, _type.isDefined)(this.filterValue)) {\r\n                var filter = this.createFilterExpression(this.filterValue, this.selectedFilterOperation || this.defaultFilterOperation, \"filterRow\");\r\n                filters.push(filter)\r\n            }\r\n        });\r\n        return _uiGrid_core2.default.combineFilters(filters)\r\n    }\r\n};\r\nvar ApplyFilterViewController = _uiGrid_core.default.ViewController.inherit({\r\n    _getHeaderPanel: function() {\r\n        if (!this._headerPanel) {\r\n            this._headerPanel = this.getView(\"headerPanel\")\r\n        }\r\n        return this._headerPanel\r\n    },\r\n    setHighLight: function($element, value) {\r\n        if (isOnClickApplyFilterMode(this)) {\r\n            $element && $element.toggleClass(HIGHLIGHT_OUTLINE_CLASS, value) && $element.closest(\".\" + EDITOR_CELL_CLASS).toggleClass(FILTER_MODIFIED_CLASS, value);\r\n            this._getHeaderPanel().enableApplyButton(value)\r\n        }\r\n    },\r\n    applyFilter: function() {\r\n        var columnsController = this.getController(\"columns\");\r\n        var columns = columnsController.getColumns();\r\n        columnsController.beginUpdate();\r\n        for (var i = 0; i < columns.length; i++) {\r\n            var column = columns[i];\r\n            if (void 0 !== column.bufferedFilterValue) {\r\n                columnsController.columnOption(i, \"filterValue\", column.bufferedFilterValue);\r\n                column.bufferedFilterValue = void 0\r\n            }\r\n            if (void 0 !== column.bufferedSelectedFilterOperation) {\r\n                columnsController.columnOption(i, \"selectedFilterOperation\", column.bufferedSelectedFilterOperation);\r\n                column.bufferedSelectedFilterOperation = void 0\r\n            }\r\n        }\r\n        columnsController.endUpdate();\r\n        this.removeHighLights()\r\n    },\r\n    removeHighLights: function() {\r\n        if (isOnClickApplyFilterMode(this)) {\r\n            var columnHeadersViewElement = this.getView(\"columnHeadersView\").element();\r\n            columnHeadersViewElement.find(\".\" + this.addWidgetPrefix(FILTER_ROW_CLASS) + \" .\" + HIGHLIGHT_OUTLINE_CLASS).removeClass(HIGHLIGHT_OUTLINE_CLASS);\r\n            columnHeadersViewElement.find(\".\" + this.addWidgetPrefix(FILTER_ROW_CLASS) + \" .\" + FILTER_MODIFIED_CLASS).removeClass(FILTER_MODIFIED_CLASS);\r\n            this._getHeaderPanel().enableApplyButton(false)\r\n        }\r\n    }\r\n});\r\nvar _default = {\r\n    defaultOptions: function() {\r\n        return {\r\n            filterRow: {\r\n                visible: false,\r\n                showOperationChooser: true,\r\n                showAllText: _message.default.format(\"dxDataGrid-filterRowShowAllText\"),\r\n                resetOperationText: _message.default.format(\"dxDataGrid-filterRowResetOperationText\"),\r\n                applyFilter: \"auto\",\r\n                applyFilterText: _message.default.format(\"dxDataGrid-applyFilterText\"),\r\n                operationDescriptions: {\r\n                    equal: _message.default.format(\"dxDataGrid-filterRowOperationEquals\"),\r\n                    notEqual: _message.default.format(\"dxDataGrid-filterRowOperationNotEquals\"),\r\n                    lessThan: _message.default.format(\"dxDataGrid-filterRowOperationLess\"),\r\n                    lessThanOrEqual: _message.default.format(\"dxDataGrid-filterRowOperationLessOrEquals\"),\r\n                    greaterThan: _message.default.format(\"dxDataGrid-filterRowOperationGreater\"),\r\n                    greaterThanOrEqual: _message.default.format(\"dxDataGrid-filterRowOperationGreaterOrEquals\"),\r\n                    startsWith: _message.default.format(\"dxDataGrid-filterRowOperationStartsWith\"),\r\n                    contains: _message.default.format(\"dxDataGrid-filterRowOperationContains\"),\r\n                    notContains: _message.default.format(\"dxDataGrid-filterRowOperationNotContains\"),\r\n                    endsWith: _message.default.format(\"dxDataGrid-filterRowOperationEndsWith\"),\r\n                    between: _message.default.format(\"dxDataGrid-filterRowOperationBetween\"),\r\n                    isBlank: _message.default.format(\"dxFilterBuilder-filterOperationIsBlank\"),\r\n                    isNotBlank: _message.default.format(\"dxFilterBuilder-filterOperationIsNotBlank\")\r\n                },\r\n                betweenStartText: _message.default.format(\"dxDataGrid-filterRowOperationBetweenStartText\"),\r\n                betweenEndText: _message.default.format(\"dxDataGrid-filterRowOperationBetweenEndText\")\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        applyFilter: ApplyFilterViewController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: DataControllerFilterRowExtender,\r\n            columnsResizer: {\r\n                _startResizing: function() {\r\n                    var that = this;\r\n                    that.callBase.apply(that, arguments);\r\n                    if (that.isResizing()) {\r\n                        var overlayInstance = that._columnHeadersView.getFilterRangeOverlayInstance();\r\n                        if (overlayInstance) {\r\n                            var cellIndex = overlayInstance.$element().closest(\"td\").index();\r\n                            if (cellIndex === that._targetPoint.columnIndex || cellIndex === that._targetPoint.columnIndex + 1) {\r\n                                overlayInstance.$content().hide()\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                _endResizing: function() {\r\n                    var that = this;\r\n                    var $cell;\r\n                    if (that.isResizing()) {\r\n                        var overlayInstance = that._columnHeadersView.getFilterRangeOverlayInstance();\r\n                        if (overlayInstance) {\r\n                            $cell = overlayInstance.$element().closest(\"td\");\r\n                            that._columnHeadersView._updateFilterRangeOverlay({\r\n                                width: $cell.outerWidth(true) + CORRECT_FILTER_RANGE_OVERLAY_WIDTH\r\n                            });\r\n                            overlayInstance.$content().show()\r\n                        }\r\n                    }\r\n                    that.callBase.apply(that, arguments)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            columnHeadersView: ColumnHeadersViewFilterRowExtender,\r\n            headerPanel: {\r\n                _getToolbarItems: function() {\r\n                    var items = this.callBase();\r\n                    var filterItem = this._prepareFilterItem(items);\r\n                    return filterItem.concat(items)\r\n                },\r\n                _prepareFilterItem: function() {\r\n                    var that = this;\r\n                    var filterItem = [];\r\n                    if (that._isShowApplyFilterButton()) {\r\n                        var hintText = that.option(\"filterRow.applyFilterText\");\r\n                        var columns = that._columnsController.getColumns();\r\n                        var disabled = !columns.filter(function(column) {\r\n                            return void 0 !== column.bufferedFilterValue\r\n                        }).length;\r\n                        var onInitialized = function(e) {\r\n                            (0, _renderer.default)(e.element).addClass(that._getToolbarButtonClass(APPLY_BUTTON_CLASS))\r\n                        };\r\n                        var onClickHandler = function() {\r\n                            that._applyFilterViewController.applyFilter()\r\n                        };\r\n                        var toolbarItem = {\r\n                            widget: \"dxButton\",\r\n                            options: {\r\n                                icon: \"apply-filter\",\r\n                                disabled: disabled,\r\n                                onClick: onClickHandler,\r\n                                hint: hintText,\r\n                                text: hintText,\r\n                                onInitialized: onInitialized\r\n                            },\r\n                            showText: \"inMenu\",\r\n                            name: \"applyFilterButton\",\r\n                            location: \"after\",\r\n                            locateInMenu: \"auto\",\r\n                            sortIndex: 10\r\n                        };\r\n                        filterItem.push(toolbarItem)\r\n                    }\r\n                    return filterItem\r\n                },\r\n                _isShowApplyFilterButton: function() {\r\n                    var filterRowOptions = this.option(\"filterRow\");\r\n                    return filterRowOptions && filterRowOptions.visible && \"onClick\" === filterRowOptions.applyFilter\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._dataController = this.getController(\"data\");\r\n                    this._applyFilterViewController = this.getController(\"applyFilter\")\r\n                },\r\n                enableApplyButton: function(value) {\r\n                    this.setToolbarItemDisabled(\"applyFilterButton\", !value)\r\n                },\r\n                isVisible: function() {\r\n                    return this.callBase() || this._isShowApplyFilterButton()\r\n                },\r\n                optionChanged: function(args) {\r\n                    if (\"filterRow\" === args.name) {\r\n                        this._invalidate();\r\n                        args.handled = true\r\n                    } else {\r\n                        this.callBase(args)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}