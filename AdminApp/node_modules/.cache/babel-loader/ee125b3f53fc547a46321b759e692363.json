{"ast":null,"code":"/**\r\n * DevExtreme (ui/hierarchical_collection/ui.data_converter.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _class = _interopRequireDefault(require(\"../../core/class\"));\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _ui = _interopRequireDefault(require(\"../../ui/widget/ui.errors\"));\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _type = require(\"../../core/utils/type\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar DataConverter = _class.default.inherit({\n  ctor: function () {\n    this._dataStructure = [];\n    this._itemsCount = 0;\n    this._visibleItemsCount = 0;\n  },\n  _indexByKey: {},\n  _convertItemsToNodes: function (items, parentKey) {\n    var that = this;\n    (0, _iterator.each)(items, function (_, item) {\n      var parentId = (0, _type.isDefined)(parentKey) ? parentKey : that._getParentId(item);\n\n      var node = that._convertItemToNode(item, parentId);\n\n      that._dataStructure.push(node);\n\n      that._checkForDuplicateId(node.internalFields.key);\n\n      that._indexByKey[node.internalFields.key] = that._dataStructure.length - 1;\n\n      if (that._itemHasChildren(item)) {\n        that._convertItemsToNodes(that._dataAccessors.getters.items(item), node.internalFields.key);\n      }\n    });\n  },\n  _checkForDuplicateId: function (key) {\n    if ((0, _type.isDefined)(this._indexByKey[key])) {\n      throw _ui.default.Error(\"E1040\", key);\n    }\n  },\n  _getParentId: function (item) {\n    return \"plain\" === this._dataType ? this._dataAccessors.getters.parentKey(item) : void 0;\n  },\n  _itemHasChildren: function (item) {\n    if (\"plain\" === this._dataType) {\n      return;\n    }\n\n    var items = this._dataAccessors.getters.items(item);\n\n    return items && items.length;\n  },\n  _getUniqueKey: function (item) {\n    var keyGetter = this._dataAccessors.getters.key;\n    var itemKey = keyGetter(item);\n    var isCorrectKey = keyGetter && (itemKey || 0 === itemKey) && (0, _type.isPrimitive)(itemKey);\n    return isCorrectKey ? itemKey : this.getItemsCount();\n  },\n  _convertItemToNode: function (item, parentKey) {\n    this._itemsCount++;\n    false !== item.visible && this._visibleItemsCount++;\n    var that = this;\n    var node = {\n      internalFields: {\n        disabled: that._dataAccessors.getters.disabled(item, {\n          defaultValue: false\n        }),\n        expanded: that._dataAccessors.getters.expanded(item, {\n          defaultValue: false\n        }),\n        selected: that._dataAccessors.getters.selected(item, {\n          defaultValue: false\n        }),\n        key: that._getUniqueKey(item),\n        parentKey: (0, _type.isDefined)(parentKey) ? parentKey : that._rootValue,\n        item: that._makeObjectFromPrimitive(item),\n        childrenKeys: []\n      }\n    };\n    (0, _extend.extend)(node, item);\n    delete node.items;\n    return node;\n  },\n  setChildrenKeys: function () {\n    var that = this;\n    (0, _iterator.each)(this._dataStructure, function (_, node) {\n      if (node.internalFields.parentKey === that._rootValue) {\n        return;\n      }\n\n      var parent = that.getParentNode(node);\n      parent && parent.internalFields.childrenKeys.push(node.internalFields.key);\n    });\n  },\n  _makeObjectFromPrimitive: function (item) {\n    if ((0, _type.isPrimitive)(item)) {\n      var key = item;\n      item = {};\n\n      this._dataAccessors.setters.key(item, key);\n    }\n\n    return item;\n  },\n  _convertToPublicNode: function (node, parent) {\n    if (!node) {\n      return null;\n    }\n\n    var publicNode = {\n      text: this._dataAccessors.getters.display(node),\n      key: node.internalFields.key,\n      selected: node.internalFields.selected,\n      expanded: node.internalFields.expanded,\n      disabled: node.internalFields.disabled,\n      parent: parent || null,\n      itemData: node.internalFields.item,\n      children: [],\n      items: []\n    };\n\n    if (publicNode.parent) {\n      publicNode.parent.children.push(publicNode);\n      publicNode.parent.items.push(publicNode);\n    }\n\n    return publicNode;\n  },\n  convertToPublicNodes: function (data, parent) {\n    if (!data.length) {\n      return [];\n    }\n\n    var that = this;\n    var publicNodes = [];\n    (0, _iterator.each)(data, function (_, node) {\n      node = (0, _type.isPrimitive)(node) ? that._getByKey(node) : node;\n\n      var publicNode = that._convertToPublicNode(node, parent);\n\n      publicNode.children = that.convertToPublicNodes(node.internalFields.childrenKeys, publicNode);\n      publicNodes.push(publicNode);\n      node.internalFields.publicNode = publicNode;\n    });\n    return publicNodes;\n  },\n  setDataAccessors: function (accessors) {\n    this._dataAccessors = accessors;\n  },\n  _getByKey: function (key) {\n    return this._dataStructure[this.getIndexByKey(key)] || null;\n  },\n  getParentNode: function (node) {\n    return this._getByKey(node.internalFields.parentKey);\n  },\n  getByKey: function getByKey(data, key) {\n    if (null === key || void 0 === key) {\n      return null;\n    }\n\n    var result = null;\n    var that = this;\n\n    var getByKey = function (data, key) {\n      (0, _iterator.each)(data, function (_, element) {\n        var currentElementKey = element.internalFields && element.internalFields.key || that._dataAccessors.getters.key(element);\n\n        if (currentElementKey.toString() === key.toString()) {\n          result = element;\n          return false;\n        }\n      });\n      return result;\n    };\n\n    return getByKey(data, key);\n  },\n  getItemsCount: function () {\n    return this._itemsCount;\n  },\n  getVisibleItemsCount: function () {\n    return this._visibleItemsCount;\n  },\n  updateIndexByKey: function () {\n    var that = this;\n    this._indexByKey = {};\n    (0, _iterator.each)(this._dataStructure, function (index, node) {\n      that._checkForDuplicateId(node.internalFields.key);\n\n      that._indexByKey[node.internalFields.key] = index;\n    });\n  },\n  updateChildrenKeys: function () {\n    this._indexByKey = {};\n    this.removeChildrenKeys();\n    this.updateIndexByKey();\n    this.setChildrenKeys();\n  },\n  removeChildrenKeys: function () {\n    this._indexByKey = {};\n    (0, _iterator.each)(this._dataStructure, function (index, node) {\n      node.internalFields.childrenKeys = [];\n    });\n  },\n  getIndexByKey: function (key) {\n    return this._indexByKey[key];\n  },\n  createPlainStructure: function (items, rootValue, dataType) {\n    this._itemsCount = 0;\n    this._visibleItemsCount = 0;\n    this._rootValue = rootValue;\n    this._dataType = dataType;\n    this._indexByKey = {};\n\n    this._convertItemsToNodes(items);\n\n    this.setChildrenKeys();\n    return this._dataStructure;\n  }\n});\n\nvar _default = DataConverter;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/node_modules/devextreme/ui/hierarchical_collection/ui.data_converter.js"],"names":["exports","default","_class","_interopRequireDefault","require","_extend","_ui","_iterator","_type","obj","__esModule","DataConverter","inherit","ctor","_dataStructure","_itemsCount","_visibleItemsCount","_indexByKey","_convertItemsToNodes","items","parentKey","that","each","_","item","parentId","isDefined","_getParentId","node","_convertItemToNode","push","_checkForDuplicateId","internalFields","key","length","_itemHasChildren","_dataAccessors","getters","Error","_dataType","_getUniqueKey","keyGetter","itemKey","isCorrectKey","isPrimitive","getItemsCount","visible","disabled","defaultValue","expanded","selected","_rootValue","_makeObjectFromPrimitive","childrenKeys","extend","setChildrenKeys","parent","getParentNode","setters","_convertToPublicNode","publicNode","text","display","itemData","children","convertToPublicNodes","data","publicNodes","_getByKey","setDataAccessors","accessors","getIndexByKey","getByKey","result","element","currentElementKey","toString","getVisibleItemsCount","updateIndexByKey","index","updateChildrenKeys","removeChildrenKeys","createPlainStructure","rootValue","dataType","_default","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/hierarchical_collection/ui.data_converter.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _class = _interopRequireDefault(require(\"../../core/class\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _ui = _interopRequireDefault(require(\"../../ui/widget/ui.errors\"));\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _type = require(\"../../core/utils/type\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar DataConverter = _class.default.inherit({\r\n    ctor: function() {\r\n        this._dataStructure = [];\r\n        this._itemsCount = 0;\r\n        this._visibleItemsCount = 0\r\n    },\r\n    _indexByKey: {},\r\n    _convertItemsToNodes: function(items, parentKey) {\r\n        var that = this;\r\n        (0, _iterator.each)(items, function(_, item) {\r\n            var parentId = (0, _type.isDefined)(parentKey) ? parentKey : that._getParentId(item);\r\n            var node = that._convertItemToNode(item, parentId);\r\n            that._dataStructure.push(node);\r\n            that._checkForDuplicateId(node.internalFields.key);\r\n            that._indexByKey[node.internalFields.key] = that._dataStructure.length - 1;\r\n            if (that._itemHasChildren(item)) {\r\n                that._convertItemsToNodes(that._dataAccessors.getters.items(item), node.internalFields.key)\r\n            }\r\n        })\r\n    },\r\n    _checkForDuplicateId: function(key) {\r\n        if ((0, _type.isDefined)(this._indexByKey[key])) {\r\n            throw _ui.default.Error(\"E1040\", key)\r\n        }\r\n    },\r\n    _getParentId: function(item) {\r\n        return \"plain\" === this._dataType ? this._dataAccessors.getters.parentKey(item) : void 0\r\n    },\r\n    _itemHasChildren: function(item) {\r\n        if (\"plain\" === this._dataType) {\r\n            return\r\n        }\r\n        var items = this._dataAccessors.getters.items(item);\r\n        return items && items.length\r\n    },\r\n    _getUniqueKey: function(item) {\r\n        var keyGetter = this._dataAccessors.getters.key;\r\n        var itemKey = keyGetter(item);\r\n        var isCorrectKey = keyGetter && (itemKey || 0 === itemKey) && (0, _type.isPrimitive)(itemKey);\r\n        return isCorrectKey ? itemKey : this.getItemsCount()\r\n    },\r\n    _convertItemToNode: function(item, parentKey) {\r\n        this._itemsCount++;\r\n        false !== item.visible && this._visibleItemsCount++;\r\n        var that = this;\r\n        var node = {\r\n            internalFields: {\r\n                disabled: that._dataAccessors.getters.disabled(item, {\r\n                    defaultValue: false\r\n                }),\r\n                expanded: that._dataAccessors.getters.expanded(item, {\r\n                    defaultValue: false\r\n                }),\r\n                selected: that._dataAccessors.getters.selected(item, {\r\n                    defaultValue: false\r\n                }),\r\n                key: that._getUniqueKey(item),\r\n                parentKey: (0, _type.isDefined)(parentKey) ? parentKey : that._rootValue,\r\n                item: that._makeObjectFromPrimitive(item),\r\n                childrenKeys: []\r\n            }\r\n        };\r\n        (0, _extend.extend)(node, item);\r\n        delete node.items;\r\n        return node\r\n    },\r\n    setChildrenKeys: function() {\r\n        var that = this;\r\n        (0, _iterator.each)(this._dataStructure, function(_, node) {\r\n            if (node.internalFields.parentKey === that._rootValue) {\r\n                return\r\n            }\r\n            var parent = that.getParentNode(node);\r\n            parent && parent.internalFields.childrenKeys.push(node.internalFields.key)\r\n        })\r\n    },\r\n    _makeObjectFromPrimitive: function(item) {\r\n        if ((0, _type.isPrimitive)(item)) {\r\n            var key = item;\r\n            item = {};\r\n            this._dataAccessors.setters.key(item, key)\r\n        }\r\n        return item\r\n    },\r\n    _convertToPublicNode: function(node, parent) {\r\n        if (!node) {\r\n            return null\r\n        }\r\n        var publicNode = {\r\n            text: this._dataAccessors.getters.display(node),\r\n            key: node.internalFields.key,\r\n            selected: node.internalFields.selected,\r\n            expanded: node.internalFields.expanded,\r\n            disabled: node.internalFields.disabled,\r\n            parent: parent || null,\r\n            itemData: node.internalFields.item,\r\n            children: [],\r\n            items: []\r\n        };\r\n        if (publicNode.parent) {\r\n            publicNode.parent.children.push(publicNode);\r\n            publicNode.parent.items.push(publicNode)\r\n        }\r\n        return publicNode\r\n    },\r\n    convertToPublicNodes: function(data, parent) {\r\n        if (!data.length) {\r\n            return []\r\n        }\r\n        var that = this;\r\n        var publicNodes = [];\r\n        (0, _iterator.each)(data, function(_, node) {\r\n            node = (0, _type.isPrimitive)(node) ? that._getByKey(node) : node;\r\n            var publicNode = that._convertToPublicNode(node, parent);\r\n            publicNode.children = that.convertToPublicNodes(node.internalFields.childrenKeys, publicNode);\r\n            publicNodes.push(publicNode);\r\n            node.internalFields.publicNode = publicNode\r\n        });\r\n        return publicNodes\r\n    },\r\n    setDataAccessors: function(accessors) {\r\n        this._dataAccessors = accessors\r\n    },\r\n    _getByKey: function(key) {\r\n        return this._dataStructure[this.getIndexByKey(key)] || null\r\n    },\r\n    getParentNode: function(node) {\r\n        return this._getByKey(node.internalFields.parentKey)\r\n    },\r\n    getByKey: function getByKey(data, key) {\r\n        if (null === key || void 0 === key) {\r\n            return null\r\n        }\r\n        var result = null;\r\n        var that = this;\r\n        var getByKey = function(data, key) {\r\n            (0, _iterator.each)(data, function(_, element) {\r\n                var currentElementKey = element.internalFields && element.internalFields.key || that._dataAccessors.getters.key(element);\r\n                if (currentElementKey.toString() === key.toString()) {\r\n                    result = element;\r\n                    return false\r\n                }\r\n            });\r\n            return result\r\n        };\r\n        return getByKey(data, key)\r\n    },\r\n    getItemsCount: function() {\r\n        return this._itemsCount\r\n    },\r\n    getVisibleItemsCount: function() {\r\n        return this._visibleItemsCount\r\n    },\r\n    updateIndexByKey: function() {\r\n        var that = this;\r\n        this._indexByKey = {};\r\n        (0, _iterator.each)(this._dataStructure, function(index, node) {\r\n            that._checkForDuplicateId(node.internalFields.key);\r\n            that._indexByKey[node.internalFields.key] = index\r\n        })\r\n    },\r\n    updateChildrenKeys: function() {\r\n        this._indexByKey = {};\r\n        this.removeChildrenKeys();\r\n        this.updateIndexByKey();\r\n        this.setChildrenKeys()\r\n    },\r\n    removeChildrenKeys: function() {\r\n        this._indexByKey = {};\r\n        (0, _iterator.each)(this._dataStructure, function(index, node) {\r\n            node.internalFields.childrenKeys = []\r\n        })\r\n    },\r\n    getIndexByKey: function(key) {\r\n        return this._indexByKey[key]\r\n    },\r\n    createPlainStructure: function(items, rootValue, dataType) {\r\n        this._itemsCount = 0;\r\n        this._visibleItemsCount = 0;\r\n        this._rootValue = rootValue;\r\n        this._dataType = dataType;\r\n        this._indexByKey = {};\r\n        this._convertItemsToNodes(items);\r\n        this.setChildrenKeys();\r\n        return this._dataStructure\r\n    }\r\n});\r\nvar _default = DataConverter;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}