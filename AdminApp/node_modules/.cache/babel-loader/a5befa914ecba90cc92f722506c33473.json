{"ast":null,"code":"/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.export_mixin.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _default = {\n  _getEmptyCell: function () {\n    return {\n      text: \"\",\n      value: void 0,\n      colspan: 1,\n      rowspan: 1\n    };\n  },\n  _defaultSetter: function (value) {\n    return !value ? 1 : value;\n  },\n  _cloneItem: function (item) {\n    return (0, _extend.extend)({}, item, this._getEmptyCell());\n  },\n  _prepareItems: function (items) {\n    var that = this;\n    var resultItems = [];\n    var cols = (items[0] || []).reduce(function (sum, item) {\n      return sum + that._defaultSetter(item.colspan);\n    }, 0);\n\n    var getItem = function (items) {\n      var rowIndex = 0;\n      var cellIndex = 0;\n      return function () {\n        var row = items[rowIndex] || [];\n        var item = row[cellIndex++];\n\n        if (cellIndex >= row.length) {\n          rowIndex++;\n          cellIndex = 0;\n        }\n\n        if (item) {\n          item.colspan = that._defaultSetter(item.colspan);\n          item.rowspan = that._defaultSetter(item.rowspan);\n        }\n\n        return item;\n      };\n    }(items);\n\n    function addItem(rowIndex, cellIndex, item) {\n      var row = resultItems[rowIndex] = resultItems[rowIndex] || [];\n      row[cellIndex] = item;\n\n      if (item.colspan > 1 || item.rowspan > 1) {\n        var clone = that._cloneItem(item);\n\n        for (var c = 1; c < item.colspan; c++) {\n          addItem(rowIndex, cellIndex + c, clone);\n        }\n\n        for (var r = 1; r < item.rowspan; r++) {\n          for (var _c = 0; _c < item.colspan; _c++) {\n            addItem(rowIndex + r, cellIndex + _c, clone);\n          }\n        }\n      }\n    }\n\n    var item = getItem();\n    var rowIndex = 0;\n\n    while (item) {\n      for (var cellIndex = 0; cellIndex < cols; cellIndex++) {\n        if (!item) {\n          break;\n        }\n\n        if (resultItems[rowIndex] && resultItems[rowIndex][cellIndex]) {\n          continue;\n        }\n\n        addItem(rowIndex, cellIndex, item);\n        cellIndex += item.colspan - 1;\n        item = getItem();\n      }\n\n      rowIndex++;\n    }\n\n    return resultItems;\n  }\n};\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/node_modules/devextreme/ui/grid_core/ui.grid_core.export_mixin.js"],"names":["exports","default","_extend","require","_default","_getEmptyCell","text","value","colspan","rowspan","_defaultSetter","_cloneItem","item","extend","_prepareItems","items","that","resultItems","cols","reduce","sum","getItem","rowIndex","cellIndex","row","length","addItem","clone","c","r","_c","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.export_mixin.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _default = {\r\n    _getEmptyCell: function() {\r\n        return {\r\n            text: \"\",\r\n            value: void 0,\r\n            colspan: 1,\r\n            rowspan: 1\r\n        }\r\n    },\r\n    _defaultSetter: function(value) {\r\n        return !value ? 1 : value\r\n    },\r\n    _cloneItem: function(item) {\r\n        return (0, _extend.extend)({}, item, this._getEmptyCell())\r\n    },\r\n    _prepareItems: function(items) {\r\n        var that = this;\r\n        var resultItems = [];\r\n        var cols = (items[0] || []).reduce(function(sum, item) {\r\n            return sum + that._defaultSetter(item.colspan)\r\n        }, 0);\r\n        var getItem = function(items) {\r\n            var rowIndex = 0;\r\n            var cellIndex = 0;\r\n            return function() {\r\n                var row = items[rowIndex] || [];\r\n                var item = row[cellIndex++];\r\n                if (cellIndex >= row.length) {\r\n                    rowIndex++;\r\n                    cellIndex = 0\r\n                }\r\n                if (item) {\r\n                    item.colspan = that._defaultSetter(item.colspan);\r\n                    item.rowspan = that._defaultSetter(item.rowspan)\r\n                }\r\n                return item\r\n            }\r\n        }(items);\r\n\r\n        function addItem(rowIndex, cellIndex, item) {\r\n            var row = resultItems[rowIndex] = resultItems[rowIndex] || [];\r\n            row[cellIndex] = item;\r\n            if (item.colspan > 1 || item.rowspan > 1) {\r\n                var clone = that._cloneItem(item);\r\n                for (var c = 1; c < item.colspan; c++) {\r\n                    addItem(rowIndex, cellIndex + c, clone)\r\n                }\r\n                for (var r = 1; r < item.rowspan; r++) {\r\n                    for (var _c = 0; _c < item.colspan; _c++) {\r\n                        addItem(rowIndex + r, cellIndex + _c, clone)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        var item = getItem();\r\n        var rowIndex = 0;\r\n        while (item) {\r\n            for (var cellIndex = 0; cellIndex < cols; cellIndex++) {\r\n                if (!item) {\r\n                    break\r\n                }\r\n                if (resultItems[rowIndex] && resultItems[rowIndex][cellIndex]) {\r\n                    continue\r\n                }\r\n                addItem(rowIndex, cellIndex, item);\r\n                cellIndex += item.colspan - 1;\r\n                item = getItem()\r\n            }\r\n            rowIndex++\r\n        }\r\n        return resultItems\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}