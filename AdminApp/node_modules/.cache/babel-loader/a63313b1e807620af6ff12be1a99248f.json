{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.element = exports.modifier = void 0;\n\nvar element = function element(el, base) {\n  return \"\".concat(base, \"__\").concat(el);\n};\n\nexports.element = element;\n\nvar modifier = function modifier(modifiers, base) {\n  if (!modifiers) {\n    return null;\n  }\n\n  var finalClass = [];\n  var classNames = modifiers.split(' ');\n  classNames.forEach(function (singleClass) {\n    finalClass.push(\"\".concat(base, \"--\").concat(singleClass));\n  });\n  return finalClass.join(' ');\n};\n\nexports.modifier = modifier;","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/AdminApp/node_modules/react-popup/dist/Bem.js"],"names":["Object","defineProperty","exports","value","element","modifier","el","base","concat","modifiers","finalClass","classNames","split","forEach","singleClass","push","join"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBF,OAAO,CAACG,QAAR,GAAmB,KAAK,CAA1C;;AAEA,IAAID,OAAO,GAAG,SAASA,OAAT,CAAiBE,EAAjB,EAAqBC,IAArB,EAA2B;AACvC,SAAO,GAAGC,MAAH,CAAUD,IAAV,EAAgB,IAAhB,EAAsBC,MAAtB,CAA6BF,EAA7B,CAAP;AACD,CAFD;;AAIAJ,OAAO,CAACE,OAAR,GAAkBA,OAAlB;;AAEA,IAAIC,QAAQ,GAAG,SAASA,QAAT,CAAkBI,SAAlB,EAA6BF,IAA7B,EAAmC;AAChD,MAAI,CAACE,SAAL,EAAgB;AACd,WAAO,IAAP;AACD;;AAED,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIC,UAAU,GAAGF,SAAS,CAACG,KAAV,CAAgB,GAAhB,CAAjB;AACAD,EAAAA,UAAU,CAACE,OAAX,CAAmB,UAAUC,WAAV,EAAuB;AACxCJ,IAAAA,UAAU,CAACK,IAAX,CAAgB,GAAGP,MAAH,CAAUD,IAAV,EAAgB,IAAhB,EAAsBC,MAAtB,CAA6BM,WAA7B,CAAhB;AACD,GAFD;AAGA,SAAOJ,UAAU,CAACM,IAAX,CAAgB,GAAhB,CAAP;AACD,CAXD;;AAaAd,OAAO,CAACG,QAAR,GAAmBA,QAAnB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.element = exports.modifier = void 0;\n\nvar element = function element(el, base) {\n  return \"\".concat(base, \"__\").concat(el);\n};\n\nexports.element = element;\n\nvar modifier = function modifier(modifiers, base) {\n  if (!modifiers) {\n    return null;\n  }\n\n  var finalClass = [];\n  var classNames = modifiers.split(' ');\n  classNames.forEach(function (singleClass) {\n    finalClass.push(\"\".concat(base, \"--\").concat(singleClass));\n  });\n  return finalClass.join(' ');\n};\n\nexports.modifier = modifier;"]},"metadata":{},"sourceType":"script"}