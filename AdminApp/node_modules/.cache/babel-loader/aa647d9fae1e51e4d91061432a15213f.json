{"ast":null,"code":"/**\r\n * DevExtreme (ui/date_box/ui.date_box.base.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _window = require(\"../../core/utils/window\");\n\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _dom = require(\"../../core/utils/dom\");\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _version = require(\"../../core/utils/version\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _support = require(\"../../core/utils/support\");\n\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\n\nvar _config = _interopRequireDefault(require(\"../../core/config\"));\n\nvar _date = _interopRequireDefault(require(\"../../core/utils/date\"));\n\nvar _ui = _interopRequireDefault(require(\"./ui.date_utils\"));\n\nvar _date_serialization = _interopRequireDefault(require(\"../../core/utils/date_serialization\"));\n\nvar _ui2 = _interopRequireDefault(require(\"../drop_down_editor/ui.drop_down_editor\"));\n\nvar _date2 = _interopRequireDefault(require(\"../../localization/date\"));\n\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\n\nvar _uiDate_boxStrategy = _interopRequireDefault(require(\"./ui.date_box.strategy.calendar\"));\n\nvar _uiDate_boxStrategy2 = _interopRequireDefault(require(\"./ui.date_box.strategy.date_view\"));\n\nvar _uiDate_boxStrategy3 = _interopRequireDefault(require(\"./ui.date_box.strategy.native\"));\n\nvar _uiDate_boxStrategy4 = _interopRequireDefault(require(\"./ui.date_box.strategy.calendar_with_time\"));\n\nvar _uiDate_boxStrategy5 = _interopRequireDefault(require(\"./ui.date_box.strategy.list\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar window = (0, _window.getWindow)();\nvar DATEBOX_CLASS = \"dx-datebox\";\nvar DX_AUTO_WIDTH_CLASS = \"dx-auto-width\";\nvar DX_INVALID_BADGE_CLASS = \"dx-show-invalid-badge\";\nvar DX_CLEAR_BUTTON_CLASS = \"dx-clear-button-area\";\nvar DATEBOX_WRAPPER_CLASS = \"dx-datebox-wrapper\";\nvar PICKER_TYPE = {\n  calendar: \"calendar\",\n  rollers: \"rollers\",\n  list: \"list\",\n  \"native\": \"native\"\n};\nvar TYPE = {\n  date: \"date\",\n  datetime: \"datetime\",\n  time: \"time\"\n};\nvar STRATEGY_NAME = {\n  calendar: \"Calendar\",\n  dateView: \"DateView\",\n  \"native\": \"Native\",\n  calendarWithTime: \"CalendarWithTime\",\n  list: \"List\"\n};\nvar STRATEGY_CLASSES = {\n  Calendar: _uiDate_boxStrategy.default,\n  DateView: _uiDate_boxStrategy2.default,\n  Native: _uiDate_boxStrategy3.default,\n  CalendarWithTime: _uiDate_boxStrategy4.default,\n  List: _uiDate_boxStrategy5.default\n};\n\nvar DateBox = _ui2.default.inherit({\n  _supportedKeys: function () {\n    return (0, _extend.extend)(this.callBase(), this._strategy.supportedKeys());\n  },\n  _renderButtonContainers: function () {\n    this.callBase.apply(this, arguments);\n\n    this._strategy.customizeButtons();\n  },\n  _getDefaultOptions: function () {\n    return (0, _extend.extend)(this.callBase(), {\n      type: \"date\",\n      showAnalogClock: true,\n      value: null,\n      dateSerializationFormat: void 0,\n      min: void 0,\n      max: void 0,\n      displayFormat: null,\n      interval: 30,\n      disabledDates: null,\n      pickerType: PICKER_TYPE.calendar,\n      invalidDateMessage: _message.default.format(\"dxDateBox-validation-datetime\"),\n      dateOutOfRangeMessage: _message.default.format(\"validation-range\"),\n      applyButtonText: _message.default.format(\"OK\"),\n      adaptivityEnabled: false,\n      calendarOptions: {},\n      useHiddenSubmitElement: true\n    });\n  },\n  _defaultOptionsRules: function () {\n    return this.callBase().concat([{\n      device: {\n        platform: \"ios\"\n      },\n      options: {\n        \"dropDownOptions.showTitle\": true\n      }\n    }, {\n      device: {\n        platform: \"android\"\n      },\n      options: {\n        buttonsLocation: \"bottom after\"\n      }\n    }, {\n      device: function () {\n        var realDevice = _devices.default.real();\n\n        var platform = realDevice.platform;\n        return \"ios\" === platform || \"android\" === platform;\n      },\n      options: {\n        pickerType: PICKER_TYPE.native\n      }\n    }, {\n      device: function (currentDevice) {\n        var realDevice = _devices.default.real();\n\n        var platform = realDevice.platform;\n        var version = realDevice.version;\n        return \"generic\" === platform && \"desktop\" !== currentDevice.deviceType || \"android\" === platform && (0, _version.compare)(version, [4, 4]) < 0;\n      },\n      options: {\n        pickerType: PICKER_TYPE.rollers\n      }\n    }, {\n      device: {\n        platform: \"generic\",\n        deviceType: \"desktop\"\n      },\n      options: {\n        buttonsLocation: \"bottom after\"\n      }\n    }]);\n  },\n  _initOptions: function (options) {\n    this._userOptions = (0, _extend.extend)({}, options);\n    this.callBase(options);\n\n    this._updatePickerOptions();\n  },\n  _updatePickerOptions: function () {\n    var pickerType = this.option(\"pickerType\");\n    var type = this.option(\"type\");\n\n    if (pickerType === PICKER_TYPE.list && (type === TYPE.datetime || type === TYPE.date)) {\n      pickerType = PICKER_TYPE.calendar;\n    }\n\n    if (type === TYPE.time && pickerType === PICKER_TYPE.calendar) {\n      pickerType = PICKER_TYPE.list;\n    }\n\n    this.option(\"showDropDownButton\", \"generic\" !== _devices.default.real().platform || pickerType !== PICKER_TYPE.native);\n    this._pickerType = pickerType;\n  },\n  _init: function () {\n    this._initStrategy();\n\n    this.option((0, _extend.extend)({}, this._strategy.getDefaultOptions(), this._userOptions));\n    delete this._userOptions;\n    this.callBase();\n  },\n  _toLowerCaseFirstLetter: function (string) {\n    return string.charAt(0).toLowerCase() + string.substr(1);\n  },\n  _initStrategy: function () {\n    var strategyName = this._getStrategyName(this._getFormatType());\n\n    var strategy = STRATEGY_CLASSES[strategyName];\n\n    if (!(this._strategy && this._strategy.NAME === strategyName)) {\n      this._strategy = new strategy(this);\n    }\n  },\n  _getFormatType: function () {\n    var currentType = this.option(\"type\");\n    var isTime = /h|m|s/g.test(currentType);\n    var isDate = /d|M|Y/g.test(currentType);\n    var type = \"\";\n\n    if (isDate) {\n      type += TYPE.date;\n    }\n\n    if (isTime) {\n      type += TYPE.time;\n    }\n\n    return type;\n  },\n  _getStrategyName: function (type) {\n    var pickerType = this._pickerType;\n\n    if (pickerType === PICKER_TYPE.rollers) {\n      return STRATEGY_NAME.dateView;\n    } else {\n      if (pickerType === PICKER_TYPE.native) {\n        return STRATEGY_NAME.native;\n      }\n    }\n\n    if (type === TYPE.date) {\n      return STRATEGY_NAME.calendar;\n    }\n\n    if (type === TYPE.datetime) {\n      return STRATEGY_NAME.calendarWithTime;\n    }\n\n    return STRATEGY_NAME.list;\n  },\n  _initMarkup: function () {\n    this.$element().addClass(DATEBOX_CLASS);\n    this.callBase();\n\n    this._refreshFormatClass();\n\n    this._refreshPickerTypeClass();\n\n    this._strategy.renderInputMinMax(this._input());\n  },\n  _render: function () {\n    this.callBase();\n\n    this._formatValidationIcon();\n  },\n  _renderDimensions: function () {\n    this.callBase();\n    this.$element().toggleClass(DX_AUTO_WIDTH_CLASS, !this.option(\"width\"));\n\n    this._dimensionChanged();\n  },\n  _dimensionChanged: function () {\n    this.callBase(arguments);\n\n    if (this._popup) {\n      var _this$_strategy$_upda, _this$_strategy;\n\n      null === (_this$_strategy$_upda = (_this$_strategy = this._strategy)._updatePopupHeight) || void 0 === _this$_strategy$_upda ? void 0 : _this$_strategy$_upda.call(_this$_strategy);\n    }\n  },\n  _refreshFormatClass: function () {\n    var $element = this.$element();\n    (0, _iterator.each)(TYPE, function (_, item) {\n      $element.removeClass(DATEBOX_CLASS + \"-\" + item);\n    });\n    $element.addClass(DATEBOX_CLASS + \"-\" + this.option(\"type\"));\n  },\n  _refreshPickerTypeClass: function () {\n    var $element = this.$element();\n    (0, _iterator.each)(PICKER_TYPE, function (_, item) {\n      $element.removeClass(DATEBOX_CLASS + \"-\" + item);\n    });\n    $element.addClass(DATEBOX_CLASS + \"-\" + this._pickerType);\n  },\n  _formatValidationIcon: function () {\n    if (!(0, _window.hasWindow)()) {\n      return;\n    }\n\n    var inputElement = this._input().get(0);\n\n    var isRtlEnabled = this.option(\"rtlEnabled\");\n\n    var clearButtonWidth = this._getClearButtonWidth();\n\n    var longestElementDimensions = this._getLongestElementDimensions();\n\n    var curWidth = parseFloat(window.getComputedStyle(inputElement).width) - clearButtonWidth;\n    var shouldHideValidationIcon = longestElementDimensions.width > curWidth;\n    var style = inputElement.style;\n    this.$element().toggleClass(DX_INVALID_BADGE_CLASS, !shouldHideValidationIcon);\n\n    if (shouldHideValidationIcon) {\n      if (void 0 === this._storedPadding) {\n        this._storedPadding = isRtlEnabled ? longestElementDimensions.leftPadding : longestElementDimensions.rightPadding;\n      }\n\n      isRtlEnabled ? style.paddingLeft = 0 : style.paddingRight = 0;\n    } else {\n      isRtlEnabled ? style.paddingLeft = this._storedPadding + \"px\" : style.paddingRight = this._storedPadding + \"px\";\n    }\n  },\n  _getClearButtonWidth: function () {\n    var clearButtonWidth = 0;\n\n    if (this._isClearButtonVisible() && \"\" === this._input().val()) {\n      var clearButtonElement = this.$element().find(\".\" + DX_CLEAR_BUTTON_CLASS).get(0);\n      clearButtonWidth = parseFloat(window.getComputedStyle(clearButtonElement).width);\n    }\n\n    return clearButtonWidth;\n  },\n  _getLongestElementDimensions: function () {\n    var format = this._strategy.getDisplayFormat(this.option(\"displayFormat\"));\n\n    var longestValue = _date2.default.format(_ui.default.getLongestDate(format, _date2.default.getMonthNames(), _date2.default.getDayNames()), format);\n\n    var $input = this._input();\n\n    var inputElement = $input.get(0);\n    var $longestValueElement = (0, _dom.createTextElementHiddenCopy)($input, longestValue);\n    var isPaddingStored = void 0 !== this._storedPadding;\n    var storedPadding = !isPaddingStored ? 0 : this._storedPadding;\n    $longestValueElement.appendTo(this.$element());\n    var elementWidth = parseFloat(window.getComputedStyle($longestValueElement.get(0)).width);\n    var rightPadding = parseFloat(window.getComputedStyle(inputElement).paddingRight);\n    var leftPadding = parseFloat(window.getComputedStyle(inputElement).paddingLeft);\n    var necessaryWidth = elementWidth + leftPadding + rightPadding + storedPadding;\n    $longestValueElement.remove();\n    return {\n      width: necessaryWidth,\n      leftPadding: leftPadding,\n      rightPadding: rightPadding\n    };\n  },\n  _getKeyboardListeners: function () {\n    return this.callBase().concat([this._strategy && this._strategy.getKeyboardListener()]);\n  },\n  _renderPopup: function () {\n    this.callBase();\n\n    this._popup._wrapper().addClass(DATEBOX_WRAPPER_CLASS);\n\n    this._renderPopupWrapper();\n  },\n  _popupConfig: function () {\n    var popupConfig = this.callBase();\n    return (0, _extend.extend)(this._strategy.popupConfig(popupConfig), {\n      title: this._getPopupTitle(),\n      dragEnabled: false\n    });\n  },\n  _renderPopupWrapper: function () {\n    if (!this._popup) {\n      return;\n    }\n\n    var $element = this.$element();\n    var classPostfixes = (0, _extend.extend)({}, TYPE, PICKER_TYPE);\n    (0, _iterator.each)(classPostfixes, function (_, item) {\n      $element.removeClass(DATEBOX_WRAPPER_CLASS + \"-\" + item);\n    }.bind(this));\n\n    this._popup._wrapper().addClass(DATEBOX_WRAPPER_CLASS + \"-\" + this.option(\"type\")).addClass(DATEBOX_WRAPPER_CLASS + \"-\" + this._pickerType);\n  },\n  _renderPopupContent: function () {\n    this.callBase();\n\n    this._strategy.renderPopupContent();\n  },\n  _getFirstPopupElement: function () {\n    return this._strategy.getFirstPopupElement() || this.callBase();\n  },\n  _getLastPopupElement: function () {\n    return this._strategy.getLastPopupElement() || this.callBase();\n  },\n  _popupShowingHandler: function () {\n    this.callBase();\n\n    this._strategy.popupShowingHandler();\n  },\n  _popupShownHandler: function () {\n    this.callBase();\n\n    this._strategy.renderOpenedState();\n  },\n  _popupHiddenHandler: function () {\n    this.callBase();\n\n    this._strategy.renderOpenedState();\n\n    this._strategy.popupHiddenHandler();\n  },\n  _visibilityChanged: function (visible) {\n    if (visible) {\n      this._formatValidationIcon();\n    }\n  },\n  _clearValueHandler: function (e) {\n    this.option(\"text\", \"\");\n    this.callBase(e);\n  },\n  _readOnlyPropValue: function () {\n    if (this._pickerType === PICKER_TYPE.rollers) {\n      return true;\n    }\n\n    var platform = _devices.default.real().platform;\n\n    var isCustomValueDisabled = this._isNativeType() && (\"ios\" === platform || \"android\" === platform);\n\n    if (isCustomValueDisabled) {\n      return this.option(\"readOnly\");\n    }\n\n    return this.callBase();\n  },\n  _isClearButtonVisible: function () {\n    return this.callBase() && !this._isNativeType();\n  },\n  _renderValue: function () {\n    var value = this.dateOption(\"value\");\n    this.option(\"text\", this._getDisplayedText(value));\n\n    this._strategy.renderValue();\n\n    return this.callBase();\n  },\n  _setSubmitValue: function () {\n    var value = this.dateOption(\"value\");\n    var dateSerializationFormat = this.option(\"dateSerializationFormat\");\n\n    var submitFormat = _ui.default.SUBMIT_FORMATS_MAP[this.option(\"type\")];\n\n    var submitValue = dateSerializationFormat ? _date_serialization.default.serializeDate(value, dateSerializationFormat) : _ui.default.toStandardDateFormat(value, submitFormat);\n\n    this._getSubmitElement().val(submitValue);\n  },\n  _getDisplayedText: function (value) {\n    var mode = this.option(\"mode\");\n    var displayedText;\n\n    if (\"text\" === mode) {\n      var displayFormat = this._strategy.getDisplayFormat(this.option(\"displayFormat\"));\n\n      displayedText = _date2.default.format(value, displayFormat);\n    } else {\n      var format = this._getFormatByMode(mode);\n\n      if (format) {\n        displayedText = _date2.default.format(value, format);\n      } else {\n        displayedText = _ui.default.toStandardDateFormat(value, mode);\n      }\n    }\n\n    return displayedText;\n  },\n  _getFormatByMode: function (mode) {\n    return (0, _support.inputType)(mode) ? null : _ui.default.FORMATS_MAP[mode];\n  },\n  _valueChangeEventHandler: function (e) {\n    var text = this.option(\"text\");\n    var currentValue = this.dateOption(\"value\");\n\n    if (text === this._getDisplayedText(currentValue)) {\n      this._applyInternalValidation(currentValue);\n\n      return;\n    }\n\n    var parsedDate = this._getParsedDate(text);\n\n    var value = null !== currentValue && void 0 !== currentValue ? currentValue : this._getDateByDefault();\n    var type = this.option(\"type\");\n\n    var newValue = _ui.default.mergeDates(value, parsedDate, type);\n\n    var date = parsedDate && \"time\" === type ? newValue : parsedDate;\n\n    if (this._applyInternalValidation(date).isValid) {\n      var displayedText = this._getDisplayedText(newValue);\n\n      if (value && newValue && value.getTime() === newValue.getTime() && displayedText !== text) {\n        this._renderValue();\n      } else {\n        this.dateValue(newValue, e);\n      }\n    }\n  },\n  _getDateByDefault: function () {\n    return this._strategy.useCurrentDateByDefault() && this._strategy.getDefaultDate();\n  },\n  _getParsedDate: function (text) {\n    var displayFormat = this._strategy.getDisplayFormat(this.option(\"displayFormat\"));\n\n    var parsedText = this._strategy.getParsedText(text, displayFormat);\n\n    return null !== parsedText && void 0 !== parsedText ? parsedText : void 0;\n  },\n  _applyInternalValidation: function (value) {\n    var text = this.option(\"text\");\n    var hasText = !!text && null !== value;\n    var isDate = !!value && (0, _type.isDate)(value) && !isNaN(value.getTime());\n\n    var isDateInRange = isDate && _date.default.dateInRange(value, this.dateOption(\"min\"), this.dateOption(\"max\"), this.option(\"type\"));\n\n    var isValid = !hasText && !value || isDateInRange;\n    var validationMessage = \"\";\n\n    if (!isDate) {\n      validationMessage = this.option(\"invalidDateMessage\");\n    } else {\n      if (!isDateInRange) {\n        validationMessage = this.option(\"dateOutOfRangeMessage\");\n      }\n    }\n\n    this.option({\n      isValid: isValid,\n      validationError: isValid ? null : {\n        editorSpecific: true,\n        message: validationMessage\n      }\n    });\n    return {\n      isValid: isValid,\n      isDate: isDate\n    };\n  },\n  _applyCustomValidation: function (value) {\n    this.validationRequest.fire({\n      editor: this,\n      value: this._serializeDate(value)\n    });\n  },\n  _isValueChanged: function (newValue) {\n    var oldValue = this.dateOption(\"value\");\n    var oldTime = oldValue && oldValue.getTime();\n    var newTime = newValue && newValue.getTime();\n    return oldTime !== newTime;\n  },\n  _isTextChanged: function (newValue) {\n    var oldText = this.option(\"text\");\n    var newText = newValue && this._getDisplayedText(newValue) || \"\";\n    return oldText !== newText;\n  },\n  _renderProps: function () {\n    this.callBase();\n\n    this._input().attr(\"autocomplete\", \"off\");\n  },\n  _renderOpenedState: function () {\n    if (!this._isNativeType()) {\n      this.callBase();\n    }\n\n    if (this._strategy.isAdaptivityChanged()) {\n      this._refreshStrategy();\n    }\n  },\n  _getPopupTitle: function () {\n    var placeholder = this.option(\"placeholder\");\n\n    if (placeholder) {\n      return placeholder;\n    }\n\n    var type = this.option(\"type\");\n\n    if (type === TYPE.time) {\n      return _message.default.format(\"dxDateBox-simulatedDataPickerTitleTime\");\n    }\n\n    if (type === TYPE.date || type === TYPE.datetime) {\n      return _message.default.format(\"dxDateBox-simulatedDataPickerTitleDate\");\n    }\n\n    return \"\";\n  },\n  _renderPlaceholder: function () {\n    this._popup && this._popup.option(\"title\", this._getPopupTitle());\n    this.callBase();\n  },\n  _refreshStrategy: function () {\n    this._strategy.dispose();\n\n    this._initStrategy();\n\n    this.option(this._strategy.getDefaultOptions());\n\n    this._refresh();\n  },\n  _applyButtonHandler: function (e) {\n    var value = this._strategy.getValue();\n\n    var _this$_applyInternalV = this._applyInternalValidation(value),\n        isValid = _this$_applyInternalV.isValid,\n        isDate = _this$_applyInternalV.isDate;\n\n    if (isValid) {\n      this.dateValue(value, e.event);\n    } else {\n      if (isDate) {\n        var displayedText = this._getDisplayedText(value);\n\n        this.option(\"text\", displayedText);\n\n        this._renderDisplayText(displayedText);\n      }\n    }\n\n    this.callBase();\n  },\n  _dispose: function () {\n    var _this$_strategy2;\n\n    this.callBase();\n    null === (_this$_strategy2 = this._strategy) || void 0 === _this$_strategy2 ? void 0 : _this$_strategy2.dispose();\n  },\n  _isNativeType: function () {\n    return this._pickerType === PICKER_TYPE.native;\n  },\n  _optionChanged: function (args) {\n    switch (args.name) {\n      case \"showClearButton\":\n      case \"buttons\":\n        this.callBase.apply(this, arguments);\n\n        this._formatValidationIcon();\n\n        break;\n\n      case \"pickerType\":\n        this._updatePickerOptions({\n          pickerType: args.value\n        });\n\n        this._refreshStrategy();\n\n        this._refreshPickerTypeClass();\n\n        this._invalidate();\n\n        break;\n\n      case \"type\":\n        this._updatePickerOptions({\n          format: args.value\n        });\n\n        this._refreshStrategy();\n\n        this._refreshFormatClass();\n\n        this._renderPopupWrapper();\n\n        this._formatValidationIcon();\n\n        this._updateValue();\n\n        break;\n\n      case \"placeholder\":\n        this._renderPlaceholder();\n\n        break;\n\n      case \"min\":\n      case \"max\":\n        var isValid = this.option(\"isValid\");\n\n        this._applyInternalValidation(this.dateOption(\"value\"));\n\n        if (!isValid) {\n          this._applyCustomValidation(this.dateOption(\"value\"));\n        }\n\n        this._invalidate();\n\n        break;\n\n      case \"dateSerializationFormat\":\n      case \"interval\":\n      case \"disabledDates\":\n      case \"calendarOptions\":\n        this._invalidate();\n\n        break;\n\n      case \"displayFormat\":\n        this.option(\"text\", this._getDisplayedText(this.dateOption(\"value\")));\n\n        this._renderInputValue();\n\n        break;\n\n      case \"text\":\n        this._strategy.textChangedHandler(args.value);\n\n        this.callBase.apply(this, arguments);\n        break;\n\n      case \"isValid\":\n        this.callBase.apply(this, arguments);\n\n        this._formatValidationIcon();\n\n        break;\n\n      case \"showDropDownButton\":\n        this._formatValidationIcon();\n\n        this.callBase.apply(this, arguments);\n        break;\n\n      case \"readOnly\":\n        this.callBase.apply(this, arguments);\n\n        this._formatValidationIcon();\n\n        break;\n\n      case \"invalidDateMessage\":\n      case \"dateOutOfRangeMessage\":\n      case \"adaptivityEnabled\":\n      case \"showAnalogClock\":\n        break;\n\n      default:\n        this.callBase.apply(this, arguments);\n    }\n  },\n  _getSerializationFormat: function () {\n    var value = this.option(\"value\");\n\n    if (this.option(\"dateSerializationFormat\") && (0, _config.default)().forceIsoDateParsing) {\n      return this.option(\"dateSerializationFormat\");\n    }\n\n    if ((0, _type.isNumeric)(value)) {\n      return \"number\";\n    }\n\n    if (!(0, _type.isString)(value)) {\n      return;\n    }\n\n    return _date_serialization.default.getDateSerializationFormat(value);\n  },\n  _updateValue: function (value) {\n    this.callBase();\n\n    this._applyInternalValidation(null !== value && void 0 !== value ? value : this.dateOption(\"value\"));\n  },\n  dateValue: function (value, dxEvent) {\n    var isValueChanged = this._isValueChanged(value);\n\n    if (isValueChanged && dxEvent) {\n      this._saveValueChangeEvent(dxEvent);\n    }\n\n    if (!isValueChanged) {\n      if (this._isTextChanged(value)) {\n        this._updateValue(value);\n      } else {\n        if (\"\" === this.option(\"text\")) {\n          this._applyCustomValidation(value);\n        }\n      }\n    }\n\n    return this.dateOption(\"value\", value);\n  },\n  dateOption: function (optionName, value) {\n    if (1 === arguments.length) {\n      return _date_serialization.default.deserializeDate(this.option(optionName));\n    }\n\n    this.option(optionName, this._serializeDate(value));\n  },\n  _serializeDate: function (date) {\n    var serializationFormat = this._getSerializationFormat();\n\n    return _date_serialization.default.serializeDate(date, serializationFormat);\n  },\n  reset: function () {\n    this.callBase();\n\n    this._updateValue(this.dateOption(\"value\"));\n  }\n});\n\n(0, _component_registrator.default)(\"dxDateBox\", DateBox);\nvar _default = DateBox;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/node_modules/devextreme/ui/date_box/ui.date_box.base.js"],"names":["exports","default","_window","require","_component_registrator","_interopRequireDefault","_type","_dom","_iterator","_version","_extend","_support","_devices","_config","_date","_ui","_date_serialization","_ui2","_date2","_message","_uiDate_boxStrategy","_uiDate_boxStrategy2","_uiDate_boxStrategy3","_uiDate_boxStrategy4","_uiDate_boxStrategy5","obj","__esModule","window","getWindow","DATEBOX_CLASS","DX_AUTO_WIDTH_CLASS","DX_INVALID_BADGE_CLASS","DX_CLEAR_BUTTON_CLASS","DATEBOX_WRAPPER_CLASS","PICKER_TYPE","calendar","rollers","list","TYPE","date","datetime","time","STRATEGY_NAME","dateView","calendarWithTime","STRATEGY_CLASSES","Calendar","DateView","Native","CalendarWithTime","List","DateBox","inherit","_supportedKeys","extend","callBase","_strategy","supportedKeys","_renderButtonContainers","apply","arguments","customizeButtons","_getDefaultOptions","type","showAnalogClock","value","dateSerializationFormat","min","max","displayFormat","interval","disabledDates","pickerType","invalidDateMessage","format","dateOutOfRangeMessage","applyButtonText","adaptivityEnabled","calendarOptions","useHiddenSubmitElement","_defaultOptionsRules","concat","device","platform","options","buttonsLocation","realDevice","real","native","currentDevice","version","deviceType","compare","_initOptions","_userOptions","_updatePickerOptions","option","_pickerType","_init","_initStrategy","getDefaultOptions","_toLowerCaseFirstLetter","string","charAt","toLowerCase","substr","strategyName","_getStrategyName","_getFormatType","strategy","NAME","currentType","isTime","test","isDate","_initMarkup","$element","addClass","_refreshFormatClass","_refreshPickerTypeClass","renderInputMinMax","_input","_render","_formatValidationIcon","_renderDimensions","toggleClass","_dimensionChanged","_popup","_this$_strategy$_upda","_this$_strategy","_updatePopupHeight","call","each","_","item","removeClass","hasWindow","inputElement","get","isRtlEnabled","clearButtonWidth","_getClearButtonWidth","longestElementDimensions","_getLongestElementDimensions","curWidth","parseFloat","getComputedStyle","width","shouldHideValidationIcon","style","_storedPadding","leftPadding","rightPadding","paddingLeft","paddingRight","_isClearButtonVisible","val","clearButtonElement","find","getDisplayFormat","longestValue","getLongestDate","getMonthNames","getDayNames","$input","$longestValueElement","createTextElementHiddenCopy","isPaddingStored","storedPadding","appendTo","elementWidth","necessaryWidth","remove","_getKeyboardListeners","getKeyboardListener","_renderPopup","_wrapper","_renderPopupWrapper","_popupConfig","popupConfig","title","_getPopupTitle","dragEnabled","classPostfixes","bind","_renderPopupContent","renderPopupContent","_getFirstPopupElement","getFirstPopupElement","_getLastPopupElement","getLastPopupElement","_popupShowingHandler","popupShowingHandler","_popupShownHandler","renderOpenedState","_popupHiddenHandler","popupHiddenHandler","_visibilityChanged","visible","_clearValueHandler","e","_readOnlyPropValue","isCustomValueDisabled","_isNativeType","_renderValue","dateOption","_getDisplayedText","renderValue","_setSubmitValue","submitFormat","SUBMIT_FORMATS_MAP","submitValue","serializeDate","toStandardDateFormat","_getSubmitElement","mode","displayedText","_getFormatByMode","inputType","FORMATS_MAP","_valueChangeEventHandler","text","currentValue","_applyInternalValidation","parsedDate","_getParsedDate","_getDateByDefault","newValue","mergeDates","isValid","getTime","dateValue","useCurrentDateByDefault","getDefaultDate","parsedText","getParsedText","hasText","isNaN","isDateInRange","dateInRange","validationMessage","validationError","editorSpecific","message","_applyCustomValidation","validationRequest","fire","editor","_serializeDate","_isValueChanged","oldValue","oldTime","newTime","_isTextChanged","oldText","newText","_renderProps","attr","_renderOpenedState","isAdaptivityChanged","_refreshStrategy","placeholder","_renderPlaceholder","dispose","_refresh","_applyButtonHandler","getValue","_this$_applyInternalV","event","_renderDisplayText","_dispose","_this$_strategy2","_optionChanged","args","name","_invalidate","_updateValue","_renderInputValue","textChangedHandler","_getSerializationFormat","forceIsoDateParsing","isNumeric","isString","getDateSerializationFormat","dxEvent","isValueChanged","_saveValueChangeEvent","optionName","length","deserializeDate","serializationFormat","reset","_default","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/date_box/ui.date_box.base.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _dom = require(\"../../core/utils/dom\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _version = require(\"../../core/utils/version\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _support = require(\"../../core/utils/support\");\r\nvar _devices = _interopRequireDefault(require(\"../../core/devices\"));\r\nvar _config = _interopRequireDefault(require(\"../../core/config\"));\r\nvar _date = _interopRequireDefault(require(\"../../core/utils/date\"));\r\nvar _ui = _interopRequireDefault(require(\"./ui.date_utils\"));\r\nvar _date_serialization = _interopRequireDefault(require(\"../../core/utils/date_serialization\"));\r\nvar _ui2 = _interopRequireDefault(require(\"../drop_down_editor/ui.drop_down_editor\"));\r\nvar _date2 = _interopRequireDefault(require(\"../../localization/date\"));\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _uiDate_boxStrategy = _interopRequireDefault(require(\"./ui.date_box.strategy.calendar\"));\r\nvar _uiDate_boxStrategy2 = _interopRequireDefault(require(\"./ui.date_box.strategy.date_view\"));\r\nvar _uiDate_boxStrategy3 = _interopRequireDefault(require(\"./ui.date_box.strategy.native\"));\r\nvar _uiDate_boxStrategy4 = _interopRequireDefault(require(\"./ui.date_box.strategy.calendar_with_time\"));\r\nvar _uiDate_boxStrategy5 = _interopRequireDefault(require(\"./ui.date_box.strategy.list\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar window = (0, _window.getWindow)();\r\nvar DATEBOX_CLASS = \"dx-datebox\";\r\nvar DX_AUTO_WIDTH_CLASS = \"dx-auto-width\";\r\nvar DX_INVALID_BADGE_CLASS = \"dx-show-invalid-badge\";\r\nvar DX_CLEAR_BUTTON_CLASS = \"dx-clear-button-area\";\r\nvar DATEBOX_WRAPPER_CLASS = \"dx-datebox-wrapper\";\r\nvar PICKER_TYPE = {\r\n    calendar: \"calendar\",\r\n    rollers: \"rollers\",\r\n    list: \"list\",\r\n    \"native\": \"native\"\r\n};\r\nvar TYPE = {\r\n    date: \"date\",\r\n    datetime: \"datetime\",\r\n    time: \"time\"\r\n};\r\nvar STRATEGY_NAME = {\r\n    calendar: \"Calendar\",\r\n    dateView: \"DateView\",\r\n    \"native\": \"Native\",\r\n    calendarWithTime: \"CalendarWithTime\",\r\n    list: \"List\"\r\n};\r\nvar STRATEGY_CLASSES = {\r\n    Calendar: _uiDate_boxStrategy.default,\r\n    DateView: _uiDate_boxStrategy2.default,\r\n    Native: _uiDate_boxStrategy3.default,\r\n    CalendarWithTime: _uiDate_boxStrategy4.default,\r\n    List: _uiDate_boxStrategy5.default\r\n};\r\nvar DateBox = _ui2.default.inherit({\r\n    _supportedKeys: function() {\r\n        return (0, _extend.extend)(this.callBase(), this._strategy.supportedKeys())\r\n    },\r\n    _renderButtonContainers: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._strategy.customizeButtons()\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            type: \"date\",\r\n            showAnalogClock: true,\r\n            value: null,\r\n            dateSerializationFormat: void 0,\r\n            min: void 0,\r\n            max: void 0,\r\n            displayFormat: null,\r\n            interval: 30,\r\n            disabledDates: null,\r\n            pickerType: PICKER_TYPE.calendar,\r\n            invalidDateMessage: _message.default.format(\"dxDateBox-validation-datetime\"),\r\n            dateOutOfRangeMessage: _message.default.format(\"validation-range\"),\r\n            applyButtonText: _message.default.format(\"OK\"),\r\n            adaptivityEnabled: false,\r\n            calendarOptions: {},\r\n            useHiddenSubmitElement: true\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: {\r\n                platform: \"ios\"\r\n            },\r\n            options: {\r\n                \"dropDownOptions.showTitle\": true\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"android\"\r\n            },\r\n            options: {\r\n                buttonsLocation: \"bottom after\"\r\n            }\r\n        }, {\r\n            device: function() {\r\n                var realDevice = _devices.default.real();\r\n                var platform = realDevice.platform;\r\n                return \"ios\" === platform || \"android\" === platform\r\n            },\r\n            options: {\r\n                pickerType: PICKER_TYPE.native\r\n            }\r\n        }, {\r\n            device: function(currentDevice) {\r\n                var realDevice = _devices.default.real();\r\n                var platform = realDevice.platform;\r\n                var version = realDevice.version;\r\n                return \"generic\" === platform && \"desktop\" !== currentDevice.deviceType || \"android\" === platform && (0, _version.compare)(version, [4, 4]) < 0\r\n            },\r\n            options: {\r\n                pickerType: PICKER_TYPE.rollers\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"generic\",\r\n                deviceType: \"desktop\"\r\n            },\r\n            options: {\r\n                buttonsLocation: \"bottom after\"\r\n            }\r\n        }])\r\n    },\r\n    _initOptions: function(options) {\r\n        this._userOptions = (0, _extend.extend)({}, options);\r\n        this.callBase(options);\r\n        this._updatePickerOptions()\r\n    },\r\n    _updatePickerOptions: function() {\r\n        var pickerType = this.option(\"pickerType\");\r\n        var type = this.option(\"type\");\r\n        if (pickerType === PICKER_TYPE.list && (type === TYPE.datetime || type === TYPE.date)) {\r\n            pickerType = PICKER_TYPE.calendar\r\n        }\r\n        if (type === TYPE.time && pickerType === PICKER_TYPE.calendar) {\r\n            pickerType = PICKER_TYPE.list\r\n        }\r\n        this.option(\"showDropDownButton\", \"generic\" !== _devices.default.real().platform || pickerType !== PICKER_TYPE.native);\r\n        this._pickerType = pickerType\r\n    },\r\n    _init: function() {\r\n        this._initStrategy();\r\n        this.option((0, _extend.extend)({}, this._strategy.getDefaultOptions(), this._userOptions));\r\n        delete this._userOptions;\r\n        this.callBase()\r\n    },\r\n    _toLowerCaseFirstLetter: function(string) {\r\n        return string.charAt(0).toLowerCase() + string.substr(1)\r\n    },\r\n    _initStrategy: function() {\r\n        var strategyName = this._getStrategyName(this._getFormatType());\r\n        var strategy = STRATEGY_CLASSES[strategyName];\r\n        if (!(this._strategy && this._strategy.NAME === strategyName)) {\r\n            this._strategy = new strategy(this)\r\n        }\r\n    },\r\n    _getFormatType: function() {\r\n        var currentType = this.option(\"type\");\r\n        var isTime = /h|m|s/g.test(currentType);\r\n        var isDate = /d|M|Y/g.test(currentType);\r\n        var type = \"\";\r\n        if (isDate) {\r\n            type += TYPE.date\r\n        }\r\n        if (isTime) {\r\n            type += TYPE.time\r\n        }\r\n        return type\r\n    },\r\n    _getStrategyName: function(type) {\r\n        var pickerType = this._pickerType;\r\n        if (pickerType === PICKER_TYPE.rollers) {\r\n            return STRATEGY_NAME.dateView\r\n        } else {\r\n            if (pickerType === PICKER_TYPE.native) {\r\n                return STRATEGY_NAME.native\r\n            }\r\n        }\r\n        if (type === TYPE.date) {\r\n            return STRATEGY_NAME.calendar\r\n        }\r\n        if (type === TYPE.datetime) {\r\n            return STRATEGY_NAME.calendarWithTime\r\n        }\r\n        return STRATEGY_NAME.list\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(DATEBOX_CLASS);\r\n        this.callBase();\r\n        this._refreshFormatClass();\r\n        this._refreshPickerTypeClass();\r\n        this._strategy.renderInputMinMax(this._input())\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._formatValidationIcon()\r\n    },\r\n    _renderDimensions: function() {\r\n        this.callBase();\r\n        this.$element().toggleClass(DX_AUTO_WIDTH_CLASS, !this.option(\"width\"));\r\n        this._dimensionChanged()\r\n    },\r\n    _dimensionChanged: function() {\r\n        this.callBase(arguments);\r\n        if (this._popup) {\r\n            var _this$_strategy$_upda, _this$_strategy;\r\n            null === (_this$_strategy$_upda = (_this$_strategy = this._strategy)._updatePopupHeight) || void 0 === _this$_strategy$_upda ? void 0 : _this$_strategy$_upda.call(_this$_strategy)\r\n        }\r\n    },\r\n    _refreshFormatClass: function() {\r\n        var $element = this.$element();\r\n        (0, _iterator.each)(TYPE, function(_, item) {\r\n            $element.removeClass(DATEBOX_CLASS + \"-\" + item)\r\n        });\r\n        $element.addClass(DATEBOX_CLASS + \"-\" + this.option(\"type\"))\r\n    },\r\n    _refreshPickerTypeClass: function() {\r\n        var $element = this.$element();\r\n        (0, _iterator.each)(PICKER_TYPE, function(_, item) {\r\n            $element.removeClass(DATEBOX_CLASS + \"-\" + item)\r\n        });\r\n        $element.addClass(DATEBOX_CLASS + \"-\" + this._pickerType)\r\n    },\r\n    _formatValidationIcon: function() {\r\n        if (!(0, _window.hasWindow)()) {\r\n            return\r\n        }\r\n        var inputElement = this._input().get(0);\r\n        var isRtlEnabled = this.option(\"rtlEnabled\");\r\n        var clearButtonWidth = this._getClearButtonWidth();\r\n        var longestElementDimensions = this._getLongestElementDimensions();\r\n        var curWidth = parseFloat(window.getComputedStyle(inputElement).width) - clearButtonWidth;\r\n        var shouldHideValidationIcon = longestElementDimensions.width > curWidth;\r\n        var style = inputElement.style;\r\n        this.$element().toggleClass(DX_INVALID_BADGE_CLASS, !shouldHideValidationIcon);\r\n        if (shouldHideValidationIcon) {\r\n            if (void 0 === this._storedPadding) {\r\n                this._storedPadding = isRtlEnabled ? longestElementDimensions.leftPadding : longestElementDimensions.rightPadding\r\n            }\r\n            isRtlEnabled ? style.paddingLeft = 0 : style.paddingRight = 0\r\n        } else {\r\n            isRtlEnabled ? style.paddingLeft = this._storedPadding + \"px\" : style.paddingRight = this._storedPadding + \"px\"\r\n        }\r\n    },\r\n    _getClearButtonWidth: function() {\r\n        var clearButtonWidth = 0;\r\n        if (this._isClearButtonVisible() && \"\" === this._input().val()) {\r\n            var clearButtonElement = this.$element().find(\".\" + DX_CLEAR_BUTTON_CLASS).get(0);\r\n            clearButtonWidth = parseFloat(window.getComputedStyle(clearButtonElement).width)\r\n        }\r\n        return clearButtonWidth\r\n    },\r\n    _getLongestElementDimensions: function() {\r\n        var format = this._strategy.getDisplayFormat(this.option(\"displayFormat\"));\r\n        var longestValue = _date2.default.format(_ui.default.getLongestDate(format, _date2.default.getMonthNames(), _date2.default.getDayNames()), format);\r\n        var $input = this._input();\r\n        var inputElement = $input.get(0);\r\n        var $longestValueElement = (0, _dom.createTextElementHiddenCopy)($input, longestValue);\r\n        var isPaddingStored = void 0 !== this._storedPadding;\r\n        var storedPadding = !isPaddingStored ? 0 : this._storedPadding;\r\n        $longestValueElement.appendTo(this.$element());\r\n        var elementWidth = parseFloat(window.getComputedStyle($longestValueElement.get(0)).width);\r\n        var rightPadding = parseFloat(window.getComputedStyle(inputElement).paddingRight);\r\n        var leftPadding = parseFloat(window.getComputedStyle(inputElement).paddingLeft);\r\n        var necessaryWidth = elementWidth + leftPadding + rightPadding + storedPadding;\r\n        $longestValueElement.remove();\r\n        return {\r\n            width: necessaryWidth,\r\n            leftPadding: leftPadding,\r\n            rightPadding: rightPadding\r\n        }\r\n    },\r\n    _getKeyboardListeners: function() {\r\n        return this.callBase().concat([this._strategy && this._strategy.getKeyboardListener()])\r\n    },\r\n    _renderPopup: function() {\r\n        this.callBase();\r\n        this._popup._wrapper().addClass(DATEBOX_WRAPPER_CLASS);\r\n        this._renderPopupWrapper()\r\n    },\r\n    _popupConfig: function() {\r\n        var popupConfig = this.callBase();\r\n        return (0, _extend.extend)(this._strategy.popupConfig(popupConfig), {\r\n            title: this._getPopupTitle(),\r\n            dragEnabled: false\r\n        })\r\n    },\r\n    _renderPopupWrapper: function() {\r\n        if (!this._popup) {\r\n            return\r\n        }\r\n        var $element = this.$element();\r\n        var classPostfixes = (0, _extend.extend)({}, TYPE, PICKER_TYPE);\r\n        (0, _iterator.each)(classPostfixes, function(_, item) {\r\n            $element.removeClass(DATEBOX_WRAPPER_CLASS + \"-\" + item)\r\n        }.bind(this));\r\n        this._popup._wrapper().addClass(DATEBOX_WRAPPER_CLASS + \"-\" + this.option(\"type\")).addClass(DATEBOX_WRAPPER_CLASS + \"-\" + this._pickerType)\r\n    },\r\n    _renderPopupContent: function() {\r\n        this.callBase();\r\n        this._strategy.renderPopupContent()\r\n    },\r\n    _getFirstPopupElement: function() {\r\n        return this._strategy.getFirstPopupElement() || this.callBase()\r\n    },\r\n    _getLastPopupElement: function() {\r\n        return this._strategy.getLastPopupElement() || this.callBase()\r\n    },\r\n    _popupShowingHandler: function() {\r\n        this.callBase();\r\n        this._strategy.popupShowingHandler()\r\n    },\r\n    _popupShownHandler: function() {\r\n        this.callBase();\r\n        this._strategy.renderOpenedState()\r\n    },\r\n    _popupHiddenHandler: function() {\r\n        this.callBase();\r\n        this._strategy.renderOpenedState();\r\n        this._strategy.popupHiddenHandler()\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this._formatValidationIcon()\r\n        }\r\n    },\r\n    _clearValueHandler: function(e) {\r\n        this.option(\"text\", \"\");\r\n        this.callBase(e)\r\n    },\r\n    _readOnlyPropValue: function() {\r\n        if (this._pickerType === PICKER_TYPE.rollers) {\r\n            return true\r\n        }\r\n        var platform = _devices.default.real().platform;\r\n        var isCustomValueDisabled = this._isNativeType() && (\"ios\" === platform || \"android\" === platform);\r\n        if (isCustomValueDisabled) {\r\n            return this.option(\"readOnly\")\r\n        }\r\n        return this.callBase()\r\n    },\r\n    _isClearButtonVisible: function() {\r\n        return this.callBase() && !this._isNativeType()\r\n    },\r\n    _renderValue: function() {\r\n        var value = this.dateOption(\"value\");\r\n        this.option(\"text\", this._getDisplayedText(value));\r\n        this._strategy.renderValue();\r\n        return this.callBase()\r\n    },\r\n    _setSubmitValue: function() {\r\n        var value = this.dateOption(\"value\");\r\n        var dateSerializationFormat = this.option(\"dateSerializationFormat\");\r\n        var submitFormat = _ui.default.SUBMIT_FORMATS_MAP[this.option(\"type\")];\r\n        var submitValue = dateSerializationFormat ? _date_serialization.default.serializeDate(value, dateSerializationFormat) : _ui.default.toStandardDateFormat(value, submitFormat);\r\n        this._getSubmitElement().val(submitValue)\r\n    },\r\n    _getDisplayedText: function(value) {\r\n        var mode = this.option(\"mode\");\r\n        var displayedText;\r\n        if (\"text\" === mode) {\r\n            var displayFormat = this._strategy.getDisplayFormat(this.option(\"displayFormat\"));\r\n            displayedText = _date2.default.format(value, displayFormat)\r\n        } else {\r\n            var format = this._getFormatByMode(mode);\r\n            if (format) {\r\n                displayedText = _date2.default.format(value, format)\r\n            } else {\r\n                displayedText = _ui.default.toStandardDateFormat(value, mode)\r\n            }\r\n        }\r\n        return displayedText\r\n    },\r\n    _getFormatByMode: function(mode) {\r\n        return (0, _support.inputType)(mode) ? null : _ui.default.FORMATS_MAP[mode]\r\n    },\r\n    _valueChangeEventHandler: function(e) {\r\n        var text = this.option(\"text\");\r\n        var currentValue = this.dateOption(\"value\");\r\n        if (text === this._getDisplayedText(currentValue)) {\r\n            this._applyInternalValidation(currentValue);\r\n            return\r\n        }\r\n        var parsedDate = this._getParsedDate(text);\r\n        var value = null !== currentValue && void 0 !== currentValue ? currentValue : this._getDateByDefault();\r\n        var type = this.option(\"type\");\r\n        var newValue = _ui.default.mergeDates(value, parsedDate, type);\r\n        var date = parsedDate && \"time\" === type ? newValue : parsedDate;\r\n        if (this._applyInternalValidation(date).isValid) {\r\n            var displayedText = this._getDisplayedText(newValue);\r\n            if (value && newValue && value.getTime() === newValue.getTime() && displayedText !== text) {\r\n                this._renderValue()\r\n            } else {\r\n                this.dateValue(newValue, e)\r\n            }\r\n        }\r\n    },\r\n    _getDateByDefault: function() {\r\n        return this._strategy.useCurrentDateByDefault() && this._strategy.getDefaultDate()\r\n    },\r\n    _getParsedDate: function(text) {\r\n        var displayFormat = this._strategy.getDisplayFormat(this.option(\"displayFormat\"));\r\n        var parsedText = this._strategy.getParsedText(text, displayFormat);\r\n        return null !== parsedText && void 0 !== parsedText ? parsedText : void 0\r\n    },\r\n    _applyInternalValidation: function(value) {\r\n        var text = this.option(\"text\");\r\n        var hasText = !!text && null !== value;\r\n        var isDate = !!value && (0, _type.isDate)(value) && !isNaN(value.getTime());\r\n        var isDateInRange = isDate && _date.default.dateInRange(value, this.dateOption(\"min\"), this.dateOption(\"max\"), this.option(\"type\"));\r\n        var isValid = !hasText && !value || isDateInRange;\r\n        var validationMessage = \"\";\r\n        if (!isDate) {\r\n            validationMessage = this.option(\"invalidDateMessage\")\r\n        } else {\r\n            if (!isDateInRange) {\r\n                validationMessage = this.option(\"dateOutOfRangeMessage\")\r\n            }\r\n        }\r\n        this.option({\r\n            isValid: isValid,\r\n            validationError: isValid ? null : {\r\n                editorSpecific: true,\r\n                message: validationMessage\r\n            }\r\n        });\r\n        return {\r\n            isValid: isValid,\r\n            isDate: isDate\r\n        }\r\n    },\r\n    _applyCustomValidation: function(value) {\r\n        this.validationRequest.fire({\r\n            editor: this,\r\n            value: this._serializeDate(value)\r\n        })\r\n    },\r\n    _isValueChanged: function(newValue) {\r\n        var oldValue = this.dateOption(\"value\");\r\n        var oldTime = oldValue && oldValue.getTime();\r\n        var newTime = newValue && newValue.getTime();\r\n        return oldTime !== newTime\r\n    },\r\n    _isTextChanged: function(newValue) {\r\n        var oldText = this.option(\"text\");\r\n        var newText = newValue && this._getDisplayedText(newValue) || \"\";\r\n        return oldText !== newText\r\n    },\r\n    _renderProps: function() {\r\n        this.callBase();\r\n        this._input().attr(\"autocomplete\", \"off\")\r\n    },\r\n    _renderOpenedState: function() {\r\n        if (!this._isNativeType()) {\r\n            this.callBase()\r\n        }\r\n        if (this._strategy.isAdaptivityChanged()) {\r\n            this._refreshStrategy()\r\n        }\r\n    },\r\n    _getPopupTitle: function() {\r\n        var placeholder = this.option(\"placeholder\");\r\n        if (placeholder) {\r\n            return placeholder\r\n        }\r\n        var type = this.option(\"type\");\r\n        if (type === TYPE.time) {\r\n            return _message.default.format(\"dxDateBox-simulatedDataPickerTitleTime\")\r\n        }\r\n        if (type === TYPE.date || type === TYPE.datetime) {\r\n            return _message.default.format(\"dxDateBox-simulatedDataPickerTitleDate\")\r\n        }\r\n        return \"\"\r\n    },\r\n    _renderPlaceholder: function() {\r\n        this._popup && this._popup.option(\"title\", this._getPopupTitle());\r\n        this.callBase()\r\n    },\r\n    _refreshStrategy: function() {\r\n        this._strategy.dispose();\r\n        this._initStrategy();\r\n        this.option(this._strategy.getDefaultOptions());\r\n        this._refresh()\r\n    },\r\n    _applyButtonHandler: function(e) {\r\n        var value = this._strategy.getValue();\r\n        var _this$_applyInternalV = this._applyInternalValidation(value),\r\n            isValid = _this$_applyInternalV.isValid,\r\n            isDate = _this$_applyInternalV.isDate;\r\n        if (isValid) {\r\n            this.dateValue(value, e.event)\r\n        } else {\r\n            if (isDate) {\r\n                var displayedText = this._getDisplayedText(value);\r\n                this.option(\"text\", displayedText);\r\n                this._renderDisplayText(displayedText)\r\n            }\r\n        }\r\n        this.callBase()\r\n    },\r\n    _dispose: function() {\r\n        var _this$_strategy2;\r\n        this.callBase();\r\n        null === (_this$_strategy2 = this._strategy) || void 0 === _this$_strategy2 ? void 0 : _this$_strategy2.dispose()\r\n    },\r\n    _isNativeType: function() {\r\n        return this._pickerType === PICKER_TYPE.native\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"showClearButton\":\r\n            case \"buttons\":\r\n                this.callBase.apply(this, arguments);\r\n                this._formatValidationIcon();\r\n                break;\r\n            case \"pickerType\":\r\n                this._updatePickerOptions({\r\n                    pickerType: args.value\r\n                });\r\n                this._refreshStrategy();\r\n                this._refreshPickerTypeClass();\r\n                this._invalidate();\r\n                break;\r\n            case \"type\":\r\n                this._updatePickerOptions({\r\n                    format: args.value\r\n                });\r\n                this._refreshStrategy();\r\n                this._refreshFormatClass();\r\n                this._renderPopupWrapper();\r\n                this._formatValidationIcon();\r\n                this._updateValue();\r\n                break;\r\n            case \"placeholder\":\r\n                this._renderPlaceholder();\r\n                break;\r\n            case \"min\":\r\n            case \"max\":\r\n                var isValid = this.option(\"isValid\");\r\n                this._applyInternalValidation(this.dateOption(\"value\"));\r\n                if (!isValid) {\r\n                    this._applyCustomValidation(this.dateOption(\"value\"))\r\n                }\r\n                this._invalidate();\r\n                break;\r\n            case \"dateSerializationFormat\":\r\n            case \"interval\":\r\n            case \"disabledDates\":\r\n            case \"calendarOptions\":\r\n                this._invalidate();\r\n                break;\r\n            case \"displayFormat\":\r\n                this.option(\"text\", this._getDisplayedText(this.dateOption(\"value\")));\r\n                this._renderInputValue();\r\n                break;\r\n            case \"text\":\r\n                this._strategy.textChangedHandler(args.value);\r\n                this.callBase.apply(this, arguments);\r\n                break;\r\n            case \"isValid\":\r\n                this.callBase.apply(this, arguments);\r\n                this._formatValidationIcon();\r\n                break;\r\n            case \"showDropDownButton\":\r\n                this._formatValidationIcon();\r\n                this.callBase.apply(this, arguments);\r\n                break;\r\n            case \"readOnly\":\r\n                this.callBase.apply(this, arguments);\r\n                this._formatValidationIcon();\r\n                break;\r\n            case \"invalidDateMessage\":\r\n            case \"dateOutOfRangeMessage\":\r\n            case \"adaptivityEnabled\":\r\n            case \"showAnalogClock\":\r\n                break;\r\n            default:\r\n                this.callBase.apply(this, arguments)\r\n        }\r\n    },\r\n    _getSerializationFormat: function() {\r\n        var value = this.option(\"value\");\r\n        if (this.option(\"dateSerializationFormat\") && (0, _config.default)().forceIsoDateParsing) {\r\n            return this.option(\"dateSerializationFormat\")\r\n        }\r\n        if ((0, _type.isNumeric)(value)) {\r\n            return \"number\"\r\n        }\r\n        if (!(0, _type.isString)(value)) {\r\n            return\r\n        }\r\n        return _date_serialization.default.getDateSerializationFormat(value)\r\n    },\r\n    _updateValue: function(value) {\r\n        this.callBase();\r\n        this._applyInternalValidation(null !== value && void 0 !== value ? value : this.dateOption(\"value\"))\r\n    },\r\n    dateValue: function(value, dxEvent) {\r\n        var isValueChanged = this._isValueChanged(value);\r\n        if (isValueChanged && dxEvent) {\r\n            this._saveValueChangeEvent(dxEvent)\r\n        }\r\n        if (!isValueChanged) {\r\n            if (this._isTextChanged(value)) {\r\n                this._updateValue(value)\r\n            } else {\r\n                if (\"\" === this.option(\"text\")) {\r\n                    this._applyCustomValidation(value)\r\n                }\r\n            }\r\n        }\r\n        return this.dateOption(\"value\", value)\r\n    },\r\n    dateOption: function(optionName, value) {\r\n        if (1 === arguments.length) {\r\n            return _date_serialization.default.deserializeDate(this.option(optionName))\r\n        }\r\n        this.option(optionName, this._serializeDate(value))\r\n    },\r\n    _serializeDate: function(date) {\r\n        var serializationFormat = this._getSerializationFormat();\r\n        return _date_serialization.default.serializeDate(date, serializationFormat)\r\n    },\r\n    reset: function() {\r\n        this.callBase();\r\n        this._updateValue(this.dateOption(\"value\"))\r\n    }\r\n});\r\n(0, _component_registrator.default)(\"dxDateBox\", DateBox);\r\nvar _default = DateBox;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}