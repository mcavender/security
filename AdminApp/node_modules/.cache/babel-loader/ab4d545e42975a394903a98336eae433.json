{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CapiniaC\\\\Desktop\\\\Collection\\\\Work\\\\project\\\\security\\\\AdminApp\\\\src\\\\components\\\\pages\\\\viprpit\\\\Vipr-Pit.js\";\nimport React, { useState, useEffect } from 'react';\nimport MaterialTable from 'material-table';\nimport { Grid, Paper, makeStyles } from '@material-ui/core';\nimport ViprTablesViewService from '../../../services/ViprTablesViewService';\nconst useStyles = makeStyles(theme => ({\n  elnotTbl: {\n    margin: theme.spacing(5),\n    padding: theme.spacing(3),\n    width: '25%'\n  },\n  searchInput: {\n    width: '75%'\n  },\n  newButton: {\n    position: 'absolute',\n    right: '10px'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  tableRow: {\n    \"&.Mui-selected, &.Mui-selected:hover\": {\n      backgroundColor: \"red\",\n      \"& > .MuiTableCell-root\": {\n        color: \"black\"\n      }\n    }\n  }\n}));\nexport default function MaterialTableDemo() {\n  const classes = useStyles();\n  const [elnotClm, setElnotClm] = useState([]);\n  const [viprViewClm, setViprViewClm] = useState([]);\n  const [vipr, setvipr] = useState({\n    data: []\n  });\n  useEffect(() => {\n    setElnotClm([{\n      field: 'state_id',\n      title: 'Status',\n      width: 50\n    }, {\n      field: 'elnot',\n      title: 'Elnot',\n      width: 50\n    }]);\n    setViprViewClm([{\n      field: 'elnot',\n      title: 'Elnot',\n      width: 50\n    }, {\n      field: 'op_mode_id',\n      title: 'Mode',\n      width: 50\n    }, {\n      field: 'rf_mode',\n      title: 'RF Min',\n      width: 50\n    }, {\n      field: 'rf_mode',\n      title: 'RF Max',\n      width: 50\n    }, {\n      field: 'mode_type',\n      title: 'Mode Type',\n      width: 50\n    }, {\n      field: 'pri_seq',\n      title: 'Pri Min',\n      width: 50\n    }, {\n      field: 'pri_seq',\n      title: 'Pri Max',\n      width: 50\n    }, {\n      field: 'pd_mode',\n      title: 'PD Min',\n      width: 50\n    }, {\n      field: 'pd_mode',\n      title: 'PD Max',\n      width: 50\n    }, {\n      field: 'sp_mode',\n      title: 'SP Min',\n      width: 50\n    }, {\n      field: 'sp_mode',\n      title: 'SP Max',\n      width: 50\n    }, {\n      field: 'scan_type',\n      title: 'Scan Type',\n      width: 50\n    }]);\n    ViprTablesViewService.getViprTablesView().then(response => {\n      setvipr({\n        data: response.data\n      });\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    xs: 12,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"Vipr-Pit\",\n    columns: elnotClm,\n    data: vipr.data,\n    editable: {\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          const data = [...vipr.data];\n          data[data.indexOf(oldData)] = newData;\n          setvipr({ ...vipr,\n            data\n          });\n        }, 600);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"\",\n    columns: viprViewClm,\n    data: vipr.data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }))))));\n}","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/AdminApp/src/components/pages/viprpit/Vipr-Pit.js"],"names":["React","useState","useEffect","MaterialTable","Grid","Paper","makeStyles","ViprTablesViewService","useStyles","theme","elnotTbl","margin","spacing","padding","width","searchInput","newButton","position","right","paper","textAlign","color","palette","text","secondary","tableRow","backgroundColor","MaterialTableDemo","classes","elnotClm","setElnotClm","viprViewClm","setViprViewClm","vipr","setvipr","data","field","title","getViprTablesView","then","response","onRowUpdate","newData","oldData","Promise","resolve","setTimeout","indexOf"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport MaterialTable from 'material-table';\r\nimport { Grid, Paper, makeStyles } from '@material-ui/core';\r\n\r\nimport ViprTablesViewService from '../../../services/ViprTablesViewService';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  elnotTbl: {\r\n      margin: theme.spacing(5),\r\n      padding: theme.spacing(3),\r\n      width: '25%'\r\n  },\r\n  searchInput: {\r\n      width: '75%'\r\n  },\r\n  newButton: {\r\n      position: 'absolute',\r\n      right: '10px'\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  tableRow: {\r\n      \"&.Mui-selected, &.Mui-selected:hover\": {\r\n              backgroundColor: \"red\",\r\n              \"& > .MuiTableCell-root\": {\r\n              color: \"black\"\r\n          }\r\n      }\r\n  },\r\n}))\r\n\r\nexport default function MaterialTableDemo() {\r\n\r\n  const classes = useStyles();\r\n  const [elnotClm, setElnotClm] = useState([]);\r\n  const [viprViewClm, setViprViewClm] = useState([]);\r\n  const [vipr, setvipr] = useState({ data: [] });\r\n\r\n  useEffect(() => {\r\n    setElnotClm([      \r\n      { field: 'state_id', title: 'Status', width: 50 },\r\n      { field: 'elnot', title: 'Elnot', width: 50 },\r\n    ])\r\n\r\n    setViprViewClm([\r\n      { field: 'elnot', title: 'Elnot', width: 50 },\r\n      { field: 'op_mode_id', title: 'Mode', width: 50 },\r\n      { field: 'rf_mode', title: 'RF Min', width: 50 },\r\n      { field: 'rf_mode', title: 'RF Max', width: 50 },\r\n      { field: 'mode_type', title: 'Mode Type', width: 50 },\r\n      { field: 'pri_seq', title: 'Pri Min', width: 50 },\r\n      { field: 'pri_seq', title: 'Pri Max', width: 50 },\r\n      { field: 'pd_mode', title: 'PD Min', width: 50 },\r\n      { field: 'pd_mode', title: 'PD Max', width: 50 },\r\n      { field: 'sp_mode', title: 'SP Min', width: 50 },\r\n      { field: 'sp_mode', title: 'SP Max', width: 50 },\r\n      { field: 'scan_type', title: 'Scan Type', width: 50 },\r\n    ])\r\n\r\n    ViprTablesViewService.getViprTablesView()\r\n    .then(response => {\r\n      setvipr({data: response.data });\r\n    })\r\n  }, []);\r\n  \r\n  return (\r\n    <Grid container spacing={3} direction=\"column\">\r\n      <Grid container xs={12} spacing={1}>\r\n        <Grid item xs={4}>\r\n          <Paper className={classes.paper}>\r\n            <MaterialTable\r\n              title=\"Vipr-Pit\"\r\n              columns={elnotClm}\r\n              data={vipr.data}\r\n              editable={{\r\n                onRowUpdate: (newData, oldData) =>\r\n                  new Promise(resolve => {\r\n                    setTimeout(() => {\r\n                      resolve();\r\n                      const data = [...vipr.data];\r\n                      data[data.indexOf(oldData)] = newData;\r\n                      setvipr({ ...vipr, data });\r\n                    }, 600);\r\n                  }),\r\n              }}\r\n            />\r\n          </Paper>        \r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <Grid item xs={12}>\r\n            <Paper className={classes.paper}>      \r\n              <MaterialTable\r\n                title=\"\"\r\n                columns={viprViewClm}\r\n                data={vipr.data}\r\n              />\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>    \r\n    </Grid>      \r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}