{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CapiniaC\\\\Desktop\\\\Collection\\\\Work\\\\project\\\\security\\\\AdminApp\\\\src\\\\components\\\\pages\\\\viprpit\\\\MaterialTableDemo.js\";\nimport React from 'react';\nimport MaterialTable from 'material-table';\nimport ViprTablesViewService from '../../../services/ViprTablesViewService';\nexport default function MaterialTableDemo() {\n  const [state, setState] = React.useState({\n    columns: [{\n      field: 'elnot',\n      title: 'Elnot',\n      width: 50\n    }, {\n      field: 'op_mode_id',\n      title: 'Mode',\n      width: 50\n    }, {\n      field: 'rf_mode',\n      title: 'RF Min',\n      width: 50\n    }, {\n      field: 'rf_mode',\n      title: 'RF Max',\n      width: 50\n    }, {\n      field: 'mode_type',\n      title: 'Mode Type',\n      width: 50\n    }, {\n      field: 'pri_seq',\n      title: 'Pri Min',\n      width: 50\n    }, {\n      field: 'pri_seq',\n      title: 'Pri Max',\n      width: 50\n    }, {\n      field: 'pd_mode',\n      title: 'PD Min',\n      width: 50\n    }, {\n      field: 'pd_mode',\n      title: 'PD Max',\n      width: 50\n    }, {\n      field: 'sp_mode',\n      title: 'SP Min',\n      width: 50\n    }, {\n      field: 'sp_mode',\n      title: 'SP Max',\n      width: 50\n    }, {\n      field: 'scan_type',\n      title: 'Scan Type',\n      width: 50\n    }],\n    data: []\n  });\n  useEffect(() => {\n    ViprTablesViewService.getViprTablesView().then(response => {\n      setState(response.data);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"Editable Example\",\n    columns: state.columns,\n    data: state.data,\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          const data = [...state.data];\n          data.push(newData);\n          setState({ ...state,\n            data\n          });\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          const data = [...state.data];\n          data[data.indexOf(oldData)] = newData;\n          setState({ ...state,\n            data\n          });\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          const data = [...state.data];\n          data.splice(data.indexOf(oldData), 1);\n          setState({ ...state,\n            data\n          });\n        }, 600);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/AdminApp/src/components/pages/viprpit/MaterialTableDemo.js"],"names":["React","MaterialTable","ViprTablesViewService","MaterialTableDemo","state","setState","useState","columns","field","title","width","data","useEffect","getViprTablesView","then","response","onRowAdd","newData","Promise","resolve","setTimeout","push","onRowUpdate","oldData","indexOf","onRowDelete","splice"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport MaterialTable from 'material-table';\r\n\r\nimport ViprTablesViewService from '../../../services/ViprTablesViewService';\r\n\r\nexport default function MaterialTableDemo() {\r\n  const [state, setState] = React.useState({\r\n    columns: [\r\n      { field: 'elnot', title: 'Elnot', width: 50 },\r\n      { field: 'op_mode_id', title: 'Mode', width: 50 },\r\n      { field: 'rf_mode', title: 'RF Min', width: 50 },\r\n      { field: 'rf_mode', title: 'RF Max', width: 50 },\r\n      { field: 'mode_type', title: 'Mode Type', width: 50 },\r\n      { field: 'pri_seq', title: 'Pri Min', width: 50 },\r\n      { field: 'pri_seq', title: 'Pri Max', width: 50 },\r\n      { field: 'pd_mode', title: 'PD Min', width: 50 },\r\n      { field: 'pd_mode', title: 'PD Max', width: 50 },\r\n      { field: 'sp_mode', title: 'SP Min', width: 50 },\r\n      { field: 'sp_mode', title: 'SP Max', width: 50 },\r\n      { field: 'scan_type', title: 'Scan Type', width: 50 },\r\n    ],\r\n    data: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    ViprTablesViewService.getViprTablesView()\r\n    .then(response => {\r\n        setState(response.data);\r\n    })\r\n  }, []);\r\n\r\n  return (\r\n    <MaterialTable\r\n      title=\"Editable Example\"\r\n      columns={state.columns}\r\n      data={state.data}\r\n      editable={{\r\n        onRowAdd: newData =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              const data = [...state.data];\r\n              data.push(newData);\r\n              setState({ ...state, data });\r\n            }, 600);\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              const data = [...state.data];\r\n              data[data.indexOf(oldData)] = newData;\r\n              setState({ ...state, data });\r\n            }, 600);\r\n          }),\r\n        onRowDelete: oldData =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              const data = [...state.data];\r\n              data.splice(data.indexOf(oldData), 1);\r\n              setState({ ...state, data });\r\n            }, 600);\r\n          }),\r\n      }}\r\n    />\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}