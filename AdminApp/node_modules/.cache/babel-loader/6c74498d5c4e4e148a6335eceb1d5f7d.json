{"ast":null,"code":"/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.row_dragging.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _sortable = _interopRequireDefault(require(\"../sortable\"));\n\nvar _uiGrid_core = _interopRequireDefault(require(\"./ui.grid_core.utils\"));\n\nvar _browser = _interopRequireDefault(require(\"../../core/utils/browser\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar COMMAND_HANDLE_CLASS = \"dx-command-drag\";\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\nvar HANDLE_ICON_CLASS = \"drag-icon\";\nvar ROWS_VIEW = \"rowsview\";\nvar SORTABLE_WITHOUT_HANDLE_CLASS = \"dx-sortable-without-handle\";\nvar RowDraggingExtender = {\n  init: function () {\n    this.callBase.apply(this, arguments);\n\n    this._updateHandleColumn();\n  },\n  _allowReordering: function () {\n    var rowDragging = this.option(\"rowDragging\");\n    return !!(rowDragging && (rowDragging.allowReordering || rowDragging.allowDropInsideItem || rowDragging.group));\n  },\n  _updateHandleColumn: function () {\n    var rowDragging = this.option(\"rowDragging\");\n\n    var allowReordering = this._allowReordering();\n\n    var columnsController = this._columnsController;\n    var isHandleColumnVisible = allowReordering && rowDragging.showDragIcons;\n    columnsController && columnsController.addCommandColumn({\n      type: \"drag\",\n      command: \"drag\",\n      visibleIndex: -2,\n      alignment: \"center\",\n      cssClass: COMMAND_HANDLE_CLASS,\n      width: \"auto\",\n      cellTemplate: this._getHandleTemplate(),\n      visible: isHandleColumnVisible\n    });\n    columnsController.columnOption(\"type:drag\", \"visible\", isHandleColumnVisible);\n  },\n  _renderContent: function () {\n    var _this = this;\n\n    var rowDragging = this.option(\"rowDragging\");\n\n    var allowReordering = this._allowReordering();\n\n    var $content = this.callBase.apply(this, arguments);\n    var isFixedTableRendering = this._isFixedTableRendering;\n    var sortableName = \"_sortable\";\n    var sortableFixedName = \"_sortableFixed\";\n    var currentSortableName = isFixedTableRendering ? sortableFixedName : sortableName;\n    var anotherSortableName = isFixedTableRendering ? sortableName : sortableFixedName;\n\n    var togglePointerEventsStyle = function (toggle) {\n      var _this$sortableFixedNa;\n\n      null === (_this$sortableFixedNa = _this[sortableFixedName]) || void 0 === _this$sortableFixedNa ? void 0 : _this$sortableFixedNa.$element().css(\"pointerEvents\", toggle ? \"auto\" : \"\");\n    };\n\n    if ((allowReordering || this[currentSortableName]) && $content.length) {\n      this[currentSortableName] = this._createComponent($content, _sortable.default, (0, _extend.extend)({\n        component: this.component,\n        contentTemplate: null,\n        filter: \"> table > tbody > .dx-row:not(.dx-freespace-row):not(.dx-virtual-row)\",\n        dragTemplate: this._getDraggableRowTemplate(),\n        handle: rowDragging.showDragIcons && \".\".concat(COMMAND_HANDLE_CLASS),\n        dropFeedbackMode: \"indicate\"\n      }, rowDragging, {\n        onDragStart: function (e) {\n          var _rowDragging$onDragSt;\n\n          var row = e.component.getVisibleRows()[e.fromIndex];\n          e.itemData = row && row.data;\n          var isDataRow = row && \"data\" === row.rowType;\n          e.cancel = !allowReordering || !isDataRow;\n          null === (_rowDragging$onDragSt = rowDragging.onDragStart) || void 0 === _rowDragging$onDragSt ? void 0 : _rowDragging$onDragSt.call(rowDragging, e);\n        },\n        onDragEnter: function () {\n          togglePointerEventsStyle(true);\n        },\n        onDragLeave: function () {\n          togglePointerEventsStyle(false);\n        },\n        onDragEnd: function (e) {\n          var _rowDragging$onDragEn;\n\n          togglePointerEventsStyle(false);\n          null === (_rowDragging$onDragEn = rowDragging.onDragEnd) || void 0 === _rowDragging$onDragEn ? void 0 : _rowDragging$onDragEn.call(rowDragging, e);\n        },\n        dropFeedbackMode: _browser.default.msie ? \"indicate\" : rowDragging.dropFeedbackMode,\n        onOptionChanged: function (e) {\n          var hasFixedSortable = _this[sortableFixedName];\n\n          if (hasFixedSortable) {\n            if (\"fromIndex\" === e.name || \"toIndex\" === e.name) {\n              _this[anotherSortableName].option(e.name, e.value);\n            }\n          }\n        }\n      }));\n      $content.toggleClass(SORTABLE_WITHOUT_HANDLE_CLASS, allowReordering && !rowDragging.showDragIcons);\n    }\n\n    return $content;\n  },\n  _resizeCore: function () {\n    this.callBase.apply(this, arguments);\n\n    var offset = this._dataController.getRowIndexOffset();\n\n    [this._sortable, this._sortableFixed].forEach(function (sortable) {\n      null === sortable || void 0 === sortable ? void 0 : sortable.option(\"offset\", offset);\n      null === sortable || void 0 === sortable ? void 0 : sortable.update();\n    });\n  },\n  _getDraggableGridOptions: function (options) {\n    var gridOptions = this.option();\n    var columns = this.getColumns();\n    var $rowElement = (0, _renderer.default)(this.getRowElement(options.rowIndex));\n    return {\n      dataSource: [{\n        id: 1,\n        parentId: 0\n      }],\n      showBorders: true,\n      showColumnHeaders: false,\n      scrolling: {\n        useNative: false,\n        showScrollbar: false\n      },\n      pager: {\n        visible: false\n      },\n      loadingTimeout: void 0,\n      columnFixing: gridOptions.columnFixing,\n      columnAutoWidth: gridOptions.columnAutoWidth,\n      showColumnLines: gridOptions.showColumnLines,\n      columns: columns.map(function (column) {\n        return {\n          width: column.width || column.visibleWidth,\n          fixed: column.fixed,\n          fixedPosition: column.fixedPosition\n        };\n      }),\n      onRowPrepared: function (e) {\n        var rowsView = e.component.getView(\"rowsView\");\n        (0, _renderer.default)(e.rowElement).replaceWith($rowElement.eq(rowsView._isFixedTableRendering ? 1 : 0).clone());\n      }\n    };\n  },\n  _getDraggableRowTemplate: function () {\n    var _this2 = this;\n\n    return function (options) {\n      var $rootElement = _this2.component.$element();\n\n      var $dataGridContainer = (0, _renderer.default)(\"<div>\").width($rootElement.width());\n\n      var items = _this2._dataController.items();\n\n      var row = items && items[options.fromIndex];\n\n      var gridOptions = _this2._getDraggableGridOptions(row);\n\n      _this2._createComponent($dataGridContainer, _this2.component.NAME, gridOptions);\n\n      $dataGridContainer.find(\".dx-gridbase-container\").children(\":not(.\".concat(_this2.addWidgetPrefix(ROWS_VIEW), \")\")).hide();\n      return $dataGridContainer;\n    };\n  },\n  _getHandleTemplate: function () {\n    var _this3 = this;\n\n    return function (container, options) {\n      if (\"data\" === options.rowType) {\n        (0, _renderer.default)(container).addClass(CELL_FOCUS_DISABLED_CLASS);\n        return (0, _renderer.default)(\"<span>\").addClass(_this3.addWidgetPrefix(HANDLE_ICON_CLASS));\n      } else {\n        _uiGrid_core.default.setEmptyText((0, _renderer.default)(container));\n      }\n    };\n  },\n  optionChanged: function (args) {\n    if (\"rowDragging\" === args.name) {\n      this._updateHandleColumn();\n\n      this._invalidate(true, true);\n\n      args.handled = true;\n    }\n\n    this.callBase.apply(this, arguments);\n  }\n};\nvar _default = {\n  defaultOptions: function () {\n    return {\n      rowDragging: {\n        showDragIcons: true,\n        dropFeedbackMode: \"indicate\",\n        allowReordering: false,\n        allowDropInsideItem: false\n      }\n    };\n  },\n  extenders: {\n    views: {\n      rowsView: RowDraggingExtender\n    }\n  }\n};\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/node_modules/devextreme/ui/grid_core/ui.grid_core.row_dragging.js"],"names":["exports","default","_renderer","_interopRequireDefault","require","_extend","_sortable","_uiGrid_core","_browser","obj","__esModule","COMMAND_HANDLE_CLASS","CELL_FOCUS_DISABLED_CLASS","HANDLE_ICON_CLASS","ROWS_VIEW","SORTABLE_WITHOUT_HANDLE_CLASS","RowDraggingExtender","init","callBase","apply","arguments","_updateHandleColumn","_allowReordering","rowDragging","option","allowReordering","allowDropInsideItem","group","columnsController","_columnsController","isHandleColumnVisible","showDragIcons","addCommandColumn","type","command","visibleIndex","alignment","cssClass","width","cellTemplate","_getHandleTemplate","visible","columnOption","_renderContent","_this","$content","isFixedTableRendering","_isFixedTableRendering","sortableName","sortableFixedName","currentSortableName","anotherSortableName","togglePointerEventsStyle","toggle","_this$sortableFixedNa","$element","css","length","_createComponent","extend","component","contentTemplate","filter","dragTemplate","_getDraggableRowTemplate","handle","concat","dropFeedbackMode","onDragStart","e","_rowDragging$onDragSt","row","getVisibleRows","fromIndex","itemData","data","isDataRow","rowType","cancel","call","onDragEnter","onDragLeave","onDragEnd","_rowDragging$onDragEn","msie","onOptionChanged","hasFixedSortable","name","value","toggleClass","_resizeCore","offset","_dataController","getRowIndexOffset","_sortableFixed","forEach","sortable","update","_getDraggableGridOptions","options","gridOptions","columns","getColumns","$rowElement","getRowElement","rowIndex","dataSource","id","parentId","showBorders","showColumnHeaders","scrolling","useNative","showScrollbar","pager","loadingTimeout","columnFixing","columnAutoWidth","showColumnLines","map","column","visibleWidth","fixed","fixedPosition","onRowPrepared","rowsView","getView","rowElement","replaceWith","eq","clone","_this2","$rootElement","$dataGridContainer","items","NAME","find","children","addWidgetPrefix","hide","_this3","container","addClass","setEmptyText","optionChanged","args","_invalidate","handled","_default","defaultOptions","extenders","views","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.row_dragging.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _sortable = _interopRequireDefault(require(\"../sortable\"));\r\nvar _uiGrid_core = _interopRequireDefault(require(\"./ui.grid_core.utils\"));\r\nvar _browser = _interopRequireDefault(require(\"../../core/utils/browser\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar COMMAND_HANDLE_CLASS = \"dx-command-drag\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar HANDLE_ICON_CLASS = \"drag-icon\";\r\nvar ROWS_VIEW = \"rowsview\";\r\nvar SORTABLE_WITHOUT_HANDLE_CLASS = \"dx-sortable-without-handle\";\r\nvar RowDraggingExtender = {\r\n    init: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._updateHandleColumn()\r\n    },\r\n    _allowReordering: function() {\r\n        var rowDragging = this.option(\"rowDragging\");\r\n        return !!(rowDragging && (rowDragging.allowReordering || rowDragging.allowDropInsideItem || rowDragging.group))\r\n    },\r\n    _updateHandleColumn: function() {\r\n        var rowDragging = this.option(\"rowDragging\");\r\n        var allowReordering = this._allowReordering();\r\n        var columnsController = this._columnsController;\r\n        var isHandleColumnVisible = allowReordering && rowDragging.showDragIcons;\r\n        columnsController && columnsController.addCommandColumn({\r\n            type: \"drag\",\r\n            command: \"drag\",\r\n            visibleIndex: -2,\r\n            alignment: \"center\",\r\n            cssClass: COMMAND_HANDLE_CLASS,\r\n            width: \"auto\",\r\n            cellTemplate: this._getHandleTemplate(),\r\n            visible: isHandleColumnVisible\r\n        });\r\n        columnsController.columnOption(\"type:drag\", \"visible\", isHandleColumnVisible)\r\n    },\r\n    _renderContent: function() {\r\n        var _this = this;\r\n        var rowDragging = this.option(\"rowDragging\");\r\n        var allowReordering = this._allowReordering();\r\n        var $content = this.callBase.apply(this, arguments);\r\n        var isFixedTableRendering = this._isFixedTableRendering;\r\n        var sortableName = \"_sortable\";\r\n        var sortableFixedName = \"_sortableFixed\";\r\n        var currentSortableName = isFixedTableRendering ? sortableFixedName : sortableName;\r\n        var anotherSortableName = isFixedTableRendering ? sortableName : sortableFixedName;\r\n        var togglePointerEventsStyle = function(toggle) {\r\n            var _this$sortableFixedNa;\r\n            null === (_this$sortableFixedNa = _this[sortableFixedName]) || void 0 === _this$sortableFixedNa ? void 0 : _this$sortableFixedNa.$element().css(\"pointerEvents\", toggle ? \"auto\" : \"\")\r\n        };\r\n        if ((allowReordering || this[currentSortableName]) && $content.length) {\r\n            this[currentSortableName] = this._createComponent($content, _sortable.default, (0, _extend.extend)({\r\n                component: this.component,\r\n                contentTemplate: null,\r\n                filter: \"> table > tbody > .dx-row:not(.dx-freespace-row):not(.dx-virtual-row)\",\r\n                dragTemplate: this._getDraggableRowTemplate(),\r\n                handle: rowDragging.showDragIcons && \".\".concat(COMMAND_HANDLE_CLASS),\r\n                dropFeedbackMode: \"indicate\"\r\n            }, rowDragging, {\r\n                onDragStart: function(e) {\r\n                    var _rowDragging$onDragSt;\r\n                    var row = e.component.getVisibleRows()[e.fromIndex];\r\n                    e.itemData = row && row.data;\r\n                    var isDataRow = row && \"data\" === row.rowType;\r\n                    e.cancel = !allowReordering || !isDataRow;\r\n                    null === (_rowDragging$onDragSt = rowDragging.onDragStart) || void 0 === _rowDragging$onDragSt ? void 0 : _rowDragging$onDragSt.call(rowDragging, e)\r\n                },\r\n                onDragEnter: function() {\r\n                    togglePointerEventsStyle(true)\r\n                },\r\n                onDragLeave: function() {\r\n                    togglePointerEventsStyle(false)\r\n                },\r\n                onDragEnd: function(e) {\r\n                    var _rowDragging$onDragEn;\r\n                    togglePointerEventsStyle(false);\r\n                    null === (_rowDragging$onDragEn = rowDragging.onDragEnd) || void 0 === _rowDragging$onDragEn ? void 0 : _rowDragging$onDragEn.call(rowDragging, e)\r\n                },\r\n                dropFeedbackMode: _browser.default.msie ? \"indicate\" : rowDragging.dropFeedbackMode,\r\n                onOptionChanged: function(e) {\r\n                    var hasFixedSortable = _this[sortableFixedName];\r\n                    if (hasFixedSortable) {\r\n                        if (\"fromIndex\" === e.name || \"toIndex\" === e.name) {\r\n                            _this[anotherSortableName].option(e.name, e.value)\r\n                        }\r\n                    }\r\n                }\r\n            }));\r\n            $content.toggleClass(SORTABLE_WITHOUT_HANDLE_CLASS, allowReordering && !rowDragging.showDragIcons)\r\n        }\r\n        return $content\r\n    },\r\n    _resizeCore: function() {\r\n        this.callBase.apply(this, arguments);\r\n        var offset = this._dataController.getRowIndexOffset();\r\n        [this._sortable, this._sortableFixed].forEach(function(sortable) {\r\n            null === sortable || void 0 === sortable ? void 0 : sortable.option(\"offset\", offset);\r\n            null === sortable || void 0 === sortable ? void 0 : sortable.update()\r\n        })\r\n    },\r\n    _getDraggableGridOptions: function(options) {\r\n        var gridOptions = this.option();\r\n        var columns = this.getColumns();\r\n        var $rowElement = (0, _renderer.default)(this.getRowElement(options.rowIndex));\r\n        return {\r\n            dataSource: [{\r\n                id: 1,\r\n                parentId: 0\r\n            }],\r\n            showBorders: true,\r\n            showColumnHeaders: false,\r\n            scrolling: {\r\n                useNative: false,\r\n                showScrollbar: false\r\n            },\r\n            pager: {\r\n                visible: false\r\n            },\r\n            loadingTimeout: void 0,\r\n            columnFixing: gridOptions.columnFixing,\r\n            columnAutoWidth: gridOptions.columnAutoWidth,\r\n            showColumnLines: gridOptions.showColumnLines,\r\n            columns: columns.map(function(column) {\r\n                return {\r\n                    width: column.width || column.visibleWidth,\r\n                    fixed: column.fixed,\r\n                    fixedPosition: column.fixedPosition\r\n                }\r\n            }),\r\n            onRowPrepared: function(e) {\r\n                var rowsView = e.component.getView(\"rowsView\");\r\n                (0, _renderer.default)(e.rowElement).replaceWith($rowElement.eq(rowsView._isFixedTableRendering ? 1 : 0).clone())\r\n            }\r\n        }\r\n    },\r\n    _getDraggableRowTemplate: function() {\r\n        var _this2 = this;\r\n        return function(options) {\r\n            var $rootElement = _this2.component.$element();\r\n            var $dataGridContainer = (0, _renderer.default)(\"<div>\").width($rootElement.width());\r\n            var items = _this2._dataController.items();\r\n            var row = items && items[options.fromIndex];\r\n            var gridOptions = _this2._getDraggableGridOptions(row);\r\n            _this2._createComponent($dataGridContainer, _this2.component.NAME, gridOptions);\r\n            $dataGridContainer.find(\".dx-gridbase-container\").children(\":not(.\".concat(_this2.addWidgetPrefix(ROWS_VIEW), \")\")).hide();\r\n            return $dataGridContainer\r\n        }\r\n    },\r\n    _getHandleTemplate: function() {\r\n        var _this3 = this;\r\n        return function(container, options) {\r\n            if (\"data\" === options.rowType) {\r\n                (0, _renderer.default)(container).addClass(CELL_FOCUS_DISABLED_CLASS);\r\n                return (0, _renderer.default)(\"<span>\").addClass(_this3.addWidgetPrefix(HANDLE_ICON_CLASS))\r\n            } else {\r\n                _uiGrid_core.default.setEmptyText((0, _renderer.default)(container))\r\n            }\r\n        }\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"rowDragging\" === args.name) {\r\n            this._updateHandleColumn();\r\n            this._invalidate(true, true);\r\n            args.handled = true\r\n        }\r\n        this.callBase.apply(this, arguments)\r\n    }\r\n};\r\nvar _default = {\r\n    defaultOptions: function() {\r\n        return {\r\n            rowDragging: {\r\n                showDragIcons: true,\r\n                dropFeedbackMode: \"indicate\",\r\n                allowReordering: false,\r\n                allowDropInsideItem: false\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: RowDraggingExtender\r\n        }\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}