{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CapiniaC\\\\Desktop\\\\Collection\\\\Work\\\\project\\\\security\\\\AdminApp\\\\src\\\\components\\\\pages\\\\UsersComponent.js\";\nimport React, { useState, useEffect } from 'react'; //import NewUsersForm from \"./NewUserForm\";\n\nimport PageHeader from \"./PageHeader\";\nimport PeopleOutlineTwoToneIcon from '@material-ui/icons/PeopleOutlineTwoTone';\nimport { Paper, makeStyles, TableBody, TableRow, Toolbar, InputAdornment, TableCell } from '@material-ui/core';\nimport useTable from \"../useTable\";\nimport Controls from \"../controls/Controls\";\nimport { Search } from \"@material-ui/icons\";\nimport UsersService from '../../services/UsersService';\nconst useStyles = makeStyles(theme => ({\n  pageContent: {\n    margin: theme.spacing(5),\n    padding: theme.spacing(3)\n  },\n  searchInput: {\n    width: '75%'\n  }\n}));\nconst headCells = [{\n  id: 'id',\n  label: 'ID',\n  width: 70\n}, {\n  id: 'email',\n  label: 'Email',\n  width: 130\n}, {\n  id: 'fullname',\n  label: 'Name',\n  width: 130\n}, {\n  id: 'phonenumber',\n  label: 'Phone Number',\n  width: 150,\n  disableSorting: true\n}, {\n  id: 'role',\n  label: 'Role',\n  width: 130\n}, {\n  id: 'username',\n  label: 'Username',\n  width: 130\n}];\nexport default function TestTable3Page() {\n  const classes = useStyles();\n  const [records, setRecords] = useState([]);\n  const [filterFn, setFilterFn] = useState({\n    fn: items => {\n      return items;\n    }\n  });\n  useEffect(() => {\n    UsersService.getUsers().then(response => {\n      setRecords(response.data);\n    });\n  }, []);\n  const {\n    TblContainer,\n    TblHead,\n    TblPagination,\n    recordsAfterPagingAndSorting\n  } = useTable(records, headCells, filterFn);\n\n  const handleSearch = e => {\n    let target = e.target;\n    setFilterFn({\n      fn: items => {\n        if (target.value === \"\") return items;else return items.filter(x => x.fullname.toLowerCase().includes(target.value));\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PageHeader, {\n    title: \"Users\",\n    subTitle: \"Test Subtitle\",\n    icon: /*#__PURE__*/React.createElement(PeopleOutlineTwoToneIcon, {\n      fontSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 23\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    className: classes.pageContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Controls.Input, {\n    label: \"Search Users\",\n    className: classes.searchInput,\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 46\n        }\n      }, /*#__PURE__*/React.createElement(Search, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 33\n        }\n      }))\n    },\n    onChange: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Controls.Button, {\n    text: \"Add New\",\n    variant: \"outlined\",\n    startIcon: /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 32\n      }\n    }),\n    className: classes.newButton,\n    onClick: () => {\n      setOpenPopup(true);\n      setRecordForEdit(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(TblContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TblHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, recordsAfterPagingAndSorting(records).map(item => /*#__PURE__*/React.createElement(TableRow, {\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 34\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 37\n    }\n  }, item.id), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 37\n    }\n  }, item.email), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 37\n    }\n  }, item.fullname), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 37\n    }\n  }, item.phonenumber), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 37\n    }\n  }, item.role), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 37\n    }\n  }, item.username))))), /*#__PURE__*/React.createElement(TblPagination, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/AdminApp/src/components/pages/UsersComponent.js"],"names":["React","useState","useEffect","PageHeader","PeopleOutlineTwoToneIcon","Paper","makeStyles","TableBody","TableRow","Toolbar","InputAdornment","TableCell","useTable","Controls","Search","UsersService","useStyles","theme","pageContent","margin","spacing","padding","searchInput","width","headCells","id","label","disableSorting","TestTable3Page","classes","records","setRecords","filterFn","setFilterFn","fn","items","getUsers","then","response","data","TblContainer","TblHead","TblPagination","recordsAfterPagingAndSorting","handleSearch","e","target","value","filter","x","fullname","toLowerCase","includes","startAdornment","newButton","setOpenPopup","setRecordForEdit","map","item","email","phonenumber","role","username"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\n//import NewUsersForm from \"./NewUserForm\";\r\nimport PageHeader from \"./PageHeader\";\r\nimport PeopleOutlineTwoToneIcon from '@material-ui/icons/PeopleOutlineTwoTone';\r\nimport { Paper, makeStyles, TableBody, TableRow, Toolbar, InputAdornment, TableCell } from '@material-ui/core';\r\nimport useTable from \"../useTable\";\r\nimport Controls from \"../controls/Controls\";\r\nimport { Search } from \"@material-ui/icons\";\r\n\r\nimport UsersService from '../../services/UsersService';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    pageContent: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3)\r\n    },\r\n    searchInput: {\r\n        width: '75%'\r\n    }\r\n}))\r\n\r\n\r\nconst headCells = [\r\n    { id: 'id', label: 'ID', width: 70 },\r\n    { id: 'email', label: 'Email', width: 130 },\r\n    { id: 'fullname', label: 'Name', width: 130 },\r\n    { id: 'phonenumber', label: 'Phone Number', width: 150, disableSorting: true },\r\n    { id: 'role', label: 'Role', width: 130 },\r\n    { id: 'username', label: 'Username', width: 130 },\r\n]\r\n\r\nexport default function TestTable3Page() {\r\n\r\n    const classes = useStyles();\r\n    const [records, setRecords] = useState([])\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n\r\n    useEffect(() => {\r\n        UsersService.getUsers()\r\n        .then(response => {\r\n          setRecords(response.data);\r\n        })\r\n    }, []);\r\n\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    } = useTable(records, headCells, filterFn);\r\n\r\n    const handleSearch = e => {\r\n        let target = e.target;\r\n        setFilterFn({\r\n            fn: items => {\r\n                if (target.value === \"\")\r\n                    return items;\r\n                else\r\n                    return items.filter(x => x.fullname.toLowerCase().includes(target.value))\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PageHeader\r\n                title=\"Users\"\r\n                subTitle=\"Test Subtitle\"\r\n                icon={<PeopleOutlineTwoToneIcon fontSize=\"large\" />}\r\n            />\r\n            <Paper className={classes.pageContent}>\r\n                <Toolbar>\r\n                    <Controls.Input\r\n                        label=\"Search Users\"\r\n                        className={classes.searchInput}\r\n                        InputProps={{\r\n                            startAdornment: (<InputAdornment position=\"start\">\r\n                                <Search />\r\n                            </InputAdornment>)\r\n                        }}\r\n                        onChange={handleSearch}\r\n                    />\r\n                    <Controls.Button\r\n                    text=\"Add New\"\r\n                    variant=\"outlined\"\r\n                    startIcon={<AddIcon />}\r\n                    className={classes.newButton}\r\n                    onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n                    />\r\n                </Toolbar>\r\n                <TblContainer>\r\n                    <TblHead />\r\n                    <TableBody>\r\n                        {\r\n                            recordsAfterPagingAndSorting(records).map(item =>\r\n                                (<TableRow key={item.id}>\r\n                                    <TableCell>{item.id}</TableCell>\r\n                                    <TableCell>{item.email}</TableCell>\r\n                                    <TableCell>{item.fullname}</TableCell>\r\n                                    <TableCell>{item.phonenumber}</TableCell>\r\n                                    <TableCell>{item.role}</TableCell>\r\n                                    <TableCell>{item.username}</TableCell>\r\n                                </TableRow>)\r\n                            )\r\n                        }\r\n                    </TableBody>\r\n                </TblContainer>\r\n                <TblPagination />\r\n            </Paper>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}