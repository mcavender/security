{"ast":null,"code":"/**\r\n * DevExtreme (ui/responsive_box.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _renderer = _interopRequireDefault(require(\"../core/renderer\"));\n\nvar _events_engine = _interopRequireDefault(require(\"../events/core/events_engine\"));\n\nvar _common = require(\"../core/utils/common\");\n\nvar _type = require(\"../core/utils/type\");\n\nvar _ui = _interopRequireDefault(require(\"./widget/ui.errors\"));\n\nvar _window = require(\"../core/utils/window\");\n\nvar _iterator = require(\"../core/utils/iterator\");\n\nvar _extend = require(\"../core/utils/extend\");\n\nvar _component_registrator = _interopRequireDefault(require(\"../core/component_registrator\"));\n\nvar _box = _interopRequireDefault(require(\"./box\"));\n\nvar _uiCollection_widget = _interopRequireDefault(require(\"./collection/ui.collection_widget.edit\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar window = (0, _window.getWindow)();\nvar RESPONSIVE_BOX_CLASS = \"dx-responsivebox\";\nvar SCREEN_SIZE_CLASS_PREFIX = RESPONSIVE_BOX_CLASS + \"-screen-\";\nvar BOX_ITEM_CLASS = \"dx-box-item\";\nvar BOX_ITEM_DATA_KEY = \"dxBoxItemData\";\nvar HD_SCREEN_WIDTH = 1920;\n\nvar ResponsiveBox = _uiCollection_widget.default.inherit({\n  _getDefaultOptions: function () {\n    return (0, _extend.extend)(this.callBase(), {\n      rows: [],\n      cols: [],\n      screenByWidth: null,\n      singleColumnScreen: \"\",\n      height: \"100%\",\n      width: \"100%\",\n      activeStateEnabled: false,\n      focusStateEnabled: false,\n      onItemStateChanged: void 0,\n      onLayoutChanged: null,\n      currentScreenFactor: void 0,\n      _layoutStrategy: void 0\n    });\n  },\n  _init: function () {\n    if (!this.option(\"screenByWidth\")) {\n      this._options.silent(\"screenByWidth\", _window.defaultScreenFactorFunc);\n    }\n\n    this.callBase();\n\n    this._initLayoutChangedAction();\n  },\n  _initLayoutChangedAction: function () {\n    this._layoutChangedAction = this._createActionByOption(\"onLayoutChanged\", {\n      excludeValidators: [\"disabled\", \"readonly\"]\n    });\n  },\n  _itemClass: function () {\n    return BOX_ITEM_CLASS;\n  },\n  _itemDataKey: function () {\n    return BOX_ITEM_DATA_KEY;\n  },\n  _initMarkup: function () {\n    this.callBase();\n    this.$element().addClass(RESPONSIVE_BOX_CLASS);\n\n    this._updateRootBox();\n  },\n  _updateRootBox: function () {\n    clearTimeout(this._updateTimer);\n    this._updateTimer = setTimeout(function () {\n      if (this._$root) {\n        _events_engine.default.triggerHandler(this._$root, \"dxupdate\");\n      }\n    }.bind(this));\n  },\n  _renderItems: function () {\n    this._setScreenSize();\n\n    this._screenItems = this._itemsByScreen();\n\n    this._prepareGrid();\n\n    this._spreadItems();\n\n    this._layoutItems();\n\n    this._linkNodeToItem();\n  },\n  _itemOptionChanged: function (item) {\n    var $item = this._findItemElementByItem(item);\n\n    if (!$item.length) {\n      return;\n    }\n\n    this._refreshItem($item, item);\n\n    this._clearItemNodeTemplates();\n\n    this._update(true);\n  },\n  _setScreenSize: function () {\n    var currentScreen = this._getCurrentScreen();\n\n    this._removeScreenSizeClass();\n\n    this.$element().addClass(SCREEN_SIZE_CLASS_PREFIX + currentScreen);\n    this.option(\"currentScreenFactor\", currentScreen);\n  },\n  _removeScreenSizeClass: function () {\n    var currentScreenFactor = this.option(\"currentScreenFactor\");\n    currentScreenFactor && this.$element().removeClass(SCREEN_SIZE_CLASS_PREFIX + currentScreenFactor);\n  },\n  _prepareGrid: function () {\n    var grid = this._grid = [];\n\n    this._prepareRowsAndCols();\n\n    (0, _iterator.each)(this._rows, function () {\n      var row = [];\n      grid.push(row);\n      (0, _iterator.each)(this._cols, function () {\n        row.push(this._createEmptyCell());\n      }.bind(this));\n    }.bind(this));\n  },\n  getSingleColumnRows: function () {\n    var rows = this.option(\"rows\");\n    var screenItemsLength = this._screenItems.length;\n\n    if (rows.length) {\n      var filteredRows = this._filterByScreen(rows);\n\n      var result = [];\n\n      for (var i = 0; i < screenItemsLength; i++) {\n        var sizeConfig = this._defaultSizeConfig();\n\n        if (i < filteredRows.length && (0, _type.isDefined)(filteredRows[i].shrink)) {\n          sizeConfig.shrink = filteredRows[i].shrink;\n        }\n\n        result.push(sizeConfig);\n      }\n\n      return result;\n    } else {\n      return this._defaultSizeConfig(screenItemsLength);\n    }\n  },\n  _prepareRowsAndCols: function () {\n    if (this._isSingleColumnScreen()) {\n      this._prepareSingleColumnScreenItems();\n\n      this._rows = this.getSingleColumnRows();\n      this._cols = this._defaultSizeConfig(1);\n    } else {\n      this._rows = this._sizesByScreen(this.option(\"rows\"));\n      this._cols = this._sizesByScreen(this.option(\"cols\"));\n    }\n  },\n  _isSingleColumnScreen: function () {\n    return this._screenRegExp().test(this.option(\"singleColumnScreen\")) || !this.option(\"rows\").length || !this.option(\"cols\").length;\n  },\n  _prepareSingleColumnScreenItems: function () {\n    this._screenItems.sort(function (item1, item2) {\n      return item1.location.row - item2.location.row || item1.location.col - item2.location.col;\n    });\n\n    (0, _iterator.each)(this._screenItems, function (index, item) {\n      (0, _extend.extend)(item.location, {\n        row: index,\n        col: 0,\n        rowspan: 1,\n        colspan: 1\n      });\n    });\n  },\n  _sizesByScreen: function (sizeConfigs) {\n    return (0, _iterator.map)(this._filterByScreen(sizeConfigs), function (sizeConfig) {\n      return (0, _extend.extend)(this._defaultSizeConfig(), sizeConfig);\n    }.bind(this));\n  },\n  _createDefaultSizeConfig: function () {\n    return {\n      ratio: 1,\n      baseSize: 0,\n      minSize: 0,\n      maxSize: 0\n    };\n  },\n  _defaultSizeConfig: function (size) {\n    var defaultSizeConfig = this._createDefaultSizeConfig();\n\n    if (!arguments.length) {\n      return defaultSizeConfig;\n    }\n\n    var result = [];\n\n    for (var i = 0; i < size; i++) {\n      result.push(defaultSizeConfig);\n    }\n\n    return result;\n  },\n  _filterByScreen: function (items) {\n    var screenRegExp = this._screenRegExp();\n\n    return (0, _common.grep)(items, function (item) {\n      return !item.screen || screenRegExp.test(item.screen);\n    });\n  },\n  _screenRegExp: function () {\n    var screen = this._getCurrentScreen();\n\n    return new RegExp(\"(^|\\\\s)\" + screen + \"($|\\\\s)\", \"i\");\n  },\n  _getCurrentScreen: function () {\n    var width = this._screenWidth();\n\n    return this.option(\"screenByWidth\")(width);\n  },\n  _screenWidth: function () {\n    return (0, _window.hasWindow)() ? (0, _renderer.default)(window).width() : HD_SCREEN_WIDTH;\n  },\n  _createEmptyCell: function () {\n    return {\n      item: {},\n      location: {\n        colspan: 1,\n        rowspan: 1\n      }\n    };\n  },\n  _spreadItems: function () {\n    (0, _iterator.each)(this._screenItems, function (_, itemInfo) {\n      var location = itemInfo.location || {};\n      var itemCol = location.col;\n      var itemRow = location.row;\n      var row = this._grid[itemRow];\n      var itemCell = row && row[itemCol];\n\n      this._occupyCells(itemCell, itemInfo);\n    }.bind(this));\n  },\n  _itemsByScreen: function () {\n    var _this = this;\n\n    return this.option(\"items\").reduce(function (result, item) {\n      var locations = item.location || {};\n      locations = (0, _type.isPlainObject)(locations) ? [locations] : locations;\n\n      _this._filterByScreen(locations).forEach(function (location) {\n        result.push({\n          item: item,\n          location: (0, _extend.extend)({\n            rowspan: 1,\n            colspan: 1\n          }, location)\n        });\n      });\n\n      return result;\n    }, []);\n  },\n  _occupyCells: function (itemCell, itemInfo) {\n    if (!itemCell || this._isItemCellOccupied(itemCell, itemInfo)) {\n      return;\n    }\n\n    (0, _extend.extend)(itemCell, itemInfo);\n\n    this._markSpanningCell(itemCell);\n  },\n  _isItemCellOccupied: function (itemCell, itemInfo) {\n    if (!(0, _type.isEmptyObject)(itemCell.item)) {\n      return true;\n    }\n\n    var result = false;\n\n    this._loopOverSpanning(itemInfo.location, function (cell) {\n      result = result || !(0, _type.isEmptyObject)(cell.item);\n    });\n\n    return result;\n  },\n  _loopOverSpanning: function (location, callback) {\n    var rowEnd = location.row + location.rowspan - 1;\n    var colEnd = location.col + location.colspan - 1;\n    var boundRowEnd = Math.min(rowEnd, this._rows.length - 1);\n    var boundColEnd = Math.min(colEnd, this._cols.length - 1);\n    location.rowspan -= rowEnd - boundRowEnd;\n    location.colspan -= colEnd - boundColEnd;\n\n    for (var rowIndex = location.row; rowIndex <= boundRowEnd; rowIndex++) {\n      for (var colIndex = location.col; colIndex <= boundColEnd; colIndex++) {\n        if (rowIndex !== location.row || colIndex !== location.col) {\n          callback(this._grid[rowIndex][colIndex]);\n        }\n      }\n    }\n  },\n  _markSpanningCell: function (itemCell) {\n    this._loopOverSpanning(itemCell.location, function (cell) {\n      (0, _extend.extend)(cell, {\n        item: itemCell.item,\n        spanningCell: itemCell\n      });\n    });\n  },\n  _linkNodeToItem: function () {\n    (0, _iterator.each)(this._itemElements(), function (_, itemNode) {\n      var $item = (0, _renderer.default)(itemNode);\n      var item = $item.data(BOX_ITEM_DATA_KEY);\n\n      if (!item.box) {\n        item.node = $item.children();\n      }\n    });\n  },\n  _layoutItems: function () {\n    var rowsCount = this._grid.length;\n    var colsCount = rowsCount && this._grid[0].length;\n\n    if (!rowsCount && !colsCount) {\n      return;\n    }\n\n    var result = this._layoutBlock({\n      direction: \"col\",\n      row: {\n        start: 0,\n        end: rowsCount - 1\n      },\n      col: {\n        start: 0,\n        end: colsCount - 1\n      }\n    });\n\n    var rootBox = this._prepareBoxConfig(result.box || {\n      direction: \"row\",\n      items: [(0, _extend.extend)(result, {\n        ratio: 1\n      })]\n    });\n\n    (0, _extend.extend)(rootBox, this._rootBoxConfig(rootBox.items));\n    this._$root = (0, _renderer.default)(\"<div>\").appendTo(this._itemContainer());\n\n    this._createComponent(this._$root, _box.default, rootBox);\n  },\n  _rootBoxConfig: function (items) {\n    var rootItems = (0, _iterator.each)(items, function (index, item) {\n      this._needApplyAutoBaseSize(item) && (0, _extend.extend)(item, {\n        baseSize: \"auto\"\n      });\n    }.bind(this));\n    return (0, _extend.extend)({\n      width: \"100%\",\n      height: \"100%\",\n      items: rootItems,\n      itemTemplate: this._getTemplateByOption(\"itemTemplate\"),\n      itemHoldTimeout: this.option(\"itemHoldTimeout\"),\n      onItemHold: this._createActionByOption(\"onItemHold\"),\n      onItemClick: this._createActionByOption(\"onItemClick\"),\n      onItemContextMenu: this._createActionByOption(\"onItemContextMenu\"),\n      onItemRendered: this._createActionByOption(\"onItemRendered\")\n    }, {\n      _layoutStrategy: this.option(\"_layoutStrategy\")\n    });\n  },\n  _needApplyAutoBaseSize: function (item) {\n    return !item.baseSize && (!item.minSize || \"auto\" === item.minSize) && (!item.maxSize || \"auto\" === item.maxSize);\n  },\n  _prepareBoxConfig: function (config) {\n    return (0, _extend.extend)(config || {}, {\n      crossAlign: \"stretch\",\n      onItemStateChanged: this.option(\"onItemStateChanged\")\n    });\n  },\n  _layoutBlock: function (options) {\n    if (this._isSingleItem(options)) {\n      return this._itemByCell(options.row.start, options.col.start);\n    }\n\n    return this._layoutDirection(options);\n  },\n  _isSingleItem: function (options) {\n    var firstCellLocation = this._grid[options.row.start][options.col.start].location;\n    var isItemRowSpanned = options.row.end - options.row.start === firstCellLocation.rowspan - 1;\n    var isItemColSpanned = options.col.end - options.col.start === firstCellLocation.colspan - 1;\n    return isItemRowSpanned && isItemColSpanned;\n  },\n  _itemByCell: function (rowIndex, colIndex) {\n    var itemCell = this._grid[rowIndex][colIndex];\n    return itemCell.spanningCell ? null : itemCell.item;\n  },\n  _layoutDirection: function (options) {\n    var items = [];\n    var direction = options.direction;\n\n    var crossDirection = this._crossDirection(direction);\n\n    var block;\n\n    while (block = this._nextBlock(options)) {\n      if (this._isBlockIndivisible(options.prevBlockOptions, block)) {\n        throw _ui.default.Error(\"E1025\");\n      }\n\n      var item = this._layoutBlock({\n        direction: crossDirection,\n        row: block.row,\n        col: block.col,\n        prevBlockOptions: options\n      });\n\n      if (item) {\n        (0, _extend.extend)(item, this._blockSize(block, crossDirection));\n        items.push(item);\n      }\n\n      options[crossDirection].start = block[crossDirection].end + 1;\n    }\n\n    return {\n      box: this._prepareBoxConfig({\n        direction: direction,\n        items: items\n      })\n    };\n  },\n  _isBlockIndivisible: function (options, block) {\n    return options && options.col.start === block.col.start && options.col.end === block.col.end && options.row.start === block.row.start && options.row.end === block.row.end;\n  },\n  _crossDirection: function (direction) {\n    return \"col\" === direction ? \"row\" : \"col\";\n  },\n  _nextBlock: function (options) {\n    var direction = options.direction;\n\n    var crossDirection = this._crossDirection(direction);\n\n    var startIndex = options[direction].start;\n    var endIndex = options[direction].end;\n    var crossStartIndex = options[crossDirection].start;\n\n    if (crossStartIndex > options[crossDirection].end) {\n      return null;\n    }\n\n    var crossSpan = 1;\n\n    for (var crossIndex = crossStartIndex; crossIndex < crossStartIndex + crossSpan; crossIndex++) {\n      var lineCrossSpan = 1;\n\n      for (var index = startIndex; index <= endIndex; index++) {\n        var cell = this._cellByDirection(direction, index, crossIndex);\n\n        lineCrossSpan = Math.max(lineCrossSpan, cell.location[crossDirection + \"span\"]);\n      }\n\n      var lineCrossEndIndex = crossIndex + lineCrossSpan;\n      var crossEndIndex = crossStartIndex + crossSpan;\n\n      if (lineCrossEndIndex > crossEndIndex) {\n        crossSpan += lineCrossEndIndex - crossEndIndex;\n      }\n    }\n\n    var result = {};\n    result[direction] = {\n      start: startIndex,\n      end: endIndex\n    };\n    result[crossDirection] = {\n      start: crossStartIndex,\n      end: crossStartIndex + crossSpan - 1\n    };\n    return result;\n  },\n  _cellByDirection: function (direction, index, crossIndex) {\n    return \"col\" === direction ? this._grid[crossIndex][index] : this._grid[index][crossIndex];\n  },\n  _blockSize: function (block, direction) {\n    var defaultMinSize = \"row\" === direction ? \"auto\" : 0;\n    var sizeConfigs = \"row\" === direction ? this._rows : this._cols;\n    var result = (0, _extend.extend)(this._createDefaultSizeConfig(), {\n      ratio: 0\n    });\n\n    for (var index = block[direction].start; index <= block[direction].end; index++) {\n      var sizeConfig = sizeConfigs[index];\n      result.ratio += sizeConfig.ratio;\n      result.baseSize += sizeConfig.baseSize;\n      result.minSize += sizeConfig.minSize;\n      result.maxSize += sizeConfig.maxSize;\n\n      if ((0, _type.isDefined)(sizeConfig.shrink)) {\n        result.shrink = sizeConfig.shrink;\n      }\n    }\n\n    result.minSize = result.minSize ? result.minSize : defaultMinSize;\n    result.maxSize = result.maxSize ? result.maxSize : \"auto\";\n    this._isSingleColumnScreen() && (result.baseSize = \"auto\");\n    return result;\n  },\n  _update: function (forceRemoveRoot) {\n    var $existingRoot = this._$root;\n\n    this._renderItems();\n\n    if ($existingRoot) {\n      if (forceRemoveRoot) {\n        $existingRoot.remove();\n      } else {\n        $existingRoot.detach();\n\n        this._saveAssistantRoot($existingRoot);\n      }\n    }\n\n    this._layoutChangedAction();\n\n    this._updateRootBox();\n  },\n  _saveAssistantRoot: function ($root) {\n    this._assistantRoots = this._assistantRoots || [];\n\n    this._assistantRoots.push($root);\n  },\n  _dispose: function () {\n    clearTimeout(this._updateTimer);\n\n    this._clearItemNodeTemplates();\n\n    this._cleanUnusedRoots();\n\n    this.callBase.apply(this, arguments);\n  },\n  _cleanUnusedRoots: function () {\n    if (!this._assistantRoots) {\n      return;\n    }\n\n    (0, _iterator.each)(this._assistantRoots, function (_, item) {\n      (0, _renderer.default)(item).remove();\n    });\n  },\n  _clearItemNodeTemplates: function () {\n    (0, _iterator.each)(this.option(\"items\"), function () {\n      delete this.node;\n    });\n  },\n  _toggleVisibility: function (visible) {\n    this.callBase(visible);\n\n    if (visible) {\n      this._updateRootBox();\n    }\n  },\n  _attachClickEvent: _common.noop,\n  _optionChanged: function (args) {\n    switch (args.name) {\n      case \"rows\":\n      case \"cols\":\n      case \"screenByWidth\":\n      case \"_layoutStrategy\":\n      case \"singleColumnScreen\":\n        this._clearItemNodeTemplates();\n\n        this._invalidate();\n\n        break;\n\n      case \"width\":\n      case \"height\":\n        this.callBase(args);\n\n        this._update();\n\n        break;\n\n      case \"onLayoutChanged\":\n        this._initLayoutChangedAction();\n\n        break;\n\n      case \"itemTemplate\":\n        this._clearItemNodeTemplates();\n\n        this.callBase(args);\n        break;\n\n      case \"currentScreenFactor\":\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _dimensionChanged: function () {\n    if (this._getCurrentScreen() !== this.option(\"currentScreenFactor\")) {\n      this._update();\n    }\n  },\n  repaint: function () {\n    this._update();\n  }\n});\n\n(0, _component_registrator.default)(\"dxResponsiveBox\", ResponsiveBox);\nvar _default = ResponsiveBox;\nexports.default = _default;\nmodule.exports = exports.default;\nmodule.exports.default = module.exports;","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/node_modules/devextreme/ui/responsive_box.js"],"names":["exports","default","_renderer","_interopRequireDefault","require","_events_engine","_common","_type","_ui","_window","_iterator","_extend","_component_registrator","_box","_uiCollection_widget","obj","__esModule","window","getWindow","RESPONSIVE_BOX_CLASS","SCREEN_SIZE_CLASS_PREFIX","BOX_ITEM_CLASS","BOX_ITEM_DATA_KEY","HD_SCREEN_WIDTH","ResponsiveBox","inherit","_getDefaultOptions","extend","callBase","rows","cols","screenByWidth","singleColumnScreen","height","width","activeStateEnabled","focusStateEnabled","onItemStateChanged","onLayoutChanged","currentScreenFactor","_layoutStrategy","_init","option","_options","silent","defaultScreenFactorFunc","_initLayoutChangedAction","_layoutChangedAction","_createActionByOption","excludeValidators","_itemClass","_itemDataKey","_initMarkup","$element","addClass","_updateRootBox","clearTimeout","_updateTimer","setTimeout","_$root","triggerHandler","bind","_renderItems","_setScreenSize","_screenItems","_itemsByScreen","_prepareGrid","_spreadItems","_layoutItems","_linkNodeToItem","_itemOptionChanged","item","$item","_findItemElementByItem","length","_refreshItem","_clearItemNodeTemplates","_update","currentScreen","_getCurrentScreen","_removeScreenSizeClass","removeClass","grid","_grid","_prepareRowsAndCols","each","_rows","row","push","_cols","_createEmptyCell","getSingleColumnRows","screenItemsLength","filteredRows","_filterByScreen","result","i","sizeConfig","_defaultSizeConfig","isDefined","shrink","_isSingleColumnScreen","_prepareSingleColumnScreenItems","_sizesByScreen","_screenRegExp","test","sort","item1","item2","location","col","index","rowspan","colspan","sizeConfigs","map","_createDefaultSizeConfig","ratio","baseSize","minSize","maxSize","size","defaultSizeConfig","arguments","items","screenRegExp","grep","screen","RegExp","_screenWidth","hasWindow","_","itemInfo","itemCol","itemRow","itemCell","_occupyCells","_this","reduce","locations","isPlainObject","forEach","_isItemCellOccupied","_markSpanningCell","isEmptyObject","_loopOverSpanning","cell","callback","rowEnd","colEnd","boundRowEnd","Math","min","boundColEnd","rowIndex","colIndex","spanningCell","_itemElements","itemNode","data","box","node","children","rowsCount","colsCount","_layoutBlock","direction","start","end","rootBox","_prepareBoxConfig","_rootBoxConfig","appendTo","_itemContainer","_createComponent","rootItems","_needApplyAutoBaseSize","itemTemplate","_getTemplateByOption","itemHoldTimeout","onItemHold","onItemClick","onItemContextMenu","onItemRendered","config","crossAlign","options","_isSingleItem","_itemByCell","_layoutDirection","firstCellLocation","isItemRowSpanned","isItemColSpanned","crossDirection","_crossDirection","block","_nextBlock","_isBlockIndivisible","prevBlockOptions","Error","_blockSize","startIndex","endIndex","crossStartIndex","crossSpan","crossIndex","lineCrossSpan","_cellByDirection","max","lineCrossEndIndex","crossEndIndex","defaultMinSize","forceRemoveRoot","$existingRoot","remove","detach","_saveAssistantRoot","$root","_assistantRoots","_dispose","_cleanUnusedRoots","apply","_toggleVisibility","visible","_attachClickEvent","noop","_optionChanged","args","name","_invalidate","_dimensionChanged","repaint","_default","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/responsive_box.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../events/core/events_engine\"));\r\nvar _common = require(\"../core/utils/common\");\r\nvar _type = require(\"../core/utils/type\");\r\nvar _ui = _interopRequireDefault(require(\"./widget/ui.errors\"));\r\nvar _window = require(\"../core/utils/window\");\r\nvar _iterator = require(\"../core/utils/iterator\");\r\nvar _extend = require(\"../core/utils/extend\");\r\nvar _component_registrator = _interopRequireDefault(require(\"../core/component_registrator\"));\r\nvar _box = _interopRequireDefault(require(\"./box\"));\r\nvar _uiCollection_widget = _interopRequireDefault(require(\"./collection/ui.collection_widget.edit\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar window = (0, _window.getWindow)();\r\nvar RESPONSIVE_BOX_CLASS = \"dx-responsivebox\";\r\nvar SCREEN_SIZE_CLASS_PREFIX = RESPONSIVE_BOX_CLASS + \"-screen-\";\r\nvar BOX_ITEM_CLASS = \"dx-box-item\";\r\nvar BOX_ITEM_DATA_KEY = \"dxBoxItemData\";\r\nvar HD_SCREEN_WIDTH = 1920;\r\nvar ResponsiveBox = _uiCollection_widget.default.inherit({\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            rows: [],\r\n            cols: [],\r\n            screenByWidth: null,\r\n            singleColumnScreen: \"\",\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            activeStateEnabled: false,\r\n            focusStateEnabled: false,\r\n            onItemStateChanged: void 0,\r\n            onLayoutChanged: null,\r\n            currentScreenFactor: void 0,\r\n            _layoutStrategy: void 0\r\n        })\r\n    },\r\n    _init: function() {\r\n        if (!this.option(\"screenByWidth\")) {\r\n            this._options.silent(\"screenByWidth\", _window.defaultScreenFactorFunc)\r\n        }\r\n        this.callBase();\r\n        this._initLayoutChangedAction()\r\n    },\r\n    _initLayoutChangedAction: function() {\r\n        this._layoutChangedAction = this._createActionByOption(\"onLayoutChanged\", {\r\n            excludeValidators: [\"disabled\", \"readonly\"]\r\n        })\r\n    },\r\n    _itemClass: function() {\r\n        return BOX_ITEM_CLASS\r\n    },\r\n    _itemDataKey: function() {\r\n        return BOX_ITEM_DATA_KEY\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this.$element().addClass(RESPONSIVE_BOX_CLASS);\r\n        this._updateRootBox()\r\n    },\r\n    _updateRootBox: function() {\r\n        clearTimeout(this._updateTimer);\r\n        this._updateTimer = setTimeout(function() {\r\n            if (this._$root) {\r\n                _events_engine.default.triggerHandler(this._$root, \"dxupdate\")\r\n            }\r\n        }.bind(this))\r\n    },\r\n    _renderItems: function() {\r\n        this._setScreenSize();\r\n        this._screenItems = this._itemsByScreen();\r\n        this._prepareGrid();\r\n        this._spreadItems();\r\n        this._layoutItems();\r\n        this._linkNodeToItem()\r\n    },\r\n    _itemOptionChanged: function(item) {\r\n        var $item = this._findItemElementByItem(item);\r\n        if (!$item.length) {\r\n            return\r\n        }\r\n        this._refreshItem($item, item);\r\n        this._clearItemNodeTemplates();\r\n        this._update(true)\r\n    },\r\n    _setScreenSize: function() {\r\n        var currentScreen = this._getCurrentScreen();\r\n        this._removeScreenSizeClass();\r\n        this.$element().addClass(SCREEN_SIZE_CLASS_PREFIX + currentScreen);\r\n        this.option(\"currentScreenFactor\", currentScreen)\r\n    },\r\n    _removeScreenSizeClass: function() {\r\n        var currentScreenFactor = this.option(\"currentScreenFactor\");\r\n        currentScreenFactor && this.$element().removeClass(SCREEN_SIZE_CLASS_PREFIX + currentScreenFactor)\r\n    },\r\n    _prepareGrid: function() {\r\n        var grid = this._grid = [];\r\n        this._prepareRowsAndCols();\r\n        (0, _iterator.each)(this._rows, function() {\r\n            var row = [];\r\n            grid.push(row);\r\n            (0, _iterator.each)(this._cols, function() {\r\n                row.push(this._createEmptyCell())\r\n            }.bind(this))\r\n        }.bind(this))\r\n    },\r\n    getSingleColumnRows: function() {\r\n        var rows = this.option(\"rows\");\r\n        var screenItemsLength = this._screenItems.length;\r\n        if (rows.length) {\r\n            var filteredRows = this._filterByScreen(rows);\r\n            var result = [];\r\n            for (var i = 0; i < screenItemsLength; i++) {\r\n                var sizeConfig = this._defaultSizeConfig();\r\n                if (i < filteredRows.length && (0, _type.isDefined)(filteredRows[i].shrink)) {\r\n                    sizeConfig.shrink = filteredRows[i].shrink\r\n                }\r\n                result.push(sizeConfig)\r\n            }\r\n            return result\r\n        } else {\r\n            return this._defaultSizeConfig(screenItemsLength)\r\n        }\r\n    },\r\n    _prepareRowsAndCols: function() {\r\n        if (this._isSingleColumnScreen()) {\r\n            this._prepareSingleColumnScreenItems();\r\n            this._rows = this.getSingleColumnRows();\r\n            this._cols = this._defaultSizeConfig(1)\r\n        } else {\r\n            this._rows = this._sizesByScreen(this.option(\"rows\"));\r\n            this._cols = this._sizesByScreen(this.option(\"cols\"))\r\n        }\r\n    },\r\n    _isSingleColumnScreen: function() {\r\n        return this._screenRegExp().test(this.option(\"singleColumnScreen\")) || !this.option(\"rows\").length || !this.option(\"cols\").length\r\n    },\r\n    _prepareSingleColumnScreenItems: function() {\r\n        this._screenItems.sort(function(item1, item2) {\r\n            return item1.location.row - item2.location.row || item1.location.col - item2.location.col\r\n        });\r\n        (0, _iterator.each)(this._screenItems, function(index, item) {\r\n            (0, _extend.extend)(item.location, {\r\n                row: index,\r\n                col: 0,\r\n                rowspan: 1,\r\n                colspan: 1\r\n            })\r\n        })\r\n    },\r\n    _sizesByScreen: function(sizeConfigs) {\r\n        return (0, _iterator.map)(this._filterByScreen(sizeConfigs), function(sizeConfig) {\r\n            return (0, _extend.extend)(this._defaultSizeConfig(), sizeConfig)\r\n        }.bind(this))\r\n    },\r\n    _createDefaultSizeConfig: function() {\r\n        return {\r\n            ratio: 1,\r\n            baseSize: 0,\r\n            minSize: 0,\r\n            maxSize: 0\r\n        }\r\n    },\r\n    _defaultSizeConfig: function(size) {\r\n        var defaultSizeConfig = this._createDefaultSizeConfig();\r\n        if (!arguments.length) {\r\n            return defaultSizeConfig\r\n        }\r\n        var result = [];\r\n        for (var i = 0; i < size; i++) {\r\n            result.push(defaultSizeConfig)\r\n        }\r\n        return result\r\n    },\r\n    _filterByScreen: function(items) {\r\n        var screenRegExp = this._screenRegExp();\r\n        return (0, _common.grep)(items, function(item) {\r\n            return !item.screen || screenRegExp.test(item.screen)\r\n        })\r\n    },\r\n    _screenRegExp: function() {\r\n        var screen = this._getCurrentScreen();\r\n        return new RegExp(\"(^|\\\\s)\" + screen + \"($|\\\\s)\", \"i\")\r\n    },\r\n    _getCurrentScreen: function() {\r\n        var width = this._screenWidth();\r\n        return this.option(\"screenByWidth\")(width)\r\n    },\r\n    _screenWidth: function() {\r\n        return (0, _window.hasWindow)() ? (0, _renderer.default)(window).width() : HD_SCREEN_WIDTH\r\n    },\r\n    _createEmptyCell: function() {\r\n        return {\r\n            item: {},\r\n            location: {\r\n                colspan: 1,\r\n                rowspan: 1\r\n            }\r\n        }\r\n    },\r\n    _spreadItems: function() {\r\n        (0, _iterator.each)(this._screenItems, function(_, itemInfo) {\r\n            var location = itemInfo.location || {};\r\n            var itemCol = location.col;\r\n            var itemRow = location.row;\r\n            var row = this._grid[itemRow];\r\n            var itemCell = row && row[itemCol];\r\n            this._occupyCells(itemCell, itemInfo)\r\n        }.bind(this))\r\n    },\r\n    _itemsByScreen: function() {\r\n        var _this = this;\r\n        return this.option(\"items\").reduce(function(result, item) {\r\n            var locations = item.location || {};\r\n            locations = (0, _type.isPlainObject)(locations) ? [locations] : locations;\r\n            _this._filterByScreen(locations).forEach(function(location) {\r\n                result.push({\r\n                    item: item,\r\n                    location: (0, _extend.extend)({\r\n                        rowspan: 1,\r\n                        colspan: 1\r\n                    }, location)\r\n                })\r\n            });\r\n            return result\r\n        }, [])\r\n    },\r\n    _occupyCells: function(itemCell, itemInfo) {\r\n        if (!itemCell || this._isItemCellOccupied(itemCell, itemInfo)) {\r\n            return\r\n        }(0, _extend.extend)(itemCell, itemInfo);\r\n        this._markSpanningCell(itemCell)\r\n    },\r\n    _isItemCellOccupied: function(itemCell, itemInfo) {\r\n        if (!(0, _type.isEmptyObject)(itemCell.item)) {\r\n            return true\r\n        }\r\n        var result = false;\r\n        this._loopOverSpanning(itemInfo.location, function(cell) {\r\n            result = result || !(0, _type.isEmptyObject)(cell.item)\r\n        });\r\n        return result\r\n    },\r\n    _loopOverSpanning: function(location, callback) {\r\n        var rowEnd = location.row + location.rowspan - 1;\r\n        var colEnd = location.col + location.colspan - 1;\r\n        var boundRowEnd = Math.min(rowEnd, this._rows.length - 1);\r\n        var boundColEnd = Math.min(colEnd, this._cols.length - 1);\r\n        location.rowspan -= rowEnd - boundRowEnd;\r\n        location.colspan -= colEnd - boundColEnd;\r\n        for (var rowIndex = location.row; rowIndex <= boundRowEnd; rowIndex++) {\r\n            for (var colIndex = location.col; colIndex <= boundColEnd; colIndex++) {\r\n                if (rowIndex !== location.row || colIndex !== location.col) {\r\n                    callback(this._grid[rowIndex][colIndex])\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _markSpanningCell: function(itemCell) {\r\n        this._loopOverSpanning(itemCell.location, function(cell) {\r\n            (0, _extend.extend)(cell, {\r\n                item: itemCell.item,\r\n                spanningCell: itemCell\r\n            })\r\n        })\r\n    },\r\n    _linkNodeToItem: function() {\r\n        (0, _iterator.each)(this._itemElements(), function(_, itemNode) {\r\n            var $item = (0, _renderer.default)(itemNode);\r\n            var item = $item.data(BOX_ITEM_DATA_KEY);\r\n            if (!item.box) {\r\n                item.node = $item.children()\r\n            }\r\n        })\r\n    },\r\n    _layoutItems: function() {\r\n        var rowsCount = this._grid.length;\r\n        var colsCount = rowsCount && this._grid[0].length;\r\n        if (!rowsCount && !colsCount) {\r\n            return\r\n        }\r\n        var result = this._layoutBlock({\r\n            direction: \"col\",\r\n            row: {\r\n                start: 0,\r\n                end: rowsCount - 1\r\n            },\r\n            col: {\r\n                start: 0,\r\n                end: colsCount - 1\r\n            }\r\n        });\r\n        var rootBox = this._prepareBoxConfig(result.box || {\r\n            direction: \"row\",\r\n            items: [(0, _extend.extend)(result, {\r\n                ratio: 1\r\n            })]\r\n        });\r\n        (0, _extend.extend)(rootBox, this._rootBoxConfig(rootBox.items));\r\n        this._$root = (0, _renderer.default)(\"<div>\").appendTo(this._itemContainer());\r\n        this._createComponent(this._$root, _box.default, rootBox)\r\n    },\r\n    _rootBoxConfig: function(items) {\r\n        var rootItems = (0, _iterator.each)(items, function(index, item) {\r\n            this._needApplyAutoBaseSize(item) && (0, _extend.extend)(item, {\r\n                baseSize: \"auto\"\r\n            })\r\n        }.bind(this));\r\n        return (0, _extend.extend)({\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            items: rootItems,\r\n            itemTemplate: this._getTemplateByOption(\"itemTemplate\"),\r\n            itemHoldTimeout: this.option(\"itemHoldTimeout\"),\r\n            onItemHold: this._createActionByOption(\"onItemHold\"),\r\n            onItemClick: this._createActionByOption(\"onItemClick\"),\r\n            onItemContextMenu: this._createActionByOption(\"onItemContextMenu\"),\r\n            onItemRendered: this._createActionByOption(\"onItemRendered\")\r\n        }, {\r\n            _layoutStrategy: this.option(\"_layoutStrategy\")\r\n        })\r\n    },\r\n    _needApplyAutoBaseSize: function(item) {\r\n        return !item.baseSize && (!item.minSize || \"auto\" === item.minSize) && (!item.maxSize || \"auto\" === item.maxSize)\r\n    },\r\n    _prepareBoxConfig: function(config) {\r\n        return (0, _extend.extend)(config || {}, {\r\n            crossAlign: \"stretch\",\r\n            onItemStateChanged: this.option(\"onItemStateChanged\")\r\n        })\r\n    },\r\n    _layoutBlock: function(options) {\r\n        if (this._isSingleItem(options)) {\r\n            return this._itemByCell(options.row.start, options.col.start)\r\n        }\r\n        return this._layoutDirection(options)\r\n    },\r\n    _isSingleItem: function(options) {\r\n        var firstCellLocation = this._grid[options.row.start][options.col.start].location;\r\n        var isItemRowSpanned = options.row.end - options.row.start === firstCellLocation.rowspan - 1;\r\n        var isItemColSpanned = options.col.end - options.col.start === firstCellLocation.colspan - 1;\r\n        return isItemRowSpanned && isItemColSpanned\r\n    },\r\n    _itemByCell: function(rowIndex, colIndex) {\r\n        var itemCell = this._grid[rowIndex][colIndex];\r\n        return itemCell.spanningCell ? null : itemCell.item\r\n    },\r\n    _layoutDirection: function(options) {\r\n        var items = [];\r\n        var direction = options.direction;\r\n        var crossDirection = this._crossDirection(direction);\r\n        var block;\r\n        while (block = this._nextBlock(options)) {\r\n            if (this._isBlockIndivisible(options.prevBlockOptions, block)) {\r\n                throw _ui.default.Error(\"E1025\")\r\n            }\r\n            var item = this._layoutBlock({\r\n                direction: crossDirection,\r\n                row: block.row,\r\n                col: block.col,\r\n                prevBlockOptions: options\r\n            });\r\n            if (item) {\r\n                (0, _extend.extend)(item, this._blockSize(block, crossDirection));\r\n                items.push(item)\r\n            }\r\n            options[crossDirection].start = block[crossDirection].end + 1\r\n        }\r\n        return {\r\n            box: this._prepareBoxConfig({\r\n                direction: direction,\r\n                items: items\r\n            })\r\n        }\r\n    },\r\n    _isBlockIndivisible: function(options, block) {\r\n        return options && options.col.start === block.col.start && options.col.end === block.col.end && options.row.start === block.row.start && options.row.end === block.row.end\r\n    },\r\n    _crossDirection: function(direction) {\r\n        return \"col\" === direction ? \"row\" : \"col\"\r\n    },\r\n    _nextBlock: function(options) {\r\n        var direction = options.direction;\r\n        var crossDirection = this._crossDirection(direction);\r\n        var startIndex = options[direction].start;\r\n        var endIndex = options[direction].end;\r\n        var crossStartIndex = options[crossDirection].start;\r\n        if (crossStartIndex > options[crossDirection].end) {\r\n            return null\r\n        }\r\n        var crossSpan = 1;\r\n        for (var crossIndex = crossStartIndex; crossIndex < crossStartIndex + crossSpan; crossIndex++) {\r\n            var lineCrossSpan = 1;\r\n            for (var index = startIndex; index <= endIndex; index++) {\r\n                var cell = this._cellByDirection(direction, index, crossIndex);\r\n                lineCrossSpan = Math.max(lineCrossSpan, cell.location[crossDirection + \"span\"])\r\n            }\r\n            var lineCrossEndIndex = crossIndex + lineCrossSpan;\r\n            var crossEndIndex = crossStartIndex + crossSpan;\r\n            if (lineCrossEndIndex > crossEndIndex) {\r\n                crossSpan += lineCrossEndIndex - crossEndIndex\r\n            }\r\n        }\r\n        var result = {};\r\n        result[direction] = {\r\n            start: startIndex,\r\n            end: endIndex\r\n        };\r\n        result[crossDirection] = {\r\n            start: crossStartIndex,\r\n            end: crossStartIndex + crossSpan - 1\r\n        };\r\n        return result\r\n    },\r\n    _cellByDirection: function(direction, index, crossIndex) {\r\n        return \"col\" === direction ? this._grid[crossIndex][index] : this._grid[index][crossIndex]\r\n    },\r\n    _blockSize: function(block, direction) {\r\n        var defaultMinSize = \"row\" === direction ? \"auto\" : 0;\r\n        var sizeConfigs = \"row\" === direction ? this._rows : this._cols;\r\n        var result = (0, _extend.extend)(this._createDefaultSizeConfig(), {\r\n            ratio: 0\r\n        });\r\n        for (var index = block[direction].start; index <= block[direction].end; index++) {\r\n            var sizeConfig = sizeConfigs[index];\r\n            result.ratio += sizeConfig.ratio;\r\n            result.baseSize += sizeConfig.baseSize;\r\n            result.minSize += sizeConfig.minSize;\r\n            result.maxSize += sizeConfig.maxSize;\r\n            if ((0, _type.isDefined)(sizeConfig.shrink)) {\r\n                result.shrink = sizeConfig.shrink\r\n            }\r\n        }\r\n        result.minSize = result.minSize ? result.minSize : defaultMinSize;\r\n        result.maxSize = result.maxSize ? result.maxSize : \"auto\";\r\n        this._isSingleColumnScreen() && (result.baseSize = \"auto\");\r\n        return result\r\n    },\r\n    _update: function(forceRemoveRoot) {\r\n        var $existingRoot = this._$root;\r\n        this._renderItems();\r\n        if ($existingRoot) {\r\n            if (forceRemoveRoot) {\r\n                $existingRoot.remove()\r\n            } else {\r\n                $existingRoot.detach();\r\n                this._saveAssistantRoot($existingRoot)\r\n            }\r\n        }\r\n        this._layoutChangedAction();\r\n        this._updateRootBox()\r\n    },\r\n    _saveAssistantRoot: function($root) {\r\n        this._assistantRoots = this._assistantRoots || [];\r\n        this._assistantRoots.push($root)\r\n    },\r\n    _dispose: function() {\r\n        clearTimeout(this._updateTimer);\r\n        this._clearItemNodeTemplates();\r\n        this._cleanUnusedRoots();\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _cleanUnusedRoots: function() {\r\n        if (!this._assistantRoots) {\r\n            return\r\n        }(0, _iterator.each)(this._assistantRoots, function(_, item) {\r\n            (0, _renderer.default)(item).remove()\r\n        })\r\n    },\r\n    _clearItemNodeTemplates: function() {\r\n        (0, _iterator.each)(this.option(\"items\"), function() {\r\n            delete this.node\r\n        })\r\n    },\r\n    _toggleVisibility: function(visible) {\r\n        this.callBase(visible);\r\n        if (visible) {\r\n            this._updateRootBox()\r\n        }\r\n    },\r\n    _attachClickEvent: _common.noop,\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"rows\":\r\n            case \"cols\":\r\n            case \"screenByWidth\":\r\n            case \"_layoutStrategy\":\r\n            case \"singleColumnScreen\":\r\n                this._clearItemNodeTemplates();\r\n                this._invalidate();\r\n                break;\r\n            case \"width\":\r\n            case \"height\":\r\n                this.callBase(args);\r\n                this._update();\r\n                break;\r\n            case \"onLayoutChanged\":\r\n                this._initLayoutChangedAction();\r\n                break;\r\n            case \"itemTemplate\":\r\n                this._clearItemNodeTemplates();\r\n                this.callBase(args);\r\n                break;\r\n            case \"currentScreenFactor\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _dimensionChanged: function() {\r\n        if (this._getCurrentScreen() !== this.option(\"currentScreenFactor\")) {\r\n            this._update()\r\n        }\r\n    },\r\n    repaint: function() {\r\n        this._update()\r\n    }\r\n});\r\n(0, _component_registrator.default)(\"dxResponsiveBox\", ResponsiveBox);\r\nvar _default = ResponsiveBox;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n"]},"metadata":{},"sourceType":"script"}