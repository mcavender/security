{"ast":null,"code":"/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.data_source_adapter.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _callbacks = _interopRequireDefault(require(\"../../core/utils/callbacks\"));\n\nvar _uiData_grid = _interopRequireDefault(require(\"../data_grid/ui.data_grid.core\"));\n\nvar _common = require(\"../../core/utils/common\");\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _array_store = _interopRequireDefault(require(\"../../data/array_store\"));\n\nvar _array_utils = require(\"../../data/array_utils\");\n\nvar _deferred = require(\"../../core/utils/deferred\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar _default = _uiData_grid.default.Controller.inherit(function () {\n  function cloneItems(items, groupCount) {\n    if (items) {\n      items = items.slice(0);\n\n      if (groupCount) {\n        for (var i = 0; i < items.length; i++) {\n          items[i] = (0, _extend.extend)({\n            key: items[i].key\n          }, items[i]);\n          items[i].items = cloneItems(items[i].items, groupCount - 1);\n        }\n      }\n    }\n\n    return items;\n  }\n\n  function calculateOperationTypes(loadOptions, lastLoadOptions, isFullReload) {\n    var operationTypes = {\n      reload: true,\n      fullReload: true\n    };\n\n    if (lastLoadOptions) {\n      operationTypes = {\n        sorting: !_uiData_grid.default.equalSortParameters(loadOptions.sort, lastLoadOptions.sort),\n        grouping: !_uiData_grid.default.equalSortParameters(loadOptions.group, lastLoadOptions.group, true),\n        groupExpanding: !_uiData_grid.default.equalSortParameters(loadOptions.group, lastLoadOptions.group) || lastLoadOptions.groupExpand,\n        filtering: !_uiData_grid.default.equalFilterParameters(loadOptions.filter, lastLoadOptions.filter),\n        pageIndex: loadOptions.pageIndex !== lastLoadOptions.pageIndex,\n        skip: loadOptions.skip !== lastLoadOptions.skip,\n        take: loadOptions.take !== lastLoadOptions.take,\n        fullReload: isFullReload\n      };\n      operationTypes.reload = isFullReload || operationTypes.sorting || operationTypes.grouping || operationTypes.filtering;\n      operationTypes.paging = operationTypes.pageIndex || operationTypes.take;\n    }\n\n    return operationTypes;\n  }\n\n  function executeTask(action, timeout) {\n    if ((0, _type.isDefined)(timeout)) {\n      (0, _common.executeAsync)(action, timeout);\n    } else {\n      action();\n    }\n  }\n\n  function createEmptyPagesData() {\n    return {\n      pages: {}\n    };\n  }\n\n  function getPageDataFromCache(options) {\n    return options.cachedPagesData.pages[options.pageIndex];\n  }\n\n  function setPageDataToCache(options, data) {\n    var pageIndex = options.pageIndex;\n\n    if (void 0 !== pageIndex) {\n      options.cachedPagesData.pages[pageIndex] = data;\n    }\n  }\n\n  return {\n    init: function (dataSource, remoteOperations) {\n      var that = this;\n      that._dataSource = dataSource;\n      that._remoteOperations = remoteOperations || {};\n      that._isLastPage = !dataSource.isLastPage();\n      that._hasLastPage = false;\n      that._currentTotalCount = 0;\n      that._cachedPagesData = createEmptyPagesData();\n      that._lastOperationTypes = {};\n      that._eventsStrategy = dataSource._eventsStrategy;\n      that._skipCorrection = 0;\n      that._isLoadingAll = false;\n      that.changed = (0, _callbacks.default)();\n      that.loadingChanged = (0, _callbacks.default)();\n      that.loadError = (0, _callbacks.default)();\n      that.customizeStoreLoadOptions = (0, _callbacks.default)();\n      that.changing = (0, _callbacks.default)();\n      that._dataChangedHandler = that._handleDataChanged.bind(that);\n      that._dataLoadingHandler = that._handleDataLoading.bind(that);\n      that._dataLoadedHandler = that._handleDataLoaded.bind(that);\n      that._loadingChangedHandler = that._handleLoadingChanged.bind(that);\n      that._loadErrorHandler = that._handleLoadError.bind(that);\n      that._pushHandler = that._handlePush.bind(that);\n      that._changingHandler = that._handleChanging.bind(that);\n      dataSource.on(\"changed\", that._dataChangedHandler);\n      dataSource.on(\"customizeStoreLoadOptions\", that._dataLoadingHandler);\n      dataSource.on(\"customizeLoadResult\", that._dataLoadedHandler);\n      dataSource.on(\"loadingChanged\", that._loadingChangedHandler);\n      dataSource.on(\"loadError\", that._loadErrorHandler);\n      dataSource.on(\"changing\", that._changingHandler);\n      dataSource.store().on(\"push\", that._pushHandler);\n      (0, _iterator.each)(dataSource, function (memberName, member) {\n        if (!that[memberName] && (0, _type.isFunction)(member)) {\n          that[memberName] = function () {\n            return this._dataSource[memberName].apply(this._dataSource, arguments);\n          };\n        }\n      });\n    },\n    remoteOperations: function () {\n      return this._remoteOperations;\n    },\n    dispose: function (isSharedDataSource) {\n      var that = this;\n      var dataSource = that._dataSource;\n      var store = dataSource.store();\n      dataSource.off(\"changed\", that._dataChangedHandler);\n      dataSource.off(\"customizeStoreLoadOptions\", that._dataLoadingHandler);\n      dataSource.off(\"customizeLoadResult\", that._dataLoadedHandler);\n      dataSource.off(\"loadingChanged\", that._loadingChangedHandler);\n      dataSource.off(\"loadError\", that._loadErrorHandler);\n      dataSource.off(\"changing\", that._changingHandler);\n      store && store.off(\"push\", that._pushHandler);\n\n      if (!isSharedDataSource) {\n        dataSource.dispose();\n      }\n    },\n    refresh: function (options, operationTypes) {\n      var that = this;\n      var dataSource = that._dataSource;\n\n      if (operationTypes.reload) {\n        that.resetCurrentTotalCount();\n        that._isLastPage = !dataSource.paginate();\n        that._hasLastPage = that._isLastPage;\n      }\n    },\n    resetCurrentTotalCount: function () {\n      this._currentTotalCount = 0;\n      this._skipCorrection = 0;\n    },\n    resetCache: function () {\n      this._cachedStoreData = void 0;\n      this._cachedPagingData = void 0;\n    },\n    resetPagesCache: function () {\n      this._cachedPagesData = createEmptyPagesData();\n    },\n    _needClearStoreDataCache: function () {\n      var remoteOperations = this.remoteOperations();\n      var operationTypes = calculateOperationTypes(this._lastLoadOptions || {}, {});\n      var isLocalOperations = Object.keys(remoteOperations).every(function (operationName) {\n        return !operationTypes[operationName] || !remoteOperations[operationName];\n      });\n      return !isLocalOperations;\n    },\n    push: function (changes, fromStore) {\n      var store = this.store();\n\n      if (this._needClearStoreDataCache()) {\n        this._cachedStoreData = void 0;\n      }\n\n      this._cachedPagingData = void 0;\n      this.resetPagesCache(true);\n\n      if (this._cachedStoreData) {\n        (0, _array_utils.applyBatch)({\n          keyInfo: store,\n          data: this._cachedStoreData,\n          changes: changes\n        });\n      }\n\n      if (!fromStore) {\n        this._applyBatch(changes);\n      }\n    },\n    getDataIndexGetter: function () {\n      var _this = this;\n\n      if (!this._dataIndexGetter) {\n        var indexByKey;\n        var storeData;\n        var store = this.store();\n\n        this._dataIndexGetter = function (data) {\n          var isCacheUpdated = storeData && storeData !== _this._cachedStoreData;\n\n          if (!indexByKey || isCacheUpdated) {\n            storeData = _this._cachedStoreData || [];\n            indexByKey = {};\n\n            for (var i = 0; i < storeData.length; i++) {\n              indexByKey[(0, _common.getKeyHash)(store.keyOf(storeData[i]))] = i;\n            }\n          }\n\n          return indexByKey[(0, _common.getKeyHash)(store.keyOf(data))];\n        };\n      }\n\n      return this._dataIndexGetter;\n    },\n    _getKeyInfo: function () {\n      return this.store();\n    },\n    _applyBatch: function (changes) {\n      var _this2 = this;\n\n      var keyInfo = this._getKeyInfo();\n\n      var dataSource = this._dataSource;\n\n      var groupCount = _uiData_grid.default.normalizeSortingInfo(this.group()).length;\n\n      var totalCount = this.totalCount();\n      var isVirtualMode = \"virtual\" === this.option(\"scrolling.mode\");\n      changes = changes.filter(function (change) {\n        return !dataSource.paginate() || \"insert\" !== change.type || void 0 !== change.index;\n      });\n\n      var getItemCount = function () {\n        return groupCount ? _this2.itemsCount() : _this2._items.length;\n      };\n\n      var oldItemCount = getItemCount();\n      (0, _array_utils.applyBatch)({\n        keyInfo: keyInfo,\n        data: this._items,\n        changes: changes,\n        groupCount: groupCount,\n        useInsertIndex: true\n      });\n      (0, _array_utils.applyBatch)({\n        keyInfo: keyInfo,\n        data: dataSource.items(),\n        changes: changes,\n        groupCount: groupCount,\n        useInsertIndex: true\n      });\n\n      if (this._currentTotalCount > 0 || isVirtualMode && totalCount === oldItemCount) {\n        this._skipCorrection += getItemCount() - oldItemCount;\n      }\n\n      changes.splice(0, changes.length);\n    },\n    _handlePush: function (changes) {\n      this.push(changes, true);\n    },\n    _handleChanging: function (e) {\n      this.changing.fire(e);\n\n      this._applyBatch(e.changes);\n    },\n    _needCleanCacheByOperation: function (operationType, remoteOperations) {\n      var operationTypesByOrder = [\"filtering\", \"sorting\", \"paging\"];\n      var operationTypeIndex = operationTypesByOrder.indexOf(operationType);\n      var currentOperationTypes = operationTypeIndex >= 0 ? operationTypesByOrder.slice(operationTypeIndex) : [operationType];\n      return currentOperationTypes.some(function (operationType) {\n        return remoteOperations[operationType];\n      });\n    },\n    _customizeRemoteOperations: function (options, operationTypes) {\n      var that = this;\n      var cachedStoreData = that._cachedStoreData;\n      var cachedPagingData = that._cachedPagingData;\n      var cachedPagesData = that._cachedPagesData;\n\n      if (options.storeLoadOptions.filter && !options.remoteOperations.filtering || options.storeLoadOptions.sort && !options.remoteOperations.sorting) {\n        options.remoteOperations = {\n          filtering: options.remoteOperations.filtering\n        };\n      }\n\n      if (operationTypes.fullReload) {\n        cachedStoreData = void 0;\n        cachedPagingData = void 0;\n        cachedPagesData = createEmptyPagesData();\n      } else {\n        if (operationTypes.reload) {\n          cachedPagingData = void 0;\n          cachedPagesData = createEmptyPagesData();\n        } else {\n          if (operationTypes.take || operationTypes.groupExpanding) {\n            cachedPagesData = createEmptyPagesData();\n          }\n        }\n\n        (0, _iterator.each)(operationTypes, function (operationType, value) {\n          if (value && that._needCleanCacheByOperation(operationType, options.remoteOperations)) {\n            cachedStoreData = void 0;\n            cachedPagingData = void 0;\n          }\n        });\n      }\n\n      if (cachedPagingData) {\n        options.remoteOperations.paging = false;\n      }\n\n      options.cachedStoreData = cachedStoreData;\n      options.cachedPagingData = cachedPagingData;\n      options.cachedPagesData = cachedPagesData;\n\n      if (!options.isCustomLoading) {\n        that._cachedStoreData = cachedStoreData;\n        that._cachedPagingData = cachedPagingData;\n        that._cachedPagesData = cachedPagesData;\n      }\n    },\n    _handleDataLoading: function (options) {\n      var that = this;\n      var dataSource = that._dataSource;\n      var lastLoadOptions = that._lastLoadOptions;\n      that.customizeStoreLoadOptions.fire(options);\n      options.delay = this.option(\"loadingTimeout\");\n      options.originalStoreLoadOptions = options.storeLoadOptions;\n      options.remoteOperations = (0, _extend.extend)({}, this.remoteOperations());\n      var isFullReload = !that.isLoaded() && !that._isRefreshing;\n\n      if (that.option(\"integrationOptions.renderedOnServer\") && !that.isLoaded()) {\n        options.delay = void 0;\n      }\n\n      var loadOptions = (0, _extend.extend)({\n        pageIndex: that.pageIndex()\n      }, options.storeLoadOptions);\n      var operationTypes = calculateOperationTypes(loadOptions, lastLoadOptions, isFullReload);\n\n      that._customizeRemoteOperations(options, operationTypes);\n\n      if (!options.isCustomLoading) {\n        var isRefreshing = that._isRefreshing;\n        options.pageIndex = dataSource.pageIndex();\n        options.lastLoadOptions = loadOptions;\n        options.operationTypes = operationTypes;\n        that._loadingOperationTypes = operationTypes;\n        that._isRefreshing = true;\n        (0, _deferred.when)(isRefreshing || that._isRefreshed || that.refresh(options, operationTypes)).done(function () {\n          if (that._lastOperationId === options.operationId) {\n            that._isRefreshed = true;\n            that.load().always(function () {\n              that._isRefreshed = false;\n            });\n          }\n        }).fail(function () {\n          dataSource.cancel(options.operationId);\n        }).always(function () {\n          that._isRefreshing = false;\n        });\n        dataSource.cancel(that._lastOperationId);\n        that._lastOperationId = options.operationId;\n\n        if (that._isRefreshing) {\n          dataSource.cancel(that._lastOperationId);\n        }\n      }\n\n      this._handleDataLoadingCore(options);\n    },\n    _handleDataLoadingCore: function (options) {\n      var remoteOperations = options.remoteOperations;\n      options.loadOptions = {};\n      var cachedExtra = options.cachedPagesData.extra;\n      var localLoadOptionNames = {\n        filter: !remoteOperations.filtering,\n        sort: !remoteOperations.sorting,\n        group: !remoteOperations.grouping,\n        summary: !remoteOperations.summary,\n        skip: !remoteOperations.paging,\n        take: !remoteOperations.paging,\n        requireTotalCount: cachedExtra && \"totalCount\" in cachedExtra || !remoteOperations.paging\n      };\n      (0, _iterator.each)(options.storeLoadOptions, function (optionName, optionValue) {\n        if (localLoadOptionNames[optionName]) {\n          options.loadOptions[optionName] = optionValue;\n          delete options.storeLoadOptions[optionName];\n        }\n      });\n\n      if (cachedExtra) {\n        options.extra = cachedExtra;\n      }\n\n      options.data = getPageDataFromCache(options) || options.cachedStoreData;\n    },\n    _handleDataLoaded: function (options) {\n      var _this3 = this;\n\n      var loadOptions = options.loadOptions;\n      var localPaging = options.remoteOperations && !options.remoteOperations.paging;\n      var cachedPagesData = options.cachedPagesData;\n      var storeLoadOptions = options.storeLoadOptions;\n      var needCache = false !== this.option(\"cacheEnabled\") && storeLoadOptions;\n      var needPageCache = needCache && !options.isCustomLoading && cachedPagesData && (!localPaging || storeLoadOptions.group) && !this.option(\"legacyRendering\");\n      var needPagingCache = needCache && localPaging;\n      var needStoreCache = needPagingCache && !options.isCustomLoading;\n\n      if (!loadOptions) {\n        this._dataSource.cancel(options.operationId);\n\n        return;\n      }\n\n      if (options.lastLoadOptions) {\n        this._lastLoadOptions = options.lastLoadOptions;\n        Object.keys(options.operationTypes).forEach(function (operationType) {\n          _this3._lastOperationTypes[operationType] = _this3._lastOperationTypes[operationType] || options.operationTypes[operationType];\n        });\n      }\n\n      if (localPaging) {\n        options.skip = loadOptions.skip;\n        options.take = loadOptions.take;\n        delete loadOptions.skip;\n        delete loadOptions.take;\n      }\n\n      if (loadOptions.group) {\n        loadOptions.group = options.group || loadOptions.group;\n      }\n\n      var groupCount = _uiData_grid.default.normalizeSortingInfo(storeLoadOptions.group || loadOptions.group).length;\n\n      if (!needPageCache || !getPageDataFromCache(options)) {\n        if (needPagingCache && options.cachedPagingData) {\n          options.data = cloneItems(options.cachedPagingData, groupCount);\n        } else {\n          if (needStoreCache) {\n            if (!this._cachedStoreData) {\n              this._cachedStoreData = cloneItems(options.data, _uiData_grid.default.normalizeSortingInfo(storeLoadOptions.group).length);\n            } else {\n              if (options.mergeStoreLoadData) {\n                options.data = this._cachedStoreData = this._cachedStoreData.concat(options.data);\n              }\n            }\n          }\n\n          new _array_store.default(options.data).load(loadOptions).done(function (data) {\n            options.data = data;\n\n            if (needStoreCache) {\n              _this3._cachedPagingData = cloneItems(options.data, groupCount);\n            }\n          }).fail(function (error) {\n            options.data = new _deferred.Deferred().reject(error);\n          });\n        }\n\n        if (loadOptions.requireTotalCount && localPaging) {\n          options.extra = (0, _type.isPlainObject)(options.extra) ? options.extra : {};\n          options.extra.totalCount = options.data.length;\n        }\n\n        if (options.extra && options.extra.totalCount >= 0 && (false === storeLoadOptions.requireTotalCount || false === loadOptions.requireTotalCount)) {\n          options.extra.totalCount = -1;\n        }\n\n        this._handleDataLoadedCore(options);\n\n        if (needPageCache) {\n          cachedPagesData.extra = cachedPagesData.extra || (0, _extend.extend)({}, options.extra);\n          (0, _deferred.when)(options.data).done(function (data) {\n            setPageDataToCache(options, cloneItems(data, groupCount));\n          });\n        }\n      }\n\n      options.storeLoadOptions = options.originalStoreLoadOptions;\n    },\n    _handleDataLoadedCore: function (options) {\n      if (options.remoteOperations && !options.remoteOperations.paging && Array.isArray(options.data)) {\n        if (void 0 !== options.skip) {\n          options.data = options.data.slice(options.skip);\n        }\n\n        if (void 0 !== options.take) {\n          options.data = options.data.slice(0, options.take);\n        }\n      }\n    },\n    _handleLoadingChanged: function (isLoading) {\n      this.loadingChanged.fire(isLoading);\n    },\n    _handleLoadError: function (error) {\n      this.loadError.fire(error);\n      this.changed.fire({\n        changeType: \"loadError\",\n        error: error\n      });\n    },\n    _handleDataChanged: function (args) {\n      var that = this;\n      var currentTotalCount;\n      var dataSource = that._dataSource;\n      var isLoading = false;\n      var itemsCount = that.itemsCount();\n      that._isLastPage = !itemsCount || !that.pageSize() || itemsCount < that.pageSize();\n\n      if (that._isLastPage) {\n        that._hasLastPage = true;\n      }\n\n      if (dataSource.totalCount() >= 0) {\n        if (dataSource.pageIndex() >= that.pageCount()) {\n          dataSource.pageIndex(that.pageCount() - 1);\n          that.pageIndex(dataSource.pageIndex());\n          that.resetPagesCache();\n          dataSource.load();\n          isLoading = true;\n        }\n      } else {\n        if (!args || (0, _type.isDefined)(args.changeType)) {\n          currentTotalCount = dataSource.pageIndex() * that.pageSize() + itemsCount;\n          that._currentTotalCount = Math.max(that._currentTotalCount, currentTotalCount);\n\n          if (0 === itemsCount && dataSource.pageIndex() >= that.pageCount()) {\n            dataSource.pageIndex(that.pageCount() - 1);\n\n            if (\"infinite\" !== that.option(\"scrolling.mode\")) {\n              dataSource.load();\n              isLoading = true;\n            }\n          }\n        }\n      }\n\n      if (!isLoading) {\n        that._operationTypes = that._lastOperationTypes;\n        that._lastOperationTypes = {};\n        that.component._optionCache = {};\n        that.changed.fire(args);\n        that.component._optionCache = void 0;\n      }\n    },\n    _scheduleCustomLoadCallbacks: function (deferred) {\n      var that = this;\n      that._isCustomLoading = true;\n      deferred.always(function () {\n        that._isCustomLoading = false;\n      });\n    },\n    loadingOperationTypes: function () {\n      return this._loadingOperationTypes;\n    },\n    operationTypes: function () {\n      return this._operationTypes;\n    },\n    lastLoadOptions: function () {\n      return this._lastLoadOptions || {};\n    },\n    isLastPage: function () {\n      return this._isLastPage;\n    },\n    totalCount: function () {\n      return parseInt((this._currentTotalCount || this._dataSource.totalCount()) + this._skipCorrection);\n    },\n    itemsCount: function () {\n      return this._dataSource.items().length;\n    },\n    totalItemsCount: function () {\n      return this.totalCount();\n    },\n    pageSize: function () {\n      var dataSource = this._dataSource;\n\n      if (!arguments.length && !dataSource.paginate()) {\n        return 0;\n      }\n\n      return dataSource.pageSize.apply(dataSource, arguments);\n    },\n    pageCount: function () {\n      var that = this;\n\n      var count = that.totalItemsCount() - that._skipCorrection;\n\n      var pageSize = that.pageSize();\n\n      if (pageSize && count > 0) {\n        return Math.max(1, Math.ceil(count / pageSize));\n      }\n\n      return 1;\n    },\n    hasKnownLastPage: function () {\n      return this._hasLastPage || this._dataSource.totalCount() >= 0;\n    },\n    loadFromStore: function (loadOptions, store) {\n      var dataSource = this._dataSource;\n      var d = new _deferred.Deferred();\n\n      if (!dataSource) {\n        return;\n      }\n\n      store = store || dataSource.store();\n      store.load(loadOptions).done(function (data, extra) {\n        if (data && !Array.isArray(data) && Array.isArray(data.data)) {\n          extra = data;\n          data = data.data;\n        }\n\n        d.resolve(data, extra);\n      }).fail(d.reject);\n      return d;\n    },\n    isCustomLoading: function () {\n      return !!this._isCustomLoading;\n    },\n    load: function (options) {\n      var _this4 = this;\n\n      var that = this;\n      var dataSource = that._dataSource;\n      var d = new _deferred.Deferred();\n\n      if (options) {\n        var store = dataSource.store();\n        var dataSourceLoadOptions = dataSource.loadOptions();\n        var loadResult = {\n          storeLoadOptions: options,\n          isCustomLoading: true\n        };\n        (0, _iterator.each)(store._customLoadOptions() || [], function (_, optionName) {\n          if (!(optionName in loadResult.storeLoadOptions)) {\n            loadResult.storeLoadOptions[optionName] = dataSourceLoadOptions[optionName];\n          }\n        });\n        this._isLoadingAll = options.isLoadingAll;\n\n        that._scheduleCustomLoadCallbacks(d);\n\n        dataSource._scheduleLoadCallbacks(d);\n\n        that._handleDataLoading(loadResult);\n\n        executeTask(function () {\n          if (!dataSource.store()) {\n            return d.reject(\"canceled\");\n          }\n\n          (0, _deferred.when)(loadResult.data || that.loadFromStore(loadResult.storeLoadOptions)).done(function (data, extra) {\n            loadResult.data = data;\n            loadResult.extra = extra || {};\n\n            that._handleDataLoaded(loadResult);\n\n            if (options.requireTotalCount && void 0 === loadResult.extra.totalCount) {\n              loadResult.extra.totalCount = store.totalCount(loadResult.storeLoadOptions);\n            }\n\n            (0, _deferred.when)(loadResult.data, loadResult.extra.totalCount).done(function (data, totalCount) {\n              loadResult.extra.totalCount = totalCount;\n              d.resolve(data, loadResult.extra);\n            }).fail(d.reject);\n          }).fail(d.reject);\n        }, that.option(\"loadingTimeout\"));\n        return d.fail(function () {\n          that._eventsStrategy.fireEvent(\"loadError\", arguments);\n        }).always(function () {\n          _this4._isLoadingAll = false;\n        }).promise();\n      } else {\n        return dataSource.load();\n      }\n    },\n    reload: function (full) {\n      return full ? this._dataSource.reload() : this._dataSource.load();\n    },\n    getCachedStoreData: function () {\n      return this._cachedStoreData;\n    }\n  };\n}());\n\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/node_modules/devextreme/ui/grid_core/ui.grid_core.data_source_adapter.js"],"names":["exports","default","_callbacks","_interopRequireDefault","require","_uiData_grid","_common","_type","_iterator","_extend","_array_store","_array_utils","_deferred","obj","__esModule","_default","Controller","inherit","cloneItems","items","groupCount","slice","i","length","extend","key","calculateOperationTypes","loadOptions","lastLoadOptions","isFullReload","operationTypes","reload","fullReload","sorting","equalSortParameters","sort","grouping","group","groupExpanding","groupExpand","filtering","equalFilterParameters","filter","pageIndex","skip","take","paging","executeTask","action","timeout","isDefined","executeAsync","createEmptyPagesData","pages","getPageDataFromCache","options","cachedPagesData","setPageDataToCache","data","init","dataSource","remoteOperations","that","_dataSource","_remoteOperations","_isLastPage","isLastPage","_hasLastPage","_currentTotalCount","_cachedPagesData","_lastOperationTypes","_eventsStrategy","_skipCorrection","_isLoadingAll","changed","loadingChanged","loadError","customizeStoreLoadOptions","changing","_dataChangedHandler","_handleDataChanged","bind","_dataLoadingHandler","_handleDataLoading","_dataLoadedHandler","_handleDataLoaded","_loadingChangedHandler","_handleLoadingChanged","_loadErrorHandler","_handleLoadError","_pushHandler","_handlePush","_changingHandler","_handleChanging","on","store","each","memberName","member","isFunction","apply","arguments","dispose","isSharedDataSource","off","refresh","resetCurrentTotalCount","paginate","resetCache","_cachedStoreData","_cachedPagingData","resetPagesCache","_needClearStoreDataCache","_lastLoadOptions","isLocalOperations","Object","keys","every","operationName","push","changes","fromStore","applyBatch","keyInfo","_applyBatch","getDataIndexGetter","_this","_dataIndexGetter","indexByKey","storeData","isCacheUpdated","getKeyHash","keyOf","_getKeyInfo","_this2","normalizeSortingInfo","totalCount","isVirtualMode","option","change","type","index","getItemCount","itemsCount","_items","oldItemCount","useInsertIndex","splice","e","fire","_needCleanCacheByOperation","operationType","operationTypesByOrder","operationTypeIndex","indexOf","currentOperationTypes","some","_customizeRemoteOperations","cachedStoreData","cachedPagingData","storeLoadOptions","value","isCustomLoading","delay","originalStoreLoadOptions","isLoaded","_isRefreshing","isRefreshing","_loadingOperationTypes","when","_isRefreshed","done","_lastOperationId","operationId","load","always","fail","cancel","_handleDataLoadingCore","cachedExtra","extra","localLoadOptionNames","summary","requireTotalCount","optionName","optionValue","_this3","localPaging","needCache","needPageCache","needPagingCache","needStoreCache","forEach","mergeStoreLoadData","concat","error","Deferred","reject","isPlainObject","_handleDataLoadedCore","Array","isArray","isLoading","changeType","args","currentTotalCount","pageSize","pageCount","Math","max","_operationTypes","component","_optionCache","_scheduleCustomLoadCallbacks","deferred","_isCustomLoading","loadingOperationTypes","parseInt","totalItemsCount","count","ceil","hasKnownLastPage","loadFromStore","d","resolve","_this4","dataSourceLoadOptions","loadResult","_customLoadOptions","_","isLoadingAll","_scheduleLoadCallbacks","fireEvent","promise","full","getCachedStoreData","module"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,OAAO,CAACC,OAAR,GAAkB,KAAK,CAAvB;;AACA,IAAIC,UAAU,GAAGC,sBAAsB,CAACC,OAAO,CAAC,4BAAD,CAAR,CAAvC;;AACA,IAAIC,YAAY,GAAGF,sBAAsB,CAACC,OAAO,CAAC,gCAAD,CAAR,CAAzC;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,yBAAD,CAArB;;AACA,IAAIG,KAAK,GAAGH,OAAO,CAAC,uBAAD,CAAnB;;AACA,IAAII,SAAS,GAAGJ,OAAO,CAAC,2BAAD,CAAvB;;AACA,IAAIK,OAAO,GAAGL,OAAO,CAAC,yBAAD,CAArB;;AACA,IAAIM,YAAY,GAAGP,sBAAsB,CAACC,OAAO,CAAC,wBAAD,CAAR,CAAzC;;AACA,IAAIO,YAAY,GAAGP,OAAO,CAAC,wBAAD,CAA1B;;AACA,IAAIQ,SAAS,GAAGR,OAAO,CAAC,2BAAD,CAAvB;;AAEA,SAASD,sBAAT,CAAgCU,GAAhC,EAAqC;AACjC,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AACjC,eAAWA;AADsB,GAArC;AAGH;;AACD,IAAIE,QAAQ,GAAGV,YAAY,CAACJ,OAAb,CAAqBe,UAArB,CAAgCC,OAAhC,CAAwC,YAAW;AAC9D,WAASC,UAAT,CAAoBC,KAApB,EAA2BC,UAA3B,EAAuC;AACnC,QAAID,KAAJ,EAAW;AACPA,MAAAA,KAAK,GAAGA,KAAK,CAACE,KAAN,CAAY,CAAZ,CAAR;;AACA,UAAID,UAAJ,EAAgB;AACZ,aAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnCH,UAAAA,KAAK,CAACG,CAAD,CAAL,GAAW,CAAC,GAAGb,OAAO,CAACe,MAAZ,EAAoB;AAC3BC,YAAAA,GAAG,EAAEN,KAAK,CAACG,CAAD,CAAL,CAASG;AADa,WAApB,EAERN,KAAK,CAACG,CAAD,CAFG,CAAX;AAGAH,UAAAA,KAAK,CAACG,CAAD,CAAL,CAASH,KAAT,GAAiBD,UAAU,CAACC,KAAK,CAACG,CAAD,CAAL,CAASH,KAAV,EAAiBC,UAAU,GAAG,CAA9B,CAA3B;AACH;AACJ;AACJ;;AACD,WAAOD,KAAP;AACH;;AAED,WAASO,uBAAT,CAAiCC,WAAjC,EAA8CC,eAA9C,EAA+DC,YAA/D,EAA6E;AACzE,QAAIC,cAAc,GAAG;AACjBC,MAAAA,MAAM,EAAE,IADS;AAEjBC,MAAAA,UAAU,EAAE;AAFK,KAArB;;AAIA,QAAIJ,eAAJ,EAAqB;AACjBE,MAAAA,cAAc,GAAG;AACbG,QAAAA,OAAO,EAAE,CAAC5B,YAAY,CAACJ,OAAb,CAAqBiC,mBAArB,CAAyCP,WAAW,CAACQ,IAArD,EAA2DP,eAAe,CAACO,IAA3E,CADG;AAEbC,QAAAA,QAAQ,EAAE,CAAC/B,YAAY,CAACJ,OAAb,CAAqBiC,mBAArB,CAAyCP,WAAW,CAACU,KAArD,EAA4DT,eAAe,CAACS,KAA5E,EAAmF,IAAnF,CAFE;AAGbC,QAAAA,cAAc,EAAE,CAACjC,YAAY,CAACJ,OAAb,CAAqBiC,mBAArB,CAAyCP,WAAW,CAACU,KAArD,EAA4DT,eAAe,CAACS,KAA5E,CAAD,IAAuFT,eAAe,CAACW,WAH1G;AAIbC,QAAAA,SAAS,EAAE,CAACnC,YAAY,CAACJ,OAAb,CAAqBwC,qBAArB,CAA2Cd,WAAW,CAACe,MAAvD,EAA+Dd,eAAe,CAACc,MAA/E,CAJC;AAKbC,QAAAA,SAAS,EAAEhB,WAAW,CAACgB,SAAZ,KAA0Bf,eAAe,CAACe,SALxC;AAMbC,QAAAA,IAAI,EAAEjB,WAAW,CAACiB,IAAZ,KAAqBhB,eAAe,CAACgB,IAN9B;AAObC,QAAAA,IAAI,EAAElB,WAAW,CAACkB,IAAZ,KAAqBjB,eAAe,CAACiB,IAP9B;AAQbb,QAAAA,UAAU,EAAEH;AARC,OAAjB;AAUAC,MAAAA,cAAc,CAACC,MAAf,GAAwBF,YAAY,IAAIC,cAAc,CAACG,OAA/B,IAA0CH,cAAc,CAACM,QAAzD,IAAqEN,cAAc,CAACU,SAA5G;AACAV,MAAAA,cAAc,CAACgB,MAAf,GAAwBhB,cAAc,CAACa,SAAf,IAA4Bb,cAAc,CAACe,IAAnE;AACH;;AACD,WAAOf,cAAP;AACH;;AAED,WAASiB,WAAT,CAAqBC,MAArB,EAA6BC,OAA7B,EAAsC;AAClC,QAAI,CAAC,GAAG1C,KAAK,CAAC2C,SAAV,EAAqBD,OAArB,CAAJ,EAAmC;AAC/B,OAAC,GAAG3C,OAAO,CAAC6C,YAAZ,EAA0BH,MAA1B,EAAkCC,OAAlC;AACH,KAFD,MAEO;AACHD,MAAAA,MAAM;AACT;AACJ;;AAED,WAASI,oBAAT,GAAgC;AAC5B,WAAO;AACHC,MAAAA,KAAK,EAAE;AADJ,KAAP;AAGH;;AAED,WAASC,oBAAT,CAA8BC,OAA9B,EAAuC;AACnC,WAAOA,OAAO,CAACC,eAAR,CAAwBH,KAAxB,CAA8BE,OAAO,CAACZ,SAAtC,CAAP;AACH;;AAED,WAASc,kBAAT,CAA4BF,OAA5B,EAAqCG,IAArC,EAA2C;AACvC,QAAIf,SAAS,GAAGY,OAAO,CAACZ,SAAxB;;AACA,QAAI,KAAK,CAAL,KAAWA,SAAf,EAA0B;AACtBY,MAAAA,OAAO,CAACC,eAAR,CAAwBH,KAAxB,CAA8BV,SAA9B,IAA2Ce,IAA3C;AACH;AACJ;;AACD,SAAO;AACHC,IAAAA,IAAI,EAAE,UAASC,UAAT,EAAqBC,gBAArB,EAAuC;AACzC,UAAIC,IAAI,GAAG,IAAX;AACAA,MAAAA,IAAI,CAACC,WAAL,GAAmBH,UAAnB;AACAE,MAAAA,IAAI,CAACE,iBAAL,GAAyBH,gBAAgB,IAAI,EAA7C;AACAC,MAAAA,IAAI,CAACG,WAAL,GAAmB,CAACL,UAAU,CAACM,UAAX,EAApB;AACAJ,MAAAA,IAAI,CAACK,YAAL,GAAoB,KAApB;AACAL,MAAAA,IAAI,CAACM,kBAAL,GAA0B,CAA1B;AACAN,MAAAA,IAAI,CAACO,gBAAL,GAAwBjB,oBAAoB,EAA5C;AACAU,MAAAA,IAAI,CAACQ,mBAAL,GAA2B,EAA3B;AACAR,MAAAA,IAAI,CAACS,eAAL,GAAuBX,UAAU,CAACW,eAAlC;AACAT,MAAAA,IAAI,CAACU,eAAL,GAAuB,CAAvB;AACAV,MAAAA,IAAI,CAACW,aAAL,GAAqB,KAArB;AACAX,MAAAA,IAAI,CAACY,OAAL,GAAe,CAAC,GAAGxE,UAAU,CAACD,OAAf,GAAf;AACA6D,MAAAA,IAAI,CAACa,cAAL,GAAsB,CAAC,GAAGzE,UAAU,CAACD,OAAf,GAAtB;AACA6D,MAAAA,IAAI,CAACc,SAAL,GAAiB,CAAC,GAAG1E,UAAU,CAACD,OAAf,GAAjB;AACA6D,MAAAA,IAAI,CAACe,yBAAL,GAAiC,CAAC,GAAG3E,UAAU,CAACD,OAAf,GAAjC;AACA6D,MAAAA,IAAI,CAACgB,QAAL,GAAgB,CAAC,GAAG5E,UAAU,CAACD,OAAf,GAAhB;AACA6D,MAAAA,IAAI,CAACiB,mBAAL,GAA2BjB,IAAI,CAACkB,kBAAL,CAAwBC,IAAxB,CAA6BnB,IAA7B,CAA3B;AACAA,MAAAA,IAAI,CAACoB,mBAAL,GAA2BpB,IAAI,CAACqB,kBAAL,CAAwBF,IAAxB,CAA6BnB,IAA7B,CAA3B;AACAA,MAAAA,IAAI,CAACsB,kBAAL,GAA0BtB,IAAI,CAACuB,iBAAL,CAAuBJ,IAAvB,CAA4BnB,IAA5B,CAA1B;AACAA,MAAAA,IAAI,CAACwB,sBAAL,GAA8BxB,IAAI,CAACyB,qBAAL,CAA2BN,IAA3B,CAAgCnB,IAAhC,CAA9B;AACAA,MAAAA,IAAI,CAAC0B,iBAAL,GAAyB1B,IAAI,CAAC2B,gBAAL,CAAsBR,IAAtB,CAA2BnB,IAA3B,CAAzB;AACAA,MAAAA,IAAI,CAAC4B,YAAL,GAAoB5B,IAAI,CAAC6B,WAAL,CAAiBV,IAAjB,CAAsBnB,IAAtB,CAApB;AACAA,MAAAA,IAAI,CAAC8B,gBAAL,GAAwB9B,IAAI,CAAC+B,eAAL,CAAqBZ,IAArB,CAA0BnB,IAA1B,CAAxB;AACAF,MAAAA,UAAU,CAACkC,EAAX,CAAc,SAAd,EAAyBhC,IAAI,CAACiB,mBAA9B;AACAnB,MAAAA,UAAU,CAACkC,EAAX,CAAc,2BAAd,EAA2ChC,IAAI,CAACoB,mBAAhD;AACAtB,MAAAA,UAAU,CAACkC,EAAX,CAAc,qBAAd,EAAqChC,IAAI,CAACsB,kBAA1C;AACAxB,MAAAA,UAAU,CAACkC,EAAX,CAAc,gBAAd,EAAgChC,IAAI,CAACwB,sBAArC;AACA1B,MAAAA,UAAU,CAACkC,EAAX,CAAc,WAAd,EAA2BhC,IAAI,CAAC0B,iBAAhC;AACA5B,MAAAA,UAAU,CAACkC,EAAX,CAAc,UAAd,EAA0BhC,IAAI,CAAC8B,gBAA/B;AACAhC,MAAAA,UAAU,CAACmC,KAAX,GAAmBD,EAAnB,CAAsB,MAAtB,EAA8BhC,IAAI,CAAC4B,YAAnC;AACA,OAAC,GAAGlF,SAAS,CAACwF,IAAd,EAAoBpC,UAApB,EAAgC,UAASqC,UAAT,EAAqBC,MAArB,EAA6B;AACzD,YAAI,CAACpC,IAAI,CAACmC,UAAD,CAAL,IAAqB,CAAC,GAAG1F,KAAK,CAAC4F,UAAV,EAAsBD,MAAtB,CAAzB,EAAwD;AACpDpC,UAAAA,IAAI,CAACmC,UAAD,CAAJ,GAAmB,YAAW;AAC1B,mBAAO,KAAKlC,WAAL,CAAiBkC,UAAjB,EAA6BG,KAA7B,CAAmC,KAAKrC,WAAxC,EAAqDsC,SAArD,CAAP;AACH,WAFD;AAGH;AACJ,OAND;AAOH,KAvCE;AAwCHxC,IAAAA,gBAAgB,EAAE,YAAW;AACzB,aAAO,KAAKG,iBAAZ;AACH,KA1CE;AA2CHsC,IAAAA,OAAO,EAAE,UAASC,kBAAT,EAA6B;AAClC,UAAIzC,IAAI,GAAG,IAAX;AACA,UAAIF,UAAU,GAAGE,IAAI,CAACC,WAAtB;AACA,UAAIgC,KAAK,GAAGnC,UAAU,CAACmC,KAAX,EAAZ;AACAnC,MAAAA,UAAU,CAAC4C,GAAX,CAAe,SAAf,EAA0B1C,IAAI,CAACiB,mBAA/B;AACAnB,MAAAA,UAAU,CAAC4C,GAAX,CAAe,2BAAf,EAA4C1C,IAAI,CAACoB,mBAAjD;AACAtB,MAAAA,UAAU,CAAC4C,GAAX,CAAe,qBAAf,EAAsC1C,IAAI,CAACsB,kBAA3C;AACAxB,MAAAA,UAAU,CAAC4C,GAAX,CAAe,gBAAf,EAAiC1C,IAAI,CAACwB,sBAAtC;AACA1B,MAAAA,UAAU,CAAC4C,GAAX,CAAe,WAAf,EAA4B1C,IAAI,CAAC0B,iBAAjC;AACA5B,MAAAA,UAAU,CAAC4C,GAAX,CAAe,UAAf,EAA2B1C,IAAI,CAAC8B,gBAAhC;AACAG,MAAAA,KAAK,IAAIA,KAAK,CAACS,GAAN,CAAU,MAAV,EAAkB1C,IAAI,CAAC4B,YAAvB,CAAT;;AACA,UAAI,CAACa,kBAAL,EAAyB;AACrB3C,QAAAA,UAAU,CAAC0C,OAAX;AACH;AACJ,KAzDE;AA0DHG,IAAAA,OAAO,EAAE,UAASlD,OAAT,EAAkBzB,cAAlB,EAAkC;AACvC,UAAIgC,IAAI,GAAG,IAAX;AACA,UAAIF,UAAU,GAAGE,IAAI,CAACC,WAAtB;;AACA,UAAIjC,cAAc,CAACC,MAAnB,EAA2B;AACvB+B,QAAAA,IAAI,CAAC4C,sBAAL;AACA5C,QAAAA,IAAI,CAACG,WAAL,GAAmB,CAACL,UAAU,CAAC+C,QAAX,EAApB;AACA7C,QAAAA,IAAI,CAACK,YAAL,GAAoBL,IAAI,CAACG,WAAzB;AACH;AACJ,KAlEE;AAmEHyC,IAAAA,sBAAsB,EAAE,YAAW;AAC/B,WAAKtC,kBAAL,GAA0B,CAA1B;AACA,WAAKI,eAAL,GAAuB,CAAvB;AACH,KAtEE;AAuEHoC,IAAAA,UAAU,EAAE,YAAW;AACnB,WAAKC,gBAAL,GAAwB,KAAK,CAA7B;AACA,WAAKC,iBAAL,GAAyB,KAAK,CAA9B;AACH,KA1EE;AA2EHC,IAAAA,eAAe,EAAE,YAAW;AACxB,WAAK1C,gBAAL,GAAwBjB,oBAAoB,EAA5C;AACH,KA7EE;AA8EH4D,IAAAA,wBAAwB,EAAE,YAAW;AACjC,UAAInD,gBAAgB,GAAG,KAAKA,gBAAL,EAAvB;AACA,UAAI/B,cAAc,GAAGJ,uBAAuB,CAAC,KAAKuF,gBAAL,IAAyB,EAA1B,EAA8B,EAA9B,CAA5C;AACA,UAAIC,iBAAiB,GAAGC,MAAM,CAACC,IAAP,CAAYvD,gBAAZ,EAA8BwD,KAA9B,CAAoC,UAASC,aAAT,EAAwB;AAChF,eAAO,CAACxF,cAAc,CAACwF,aAAD,CAAf,IAAkC,CAACzD,gBAAgB,CAACyD,aAAD,CAA1D;AACH,OAFuB,CAAxB;AAGA,aAAO,CAACJ,iBAAR;AACH,KArFE;AAsFHK,IAAAA,IAAI,EAAE,UAASC,OAAT,EAAkBC,SAAlB,EAA6B;AAC/B,UAAI1B,KAAK,GAAG,KAAKA,KAAL,EAAZ;;AACA,UAAI,KAAKiB,wBAAL,EAAJ,EAAqC;AACjC,aAAKH,gBAAL,GAAwB,KAAK,CAA7B;AACH;;AACD,WAAKC,iBAAL,GAAyB,KAAK,CAA9B;AACA,WAAKC,eAAL,CAAqB,IAArB;;AACA,UAAI,KAAKF,gBAAT,EAA2B;AACvB,SAAC,GAAGlG,YAAY,CAAC+G,UAAjB,EAA6B;AACzBC,UAAAA,OAAO,EAAE5B,KADgB;AAEzBrC,UAAAA,IAAI,EAAE,KAAKmD,gBAFc;AAGzBW,UAAAA,OAAO,EAAEA;AAHgB,SAA7B;AAKH;;AACD,UAAI,CAACC,SAAL,EAAgB;AACZ,aAAKG,WAAL,CAAiBJ,OAAjB;AACH;AACJ,KAvGE;AAwGHK,IAAAA,kBAAkB,EAAE,YAAW;AAC3B,UAAIC,KAAK,GAAG,IAAZ;;AACA,UAAI,CAAC,KAAKC,gBAAV,EAA4B;AACxB,YAAIC,UAAJ;AACA,YAAIC,SAAJ;AACA,YAAIlC,KAAK,GAAG,KAAKA,KAAL,EAAZ;;AACA,aAAKgC,gBAAL,GAAwB,UAASrE,IAAT,EAAe;AACnC,cAAIwE,cAAc,GAAGD,SAAS,IAAIA,SAAS,KAAKH,KAAK,CAACjB,gBAAtD;;AACA,cAAI,CAACmB,UAAD,IAAeE,cAAnB,EAAmC;AAC/BD,YAAAA,SAAS,GAAGH,KAAK,CAACjB,gBAAN,IAA0B,EAAtC;AACAmB,YAAAA,UAAU,GAAG,EAAb;;AACA,iBAAK,IAAI1G,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2G,SAAS,CAAC1G,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACvC0G,cAAAA,UAAU,CAAC,CAAC,GAAG1H,OAAO,CAAC6H,UAAZ,EAAwBpC,KAAK,CAACqC,KAAN,CAAYH,SAAS,CAAC3G,CAAD,CAArB,CAAxB,CAAD,CAAV,GAAiEA,CAAjE;AACH;AACJ;;AACD,iBAAO0G,UAAU,CAAC,CAAC,GAAG1H,OAAO,CAAC6H,UAAZ,EAAwBpC,KAAK,CAACqC,KAAN,CAAY1E,IAAZ,CAAxB,CAAD,CAAjB;AACH,SAVD;AAWH;;AACD,aAAO,KAAKqE,gBAAZ;AACH,KA3HE;AA4HHM,IAAAA,WAAW,EAAE,YAAW;AACpB,aAAO,KAAKtC,KAAL,EAAP;AACH,KA9HE;AA+HH6B,IAAAA,WAAW,EAAE,UAASJ,OAAT,EAAkB;AAC3B,UAAIc,MAAM,GAAG,IAAb;;AACA,UAAIX,OAAO,GAAG,KAAKU,WAAL,EAAd;;AACA,UAAIzE,UAAU,GAAG,KAAKG,WAAtB;;AACA,UAAI3C,UAAU,GAAGf,YAAY,CAACJ,OAAb,CAAqBsI,oBAArB,CAA0C,KAAKlG,KAAL,EAA1C,EAAwDd,MAAzE;;AACA,UAAIiH,UAAU,GAAG,KAAKA,UAAL,EAAjB;AACA,UAAIC,aAAa,GAAG,cAAc,KAAKC,MAAL,CAAY,gBAAZ,CAAlC;AACAlB,MAAAA,OAAO,GAAGA,OAAO,CAAC9E,MAAR,CAAe,UAASiG,MAAT,EAAiB;AACtC,eAAO,CAAC/E,UAAU,CAAC+C,QAAX,EAAD,IAA0B,aAAagC,MAAM,CAACC,IAA9C,IAAsD,KAAK,CAAL,KAAWD,MAAM,CAACE,KAA/E;AACH,OAFS,CAAV;;AAGA,UAAIC,YAAY,GAAG,YAAW;AAC1B,eAAO1H,UAAU,GAAGkH,MAAM,CAACS,UAAP,EAAH,GAAyBT,MAAM,CAACU,MAAP,CAAczH,MAAxD;AACH,OAFD;;AAGA,UAAI0H,YAAY,GAAGH,YAAY,EAA/B;AACA,OAAC,GAAGnI,YAAY,CAAC+G,UAAjB,EAA6B;AACzBC,QAAAA,OAAO,EAAEA,OADgB;AAEzBjE,QAAAA,IAAI,EAAE,KAAKsF,MAFc;AAGzBxB,QAAAA,OAAO,EAAEA,OAHgB;AAIzBpG,QAAAA,UAAU,EAAEA,UAJa;AAKzB8H,QAAAA,cAAc,EAAE;AALS,OAA7B;AAOA,OAAC,GAAGvI,YAAY,CAAC+G,UAAjB,EAA6B;AACzBC,QAAAA,OAAO,EAAEA,OADgB;AAEzBjE,QAAAA,IAAI,EAAEE,UAAU,CAACzC,KAAX,EAFmB;AAGzBqG,QAAAA,OAAO,EAAEA,OAHgB;AAIzBpG,QAAAA,UAAU,EAAEA,UAJa;AAKzB8H,QAAAA,cAAc,EAAE;AALS,OAA7B;;AAOA,UAAI,KAAK9E,kBAAL,GAA0B,CAA1B,IAA+BqE,aAAa,IAAID,UAAU,KAAKS,YAAnE,EAAiF;AAC7E,aAAKzE,eAAL,IAAwBsE,YAAY,KAAKG,YAAzC;AACH;;AACDzB,MAAAA,OAAO,CAAC2B,MAAR,CAAe,CAAf,EAAkB3B,OAAO,CAACjG,MAA1B;AACH,KA/JE;AAgKHoE,IAAAA,WAAW,EAAE,UAAS6B,OAAT,EAAkB;AAC3B,WAAKD,IAAL,CAAUC,OAAV,EAAmB,IAAnB;AACH,KAlKE;AAmKH3B,IAAAA,eAAe,EAAE,UAASuD,CAAT,EAAY;AACzB,WAAKtE,QAAL,CAAcuE,IAAd,CAAmBD,CAAnB;;AACA,WAAKxB,WAAL,CAAiBwB,CAAC,CAAC5B,OAAnB;AACH,KAtKE;AAuKH8B,IAAAA,0BAA0B,EAAE,UAASC,aAAT,EAAwB1F,gBAAxB,EAA0C;AAClE,UAAI2F,qBAAqB,GAAG,CAAC,WAAD,EAAc,SAAd,EAAyB,QAAzB,CAA5B;AACA,UAAIC,kBAAkB,GAAGD,qBAAqB,CAACE,OAAtB,CAA8BH,aAA9B,CAAzB;AACA,UAAII,qBAAqB,GAAGF,kBAAkB,IAAI,CAAtB,GAA0BD,qBAAqB,CAACnI,KAAtB,CAA4BoI,kBAA5B,CAA1B,GAA4E,CAACF,aAAD,CAAxG;AACA,aAAOI,qBAAqB,CAACC,IAAtB,CAA2B,UAASL,aAAT,EAAwB;AACtD,eAAO1F,gBAAgB,CAAC0F,aAAD,CAAvB;AACH,OAFM,CAAP;AAGH,KA9KE;AA+KHM,IAAAA,0BAA0B,EAAE,UAAStG,OAAT,EAAkBzB,cAAlB,EAAkC;AAC1D,UAAIgC,IAAI,GAAG,IAAX;AACA,UAAIgG,eAAe,GAAGhG,IAAI,CAAC+C,gBAA3B;AACA,UAAIkD,gBAAgB,GAAGjG,IAAI,CAACgD,iBAA5B;AACA,UAAItD,eAAe,GAAGM,IAAI,CAACO,gBAA3B;;AACA,UAAId,OAAO,CAACyG,gBAAR,CAAyBtH,MAAzB,IAAmC,CAACa,OAAO,CAACM,gBAAR,CAAyBrB,SAA7D,IAA0Ee,OAAO,CAACyG,gBAAR,CAAyB7H,IAAzB,IAAiC,CAACoB,OAAO,CAACM,gBAAR,CAAyB5B,OAAzI,EAAkJ;AAC9IsB,QAAAA,OAAO,CAACM,gBAAR,GAA2B;AACvBrB,UAAAA,SAAS,EAAEe,OAAO,CAACM,gBAAR,CAAyBrB;AADb,SAA3B;AAGH;;AACD,UAAIV,cAAc,CAACE,UAAnB,EAA+B;AAC3B8H,QAAAA,eAAe,GAAG,KAAK,CAAvB;AACAC,QAAAA,gBAAgB,GAAG,KAAK,CAAxB;AACAvG,QAAAA,eAAe,GAAGJ,oBAAoB,EAAtC;AACH,OAJD,MAIO;AACH,YAAItB,cAAc,CAACC,MAAnB,EAA2B;AACvBgI,UAAAA,gBAAgB,GAAG,KAAK,CAAxB;AACAvG,UAAAA,eAAe,GAAGJ,oBAAoB,EAAtC;AACH,SAHD,MAGO;AACH,cAAItB,cAAc,CAACe,IAAf,IAAuBf,cAAc,CAACQ,cAA1C,EAA0D;AACtDkB,YAAAA,eAAe,GAAGJ,oBAAoB,EAAtC;AACH;AACJ;;AAAA,SAAC,GAAG5C,SAAS,CAACwF,IAAd,EAAoBlE,cAApB,EAAoC,UAASyH,aAAT,EAAwBU,KAAxB,EAA+B;AAChE,cAAIA,KAAK,IAAInG,IAAI,CAACwF,0BAAL,CAAgCC,aAAhC,EAA+ChG,OAAO,CAACM,gBAAvD,CAAb,EAAuF;AACnFiG,YAAAA,eAAe,GAAG,KAAK,CAAvB;AACAC,YAAAA,gBAAgB,GAAG,KAAK,CAAxB;AACH;AACJ,SALA;AAMJ;;AACD,UAAIA,gBAAJ,EAAsB;AAClBxG,QAAAA,OAAO,CAACM,gBAAR,CAAyBf,MAAzB,GAAkC,KAAlC;AACH;;AACDS,MAAAA,OAAO,CAACuG,eAAR,GAA0BA,eAA1B;AACAvG,MAAAA,OAAO,CAACwG,gBAAR,GAA2BA,gBAA3B;AACAxG,MAAAA,OAAO,CAACC,eAAR,GAA0BA,eAA1B;;AACA,UAAI,CAACD,OAAO,CAAC2G,eAAb,EAA8B;AAC1BpG,QAAAA,IAAI,CAAC+C,gBAAL,GAAwBiD,eAAxB;AACAhG,QAAAA,IAAI,CAACgD,iBAAL,GAAyBiD,gBAAzB;AACAjG,QAAAA,IAAI,CAACO,gBAAL,GAAwBb,eAAxB;AACH;AACJ,KAvNE;AAwNH2B,IAAAA,kBAAkB,EAAE,UAAS5B,OAAT,EAAkB;AAClC,UAAIO,IAAI,GAAG,IAAX;AACA,UAAIF,UAAU,GAAGE,IAAI,CAACC,WAAtB;AACA,UAAInC,eAAe,GAAGkC,IAAI,CAACmD,gBAA3B;AACAnD,MAAAA,IAAI,CAACe,yBAAL,CAA+BwE,IAA/B,CAAoC9F,OAApC;AACAA,MAAAA,OAAO,CAAC4G,KAAR,GAAgB,KAAKzB,MAAL,CAAY,gBAAZ,CAAhB;AACAnF,MAAAA,OAAO,CAAC6G,wBAAR,GAAmC7G,OAAO,CAACyG,gBAA3C;AACAzG,MAAAA,OAAO,CAACM,gBAAR,GAA2B,CAAC,GAAGpD,OAAO,CAACe,MAAZ,EAAoB,EAApB,EAAwB,KAAKqC,gBAAL,EAAxB,CAA3B;AACA,UAAIhC,YAAY,GAAG,CAACiC,IAAI,CAACuG,QAAL,EAAD,IAAoB,CAACvG,IAAI,CAACwG,aAA7C;;AACA,UAAIxG,IAAI,CAAC4E,MAAL,CAAY,qCAAZ,KAAsD,CAAC5E,IAAI,CAACuG,QAAL,EAA3D,EAA4E;AACxE9G,QAAAA,OAAO,CAAC4G,KAAR,GAAgB,KAAK,CAArB;AACH;;AACD,UAAIxI,WAAW,GAAG,CAAC,GAAGlB,OAAO,CAACe,MAAZ,EAAoB;AAClCmB,QAAAA,SAAS,EAAEmB,IAAI,CAACnB,SAAL;AADuB,OAApB,EAEfY,OAAO,CAACyG,gBAFO,CAAlB;AAGA,UAAIlI,cAAc,GAAGJ,uBAAuB,CAACC,WAAD,EAAcC,eAAd,EAA+BC,YAA/B,CAA5C;;AACAiC,MAAAA,IAAI,CAAC+F,0BAAL,CAAgCtG,OAAhC,EAAyCzB,cAAzC;;AACA,UAAI,CAACyB,OAAO,CAAC2G,eAAb,EAA8B;AAC1B,YAAIK,YAAY,GAAGzG,IAAI,CAACwG,aAAxB;AACA/G,QAAAA,OAAO,CAACZ,SAAR,GAAoBiB,UAAU,CAACjB,SAAX,EAApB;AACAY,QAAAA,OAAO,CAAC3B,eAAR,GAA0BD,WAA1B;AACA4B,QAAAA,OAAO,CAACzB,cAAR,GAAyBA,cAAzB;AACAgC,QAAAA,IAAI,CAAC0G,sBAAL,GAA8B1I,cAA9B;AACAgC,QAAAA,IAAI,CAACwG,aAAL,GAAqB,IAArB;AACA,SAAC,GAAG1J,SAAS,CAAC6J,IAAd,EAAoBF,YAAY,IAAIzG,IAAI,CAAC4G,YAArB,IAAqC5G,IAAI,CAAC2C,OAAL,CAAalD,OAAb,EAAsBzB,cAAtB,CAAzD,EAAgG6I,IAAhG,CAAqG,YAAW;AAC5G,cAAI7G,IAAI,CAAC8G,gBAAL,KAA0BrH,OAAO,CAACsH,WAAtC,EAAmD;AAC/C/G,YAAAA,IAAI,CAAC4G,YAAL,GAAoB,IAApB;AACA5G,YAAAA,IAAI,CAACgH,IAAL,GAAYC,MAAZ,CAAmB,YAAW;AAC1BjH,cAAAA,IAAI,CAAC4G,YAAL,GAAoB,KAApB;AACH,aAFD;AAGH;AACJ,SAPD,EAOGM,IAPH,CAOQ,YAAW;AACfpH,UAAAA,UAAU,CAACqH,MAAX,CAAkB1H,OAAO,CAACsH,WAA1B;AACH,SATD,EASGE,MATH,CASU,YAAW;AACjBjH,UAAAA,IAAI,CAACwG,aAAL,GAAqB,KAArB;AACH,SAXD;AAYA1G,QAAAA,UAAU,CAACqH,MAAX,CAAkBnH,IAAI,CAAC8G,gBAAvB;AACA9G,QAAAA,IAAI,CAAC8G,gBAAL,GAAwBrH,OAAO,CAACsH,WAAhC;;AACA,YAAI/G,IAAI,CAACwG,aAAT,EAAwB;AACpB1G,UAAAA,UAAU,CAACqH,MAAX,CAAkBnH,IAAI,CAAC8G,gBAAvB;AACH;AACJ;;AACD,WAAKM,sBAAL,CAA4B3H,OAA5B;AACH,KAnQE;AAoQH2H,IAAAA,sBAAsB,EAAE,UAAS3H,OAAT,EAAkB;AACtC,UAAIM,gBAAgB,GAAGN,OAAO,CAACM,gBAA/B;AACAN,MAAAA,OAAO,CAAC5B,WAAR,GAAsB,EAAtB;AACA,UAAIwJ,WAAW,GAAG5H,OAAO,CAACC,eAAR,CAAwB4H,KAA1C;AACA,UAAIC,oBAAoB,GAAG;AACvB3I,QAAAA,MAAM,EAAE,CAACmB,gBAAgB,CAACrB,SADH;AAEvBL,QAAAA,IAAI,EAAE,CAAC0B,gBAAgB,CAAC5B,OAFD;AAGvBI,QAAAA,KAAK,EAAE,CAACwB,gBAAgB,CAACzB,QAHF;AAIvBkJ,QAAAA,OAAO,EAAE,CAACzH,gBAAgB,CAACyH,OAJJ;AAKvB1I,QAAAA,IAAI,EAAE,CAACiB,gBAAgB,CAACf,MALD;AAMvBD,QAAAA,IAAI,EAAE,CAACgB,gBAAgB,CAACf,MAND;AAOvByI,QAAAA,iBAAiB,EAAEJ,WAAW,IAAI,gBAAgBA,WAA/B,IAA8C,CAACtH,gBAAgB,CAACf;AAP5D,OAA3B;AASA,OAAC,GAAGtC,SAAS,CAACwF,IAAd,EAAoBzC,OAAO,CAACyG,gBAA5B,EAA8C,UAASwB,UAAT,EAAqBC,WAArB,EAAkC;AAC5E,YAAIJ,oBAAoB,CAACG,UAAD,CAAxB,EAAsC;AAClCjI,UAAAA,OAAO,CAAC5B,WAAR,CAAoB6J,UAApB,IAAkCC,WAAlC;AACA,iBAAOlI,OAAO,CAACyG,gBAAR,CAAyBwB,UAAzB,CAAP;AACH;AACJ,OALD;;AAMA,UAAIL,WAAJ,EAAiB;AACb5H,QAAAA,OAAO,CAAC6H,KAAR,GAAgBD,WAAhB;AACH;;AACD5H,MAAAA,OAAO,CAACG,IAAR,GAAeJ,oBAAoB,CAACC,OAAD,CAApB,IAAiCA,OAAO,CAACuG,eAAxD;AACH,KA3RE;AA4RHzE,IAAAA,iBAAiB,EAAE,UAAS9B,OAAT,EAAkB;AACjC,UAAImI,MAAM,GAAG,IAAb;;AACA,UAAI/J,WAAW,GAAG4B,OAAO,CAAC5B,WAA1B;AACA,UAAIgK,WAAW,GAAGpI,OAAO,CAACM,gBAAR,IAA4B,CAACN,OAAO,CAACM,gBAAR,CAAyBf,MAAxE;AACA,UAAIU,eAAe,GAAGD,OAAO,CAACC,eAA9B;AACA,UAAIwG,gBAAgB,GAAGzG,OAAO,CAACyG,gBAA/B;AACA,UAAI4B,SAAS,GAAG,UAAU,KAAKlD,MAAL,CAAY,cAAZ,CAAV,IAAyCsB,gBAAzD;AACA,UAAI6B,aAAa,GAAGD,SAAS,IAAI,CAACrI,OAAO,CAAC2G,eAAtB,IAAyC1G,eAAzC,KAA6D,CAACmI,WAAD,IAAgB3B,gBAAgB,CAAC3H,KAA9F,KAAwG,CAAC,KAAKqG,MAAL,CAAY,iBAAZ,CAA7H;AACA,UAAIoD,eAAe,GAAGF,SAAS,IAAID,WAAnC;AACA,UAAII,cAAc,GAAGD,eAAe,IAAI,CAACvI,OAAO,CAAC2G,eAAjD;;AACA,UAAI,CAACvI,WAAL,EAAkB;AACd,aAAKoC,WAAL,CAAiBkH,MAAjB,CAAwB1H,OAAO,CAACsH,WAAhC;;AACA;AACH;;AACD,UAAItH,OAAO,CAAC3B,eAAZ,EAA6B;AACzB,aAAKqF,gBAAL,GAAwB1D,OAAO,CAAC3B,eAAhC;AACAuF,QAAAA,MAAM,CAACC,IAAP,CAAY7D,OAAO,CAACzB,cAApB,EAAoCkK,OAApC,CAA4C,UAASzC,aAAT,EAAwB;AAChEmC,UAAAA,MAAM,CAACpH,mBAAP,CAA2BiF,aAA3B,IAA4CmC,MAAM,CAACpH,mBAAP,CAA2BiF,aAA3B,KAA6ChG,OAAO,CAACzB,cAAR,CAAuByH,aAAvB,CAAzF;AACH,SAFD;AAGH;;AACD,UAAIoC,WAAJ,EAAiB;AACbpI,QAAAA,OAAO,CAACX,IAAR,GAAejB,WAAW,CAACiB,IAA3B;AACAW,QAAAA,OAAO,CAACV,IAAR,GAAelB,WAAW,CAACkB,IAA3B;AACA,eAAOlB,WAAW,CAACiB,IAAnB;AACA,eAAOjB,WAAW,CAACkB,IAAnB;AACH;;AACD,UAAIlB,WAAW,CAACU,KAAhB,EAAuB;AACnBV,QAAAA,WAAW,CAACU,KAAZ,GAAoBkB,OAAO,CAAClB,KAAR,IAAiBV,WAAW,CAACU,KAAjD;AACH;;AACD,UAAIjB,UAAU,GAAGf,YAAY,CAACJ,OAAb,CAAqBsI,oBAArB,CAA0CyB,gBAAgB,CAAC3H,KAAjB,IAA0BV,WAAW,CAACU,KAAhF,EAAuFd,MAAxG;;AACA,UAAI,CAACsK,aAAD,IAAkB,CAACvI,oBAAoB,CAACC,OAAD,CAA3C,EAAsD;AAClD,YAAIuI,eAAe,IAAIvI,OAAO,CAACwG,gBAA/B,EAAiD;AAC7CxG,UAAAA,OAAO,CAACG,IAAR,GAAexC,UAAU,CAACqC,OAAO,CAACwG,gBAAT,EAA2B3I,UAA3B,CAAzB;AACH,SAFD,MAEO;AACH,cAAI2K,cAAJ,EAAoB;AAChB,gBAAI,CAAC,KAAKlF,gBAAV,EAA4B;AACxB,mBAAKA,gBAAL,GAAwB3F,UAAU,CAACqC,OAAO,CAACG,IAAT,EAAerD,YAAY,CAACJ,OAAb,CAAqBsI,oBAArB,CAA0CyB,gBAAgB,CAAC3H,KAA3D,EAAkEd,MAAjF,CAAlC;AACH,aAFD,MAEO;AACH,kBAAIgC,OAAO,CAAC0I,kBAAZ,EAAgC;AAC5B1I,gBAAAA,OAAO,CAACG,IAAR,GAAe,KAAKmD,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBqF,MAAtB,CAA6B3I,OAAO,CAACG,IAArC,CAAvC;AACH;AACJ;AACJ;;AACD,cAAIhD,YAAY,CAACT,OAAjB,CAAyBsD,OAAO,CAACG,IAAjC,EAAuCoH,IAAvC,CAA4CnJ,WAA5C,EAAyDgJ,IAAzD,CAA8D,UAASjH,IAAT,EAAe;AACzEH,YAAAA,OAAO,CAACG,IAAR,GAAeA,IAAf;;AACA,gBAAIqI,cAAJ,EAAoB;AAChBL,cAAAA,MAAM,CAAC5E,iBAAP,GAA2B5F,UAAU,CAACqC,OAAO,CAACG,IAAT,EAAetC,UAAf,CAArC;AACH;AACJ,WALD,EAKG4J,IALH,CAKQ,UAASmB,KAAT,EAAgB;AACpB5I,YAAAA,OAAO,CAACG,IAAR,GAAgB,IAAI9C,SAAS,CAACwL,QAAd,EAAD,CAAyBC,MAAzB,CAAgCF,KAAhC,CAAf;AACH,WAPD;AAQH;;AACD,YAAIxK,WAAW,CAAC4J,iBAAZ,IAAiCI,WAArC,EAAkD;AAC9CpI,UAAAA,OAAO,CAAC6H,KAAR,GAAgB,CAAC,GAAG7K,KAAK,CAAC+L,aAAV,EAAyB/I,OAAO,CAAC6H,KAAjC,IAA0C7H,OAAO,CAAC6H,KAAlD,GAA0D,EAA1E;AACA7H,UAAAA,OAAO,CAAC6H,KAAR,CAAc5C,UAAd,GAA2BjF,OAAO,CAACG,IAAR,CAAanC,MAAxC;AACH;;AACD,YAAIgC,OAAO,CAAC6H,KAAR,IAAiB7H,OAAO,CAAC6H,KAAR,CAAc5C,UAAd,IAA4B,CAA7C,KAAmD,UAAUwB,gBAAgB,CAACuB,iBAA3B,IAAgD,UAAU5J,WAAW,CAAC4J,iBAAzH,CAAJ,EAAiJ;AAC7IhI,UAAAA,OAAO,CAAC6H,KAAR,CAAc5C,UAAd,GAA2B,CAAC,CAA5B;AACH;;AACD,aAAK+D,qBAAL,CAA2BhJ,OAA3B;;AACA,YAAIsI,aAAJ,EAAmB;AACfrI,UAAAA,eAAe,CAAC4H,KAAhB,GAAwB5H,eAAe,CAAC4H,KAAhB,IAAyB,CAAC,GAAG3K,OAAO,CAACe,MAAZ,EAAoB,EAApB,EAAwB+B,OAAO,CAAC6H,KAAhC,CAAjD;AACA,WAAC,GAAGxK,SAAS,CAAC6J,IAAd,EAAoBlH,OAAO,CAACG,IAA5B,EAAkCiH,IAAlC,CAAuC,UAASjH,IAAT,EAAe;AAClDD,YAAAA,kBAAkB,CAACF,OAAD,EAAUrC,UAAU,CAACwC,IAAD,EAAOtC,UAAP,CAApB,CAAlB;AACH,WAFD;AAGH;AACJ;;AACDmC,MAAAA,OAAO,CAACyG,gBAAR,GAA2BzG,OAAO,CAAC6G,wBAAnC;AACH,KAhWE;AAiWHmC,IAAAA,qBAAqB,EAAE,UAAShJ,OAAT,EAAkB;AACrC,UAAIA,OAAO,CAACM,gBAAR,IAA4B,CAACN,OAAO,CAACM,gBAAR,CAAyBf,MAAtD,IAAgE0J,KAAK,CAACC,OAAN,CAAclJ,OAAO,CAACG,IAAtB,CAApE,EAAiG;AAC7F,YAAI,KAAK,CAAL,KAAWH,OAAO,CAACX,IAAvB,EAA6B;AACzBW,UAAAA,OAAO,CAACG,IAAR,GAAeH,OAAO,CAACG,IAAR,CAAarC,KAAb,CAAmBkC,OAAO,CAACX,IAA3B,CAAf;AACH;;AACD,YAAI,KAAK,CAAL,KAAWW,OAAO,CAACV,IAAvB,EAA6B;AACzBU,UAAAA,OAAO,CAACG,IAAR,GAAeH,OAAO,CAACG,IAAR,CAAarC,KAAb,CAAmB,CAAnB,EAAsBkC,OAAO,CAACV,IAA9B,CAAf;AACH;AACJ;AACJ,KA1WE;AA2WH0C,IAAAA,qBAAqB,EAAE,UAASmH,SAAT,EAAoB;AACvC,WAAK/H,cAAL,CAAoB0E,IAApB,CAAyBqD,SAAzB;AACH,KA7WE;AA8WHjH,IAAAA,gBAAgB,EAAE,UAAS0G,KAAT,EAAgB;AAC9B,WAAKvH,SAAL,CAAeyE,IAAf,CAAoB8C,KAApB;AACA,WAAKzH,OAAL,CAAa2E,IAAb,CAAkB;AACdsD,QAAAA,UAAU,EAAE,WADE;AAEdR,QAAAA,KAAK,EAAEA;AAFO,OAAlB;AAIH,KApXE;AAqXHnH,IAAAA,kBAAkB,EAAE,UAAS4H,IAAT,EAAe;AAC/B,UAAI9I,IAAI,GAAG,IAAX;AACA,UAAI+I,iBAAJ;AACA,UAAIjJ,UAAU,GAAGE,IAAI,CAACC,WAAtB;AACA,UAAI2I,SAAS,GAAG,KAAhB;AACA,UAAI3D,UAAU,GAAGjF,IAAI,CAACiF,UAAL,EAAjB;AACAjF,MAAAA,IAAI,CAACG,WAAL,GAAmB,CAAC8E,UAAD,IAAe,CAACjF,IAAI,CAACgJ,QAAL,EAAhB,IAAmC/D,UAAU,GAAGjF,IAAI,CAACgJ,QAAL,EAAnE;;AACA,UAAIhJ,IAAI,CAACG,WAAT,EAAsB;AAClBH,QAAAA,IAAI,CAACK,YAAL,GAAoB,IAApB;AACH;;AACD,UAAIP,UAAU,CAAC4E,UAAX,MAA2B,CAA/B,EAAkC;AAC9B,YAAI5E,UAAU,CAACjB,SAAX,MAA0BmB,IAAI,CAACiJ,SAAL,EAA9B,EAAgD;AAC5CnJ,UAAAA,UAAU,CAACjB,SAAX,CAAqBmB,IAAI,CAACiJ,SAAL,KAAmB,CAAxC;AACAjJ,UAAAA,IAAI,CAACnB,SAAL,CAAeiB,UAAU,CAACjB,SAAX,EAAf;AACAmB,UAAAA,IAAI,CAACiD,eAAL;AACAnD,UAAAA,UAAU,CAACkH,IAAX;AACA4B,UAAAA,SAAS,GAAG,IAAZ;AACH;AACJ,OARD,MAQO;AACH,YAAI,CAACE,IAAD,IAAS,CAAC,GAAGrM,KAAK,CAAC2C,SAAV,EAAqB0J,IAAI,CAACD,UAA1B,CAAb,EAAoD;AAChDE,UAAAA,iBAAiB,GAAGjJ,UAAU,CAACjB,SAAX,KAAyBmB,IAAI,CAACgJ,QAAL,EAAzB,GAA2C/D,UAA/D;AACAjF,UAAAA,IAAI,CAACM,kBAAL,GAA0B4I,IAAI,CAACC,GAAL,CAASnJ,IAAI,CAACM,kBAAd,EAAkCyI,iBAAlC,CAA1B;;AACA,cAAI,MAAM9D,UAAN,IAAoBnF,UAAU,CAACjB,SAAX,MAA0BmB,IAAI,CAACiJ,SAAL,EAAlD,EAAoE;AAChEnJ,YAAAA,UAAU,CAACjB,SAAX,CAAqBmB,IAAI,CAACiJ,SAAL,KAAmB,CAAxC;;AACA,gBAAI,eAAejJ,IAAI,CAAC4E,MAAL,CAAY,gBAAZ,CAAnB,EAAkD;AAC9C9E,cAAAA,UAAU,CAACkH,IAAX;AACA4B,cAAAA,SAAS,GAAG,IAAZ;AACH;AACJ;AACJ;AACJ;;AACD,UAAI,CAACA,SAAL,EAAgB;AACZ5I,QAAAA,IAAI,CAACoJ,eAAL,GAAuBpJ,IAAI,CAACQ,mBAA5B;AACAR,QAAAA,IAAI,CAACQ,mBAAL,GAA2B,EAA3B;AACAR,QAAAA,IAAI,CAACqJ,SAAL,CAAeC,YAAf,GAA8B,EAA9B;AACAtJ,QAAAA,IAAI,CAACY,OAAL,CAAa2E,IAAb,CAAkBuD,IAAlB;AACA9I,QAAAA,IAAI,CAACqJ,SAAL,CAAeC,YAAf,GAA8B,KAAK,CAAnC;AACH;AACJ,KA3ZE;AA4ZHC,IAAAA,4BAA4B,EAAE,UAASC,QAAT,EAAmB;AAC7C,UAAIxJ,IAAI,GAAG,IAAX;AACAA,MAAAA,IAAI,CAACyJ,gBAAL,GAAwB,IAAxB;AACAD,MAAAA,QAAQ,CAACvC,MAAT,CAAgB,YAAW;AACvBjH,QAAAA,IAAI,CAACyJ,gBAAL,GAAwB,KAAxB;AACH,OAFD;AAGH,KAlaE;AAmaHC,IAAAA,qBAAqB,EAAE,YAAW;AAC9B,aAAO,KAAKhD,sBAAZ;AACH,KAraE;AAsaH1I,IAAAA,cAAc,EAAE,YAAW;AACvB,aAAO,KAAKoL,eAAZ;AACH,KAxaE;AAyaHtL,IAAAA,eAAe,EAAE,YAAW;AACxB,aAAO,KAAKqF,gBAAL,IAAyB,EAAhC;AACH,KA3aE;AA4aH/C,IAAAA,UAAU,EAAE,YAAW;AACnB,aAAO,KAAKD,WAAZ;AACH,KA9aE;AA+aHuE,IAAAA,UAAU,EAAE,YAAW;AACnB,aAAOiF,QAAQ,CAAC,CAAC,KAAKrJ,kBAAL,IAA2B,KAAKL,WAAL,CAAiByE,UAAjB,EAA5B,IAA6D,KAAKhE,eAAnE,CAAf;AACH,KAjbE;AAkbHuE,IAAAA,UAAU,EAAE,YAAW;AACnB,aAAO,KAAKhF,WAAL,CAAiB5C,KAAjB,GAAyBI,MAAhC;AACH,KApbE;AAqbHmM,IAAAA,eAAe,EAAE,YAAW;AACxB,aAAO,KAAKlF,UAAL,EAAP;AACH,KAvbE;AAwbHsE,IAAAA,QAAQ,EAAE,YAAW;AACjB,UAAIlJ,UAAU,GAAG,KAAKG,WAAtB;;AACA,UAAI,CAACsC,SAAS,CAAC9E,MAAX,IAAqB,CAACqC,UAAU,CAAC+C,QAAX,EAA1B,EAAiD;AAC7C,eAAO,CAAP;AACH;;AACD,aAAO/C,UAAU,CAACkJ,QAAX,CAAoB1G,KAApB,CAA0BxC,UAA1B,EAAsCyC,SAAtC,CAAP;AACH,KA9bE;AA+bH0G,IAAAA,SAAS,EAAE,YAAW;AAClB,UAAIjJ,IAAI,GAAG,IAAX;;AACA,UAAI6J,KAAK,GAAG7J,IAAI,CAAC4J,eAAL,KAAyB5J,IAAI,CAACU,eAA1C;;AACA,UAAIsI,QAAQ,GAAGhJ,IAAI,CAACgJ,QAAL,EAAf;;AACA,UAAIA,QAAQ,IAAIa,KAAK,GAAG,CAAxB,EAA2B;AACvB,eAAOX,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYD,IAAI,CAACY,IAAL,CAAUD,KAAK,GAAGb,QAAlB,CAAZ,CAAP;AACH;;AACD,aAAO,CAAP;AACH,KAvcE;AAwcHe,IAAAA,gBAAgB,EAAE,YAAW;AACzB,aAAO,KAAK1J,YAAL,IAAqB,KAAKJ,WAAL,CAAiByE,UAAjB,MAAiC,CAA7D;AACH,KA1cE;AA2cHsF,IAAAA,aAAa,EAAE,UAASnM,WAAT,EAAsBoE,KAAtB,EAA6B;AACxC,UAAInC,UAAU,GAAG,KAAKG,WAAtB;AACA,UAAIgK,CAAC,GAAG,IAAInN,SAAS,CAACwL,QAAd,EAAR;;AACA,UAAI,CAACxI,UAAL,EAAiB;AACb;AACH;;AACDmC,MAAAA,KAAK,GAAGA,KAAK,IAAInC,UAAU,CAACmC,KAAX,EAAjB;AACAA,MAAAA,KAAK,CAAC+E,IAAN,CAAWnJ,WAAX,EAAwBgJ,IAAxB,CAA6B,UAASjH,IAAT,EAAe0H,KAAf,EAAsB;AAC/C,YAAI1H,IAAI,IAAI,CAAC8I,KAAK,CAACC,OAAN,CAAc/I,IAAd,CAAT,IAAgC8I,KAAK,CAACC,OAAN,CAAc/I,IAAI,CAACA,IAAnB,CAApC,EAA8D;AAC1D0H,UAAAA,KAAK,GAAG1H,IAAR;AACAA,UAAAA,IAAI,GAAGA,IAAI,CAACA,IAAZ;AACH;;AACDqK,QAAAA,CAAC,CAACC,OAAF,CAAUtK,IAAV,EAAgB0H,KAAhB;AACH,OAND,EAMGJ,IANH,CAMQ+C,CAAC,CAAC1B,MANV;AAOA,aAAO0B,CAAP;AACH,KA1dE;AA2dH7D,IAAAA,eAAe,EAAE,YAAW;AACxB,aAAO,CAAC,CAAC,KAAKqD,gBAAd;AACH,KA7dE;AA8dHzC,IAAAA,IAAI,EAAE,UAASvH,OAAT,EAAkB;AACpB,UAAI0K,MAAM,GAAG,IAAb;;AACA,UAAInK,IAAI,GAAG,IAAX;AACA,UAAIF,UAAU,GAAGE,IAAI,CAACC,WAAtB;AACA,UAAIgK,CAAC,GAAG,IAAInN,SAAS,CAACwL,QAAd,EAAR;;AACA,UAAI7I,OAAJ,EAAa;AACT,YAAIwC,KAAK,GAAGnC,UAAU,CAACmC,KAAX,EAAZ;AACA,YAAImI,qBAAqB,GAAGtK,UAAU,CAACjC,WAAX,EAA5B;AACA,YAAIwM,UAAU,GAAG;AACbnE,UAAAA,gBAAgB,EAAEzG,OADL;AAEb2G,UAAAA,eAAe,EAAE;AAFJ,SAAjB;AAIA,SAAC,GAAG1J,SAAS,CAACwF,IAAd,EAAoBD,KAAK,CAACqI,kBAAN,MAA8B,EAAlD,EAAsD,UAASC,CAAT,EAAY7C,UAAZ,EAAwB;AAC1E,cAAI,EAAEA,UAAU,IAAI2C,UAAU,CAACnE,gBAA3B,CAAJ,EAAkD;AAC9CmE,YAAAA,UAAU,CAACnE,gBAAX,CAA4BwB,UAA5B,IAA0C0C,qBAAqB,CAAC1C,UAAD,CAA/D;AACH;AACJ,SAJD;AAKA,aAAK/G,aAAL,GAAqBlB,OAAO,CAAC+K,YAA7B;;AACAxK,QAAAA,IAAI,CAACuJ,4BAAL,CAAkCU,CAAlC;;AACAnK,QAAAA,UAAU,CAAC2K,sBAAX,CAAkCR,CAAlC;;AACAjK,QAAAA,IAAI,CAACqB,kBAAL,CAAwBgJ,UAAxB;;AACApL,QAAAA,WAAW,CAAC,YAAW;AACnB,cAAI,CAACa,UAAU,CAACmC,KAAX,EAAL,EAAyB;AACrB,mBAAOgI,CAAC,CAAC1B,MAAF,CAAS,UAAT,CAAP;AACH;;AAAA,WAAC,GAAGzL,SAAS,CAAC6J,IAAd,EAAoB0D,UAAU,CAACzK,IAAX,IAAmBI,IAAI,CAACgK,aAAL,CAAmBK,UAAU,CAACnE,gBAA9B,CAAvC,EAAwFW,IAAxF,CAA6F,UAASjH,IAAT,EAAe0H,KAAf,EAAsB;AAChH+C,YAAAA,UAAU,CAACzK,IAAX,GAAkBA,IAAlB;AACAyK,YAAAA,UAAU,CAAC/C,KAAX,GAAmBA,KAAK,IAAI,EAA5B;;AACAtH,YAAAA,IAAI,CAACuB,iBAAL,CAAuB8I,UAAvB;;AACA,gBAAI5K,OAAO,CAACgI,iBAAR,IAA6B,KAAK,CAAL,KAAW4C,UAAU,CAAC/C,KAAX,CAAiB5C,UAA7D,EAAyE;AACrE2F,cAAAA,UAAU,CAAC/C,KAAX,CAAiB5C,UAAjB,GAA8BzC,KAAK,CAACyC,UAAN,CAAiB2F,UAAU,CAACnE,gBAA5B,CAA9B;AACH;;AAAA,aAAC,GAAGpJ,SAAS,CAAC6J,IAAd,EAAoB0D,UAAU,CAACzK,IAA/B,EAAqCyK,UAAU,CAAC/C,KAAX,CAAiB5C,UAAtD,EAAkEmC,IAAlE,CAAuE,UAASjH,IAAT,EAAe8E,UAAf,EAA2B;AAC/F2F,cAAAA,UAAU,CAAC/C,KAAX,CAAiB5C,UAAjB,GAA8BA,UAA9B;AACAuF,cAAAA,CAAC,CAACC,OAAF,CAAUtK,IAAV,EAAgByK,UAAU,CAAC/C,KAA3B;AACH,aAHA,EAGEJ,IAHF,CAGO+C,CAAC,CAAC1B,MAHT;AAIJ,WAVA,EAUErB,IAVF,CAUO+C,CAAC,CAAC1B,MAVT;AAWJ,SAdU,EAcRvI,IAAI,CAAC4E,MAAL,CAAY,gBAAZ,CAdQ,CAAX;AAeA,eAAOqF,CAAC,CAAC/C,IAAF,CAAO,YAAW;AACrBlH,UAAAA,IAAI,CAACS,eAAL,CAAqBiK,SAArB,CAA+B,WAA/B,EAA4CnI,SAA5C;AACH,SAFM,EAEJ0E,MAFI,CAEG,YAAW;AACjBkD,UAAAA,MAAM,CAACxJ,aAAP,GAAuB,KAAvB;AACH,SAJM,EAIJgK,OAJI,EAAP;AAKH,OApCD,MAoCO;AACH,eAAO7K,UAAU,CAACkH,IAAX,EAAP;AACH;AACJ,KA1gBE;AA2gBH/I,IAAAA,MAAM,EAAE,UAAS2M,IAAT,EAAe;AACnB,aAAOA,IAAI,GAAG,KAAK3K,WAAL,CAAiBhC,MAAjB,EAAH,GAA+B,KAAKgC,WAAL,CAAiB+G,IAAjB,EAA1C;AACH,KA7gBE;AA8gBH6D,IAAAA,kBAAkB,EAAE,YAAW;AAC3B,aAAO,KAAK9H,gBAAZ;AACH;AAhhBE,GAAP;AAkhBH,CAhlBsD,EAAxC,CAAf;;AAilBA7G,OAAO,CAACC,OAAR,GAAkBc,QAAlB;AACA6N,MAAM,CAAC5O,OAAP,GAAiBA,OAAO,CAACC,OAAzB","sourcesContent":["/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.data_source_adapter.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _callbacks = _interopRequireDefault(require(\"../../core/utils/callbacks\"));\r\nvar _uiData_grid = _interopRequireDefault(require(\"../data_grid/ui.data_grid.core\"));\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _array_store = _interopRequireDefault(require(\"../../data/array_store\"));\r\nvar _array_utils = require(\"../../data/array_utils\");\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar _default = _uiData_grid.default.Controller.inherit(function() {\r\n    function cloneItems(items, groupCount) {\r\n        if (items) {\r\n            items = items.slice(0);\r\n            if (groupCount) {\r\n                for (var i = 0; i < items.length; i++) {\r\n                    items[i] = (0, _extend.extend)({\r\n                        key: items[i].key\r\n                    }, items[i]);\r\n                    items[i].items = cloneItems(items[i].items, groupCount - 1)\r\n                }\r\n            }\r\n        }\r\n        return items\r\n    }\r\n\r\n    function calculateOperationTypes(loadOptions, lastLoadOptions, isFullReload) {\r\n        var operationTypes = {\r\n            reload: true,\r\n            fullReload: true\r\n        };\r\n        if (lastLoadOptions) {\r\n            operationTypes = {\r\n                sorting: !_uiData_grid.default.equalSortParameters(loadOptions.sort, lastLoadOptions.sort),\r\n                grouping: !_uiData_grid.default.equalSortParameters(loadOptions.group, lastLoadOptions.group, true),\r\n                groupExpanding: !_uiData_grid.default.equalSortParameters(loadOptions.group, lastLoadOptions.group) || lastLoadOptions.groupExpand,\r\n                filtering: !_uiData_grid.default.equalFilterParameters(loadOptions.filter, lastLoadOptions.filter),\r\n                pageIndex: loadOptions.pageIndex !== lastLoadOptions.pageIndex,\r\n                skip: loadOptions.skip !== lastLoadOptions.skip,\r\n                take: loadOptions.take !== lastLoadOptions.take,\r\n                fullReload: isFullReload\r\n            };\r\n            operationTypes.reload = isFullReload || operationTypes.sorting || operationTypes.grouping || operationTypes.filtering;\r\n            operationTypes.paging = operationTypes.pageIndex || operationTypes.take\r\n        }\r\n        return operationTypes\r\n    }\r\n\r\n    function executeTask(action, timeout) {\r\n        if ((0, _type.isDefined)(timeout)) {\r\n            (0, _common.executeAsync)(action, timeout)\r\n        } else {\r\n            action()\r\n        }\r\n    }\r\n\r\n    function createEmptyPagesData() {\r\n        return {\r\n            pages: {}\r\n        }\r\n    }\r\n\r\n    function getPageDataFromCache(options) {\r\n        return options.cachedPagesData.pages[options.pageIndex]\r\n    }\r\n\r\n    function setPageDataToCache(options, data) {\r\n        var pageIndex = options.pageIndex;\r\n        if (void 0 !== pageIndex) {\r\n            options.cachedPagesData.pages[pageIndex] = data\r\n        }\r\n    }\r\n    return {\r\n        init: function(dataSource, remoteOperations) {\r\n            var that = this;\r\n            that._dataSource = dataSource;\r\n            that._remoteOperations = remoteOperations || {};\r\n            that._isLastPage = !dataSource.isLastPage();\r\n            that._hasLastPage = false;\r\n            that._currentTotalCount = 0;\r\n            that._cachedPagesData = createEmptyPagesData();\r\n            that._lastOperationTypes = {};\r\n            that._eventsStrategy = dataSource._eventsStrategy;\r\n            that._skipCorrection = 0;\r\n            that._isLoadingAll = false;\r\n            that.changed = (0, _callbacks.default)();\r\n            that.loadingChanged = (0, _callbacks.default)();\r\n            that.loadError = (0, _callbacks.default)();\r\n            that.customizeStoreLoadOptions = (0, _callbacks.default)();\r\n            that.changing = (0, _callbacks.default)();\r\n            that._dataChangedHandler = that._handleDataChanged.bind(that);\r\n            that._dataLoadingHandler = that._handleDataLoading.bind(that);\r\n            that._dataLoadedHandler = that._handleDataLoaded.bind(that);\r\n            that._loadingChangedHandler = that._handleLoadingChanged.bind(that);\r\n            that._loadErrorHandler = that._handleLoadError.bind(that);\r\n            that._pushHandler = that._handlePush.bind(that);\r\n            that._changingHandler = that._handleChanging.bind(that);\r\n            dataSource.on(\"changed\", that._dataChangedHandler);\r\n            dataSource.on(\"customizeStoreLoadOptions\", that._dataLoadingHandler);\r\n            dataSource.on(\"customizeLoadResult\", that._dataLoadedHandler);\r\n            dataSource.on(\"loadingChanged\", that._loadingChangedHandler);\r\n            dataSource.on(\"loadError\", that._loadErrorHandler);\r\n            dataSource.on(\"changing\", that._changingHandler);\r\n            dataSource.store().on(\"push\", that._pushHandler);\r\n            (0, _iterator.each)(dataSource, function(memberName, member) {\r\n                if (!that[memberName] && (0, _type.isFunction)(member)) {\r\n                    that[memberName] = function() {\r\n                        return this._dataSource[memberName].apply(this._dataSource, arguments)\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        remoteOperations: function() {\r\n            return this._remoteOperations\r\n        },\r\n        dispose: function(isSharedDataSource) {\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            var store = dataSource.store();\r\n            dataSource.off(\"changed\", that._dataChangedHandler);\r\n            dataSource.off(\"customizeStoreLoadOptions\", that._dataLoadingHandler);\r\n            dataSource.off(\"customizeLoadResult\", that._dataLoadedHandler);\r\n            dataSource.off(\"loadingChanged\", that._loadingChangedHandler);\r\n            dataSource.off(\"loadError\", that._loadErrorHandler);\r\n            dataSource.off(\"changing\", that._changingHandler);\r\n            store && store.off(\"push\", that._pushHandler);\r\n            if (!isSharedDataSource) {\r\n                dataSource.dispose()\r\n            }\r\n        },\r\n        refresh: function(options, operationTypes) {\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            if (operationTypes.reload) {\r\n                that.resetCurrentTotalCount();\r\n                that._isLastPage = !dataSource.paginate();\r\n                that._hasLastPage = that._isLastPage\r\n            }\r\n        },\r\n        resetCurrentTotalCount: function() {\r\n            this._currentTotalCount = 0;\r\n            this._skipCorrection = 0\r\n        },\r\n        resetCache: function() {\r\n            this._cachedStoreData = void 0;\r\n            this._cachedPagingData = void 0\r\n        },\r\n        resetPagesCache: function() {\r\n            this._cachedPagesData = createEmptyPagesData()\r\n        },\r\n        _needClearStoreDataCache: function() {\r\n            var remoteOperations = this.remoteOperations();\r\n            var operationTypes = calculateOperationTypes(this._lastLoadOptions || {}, {});\r\n            var isLocalOperations = Object.keys(remoteOperations).every(function(operationName) {\r\n                return !operationTypes[operationName] || !remoteOperations[operationName]\r\n            });\r\n            return !isLocalOperations\r\n        },\r\n        push: function(changes, fromStore) {\r\n            var store = this.store();\r\n            if (this._needClearStoreDataCache()) {\r\n                this._cachedStoreData = void 0\r\n            }\r\n            this._cachedPagingData = void 0;\r\n            this.resetPagesCache(true);\r\n            if (this._cachedStoreData) {\r\n                (0, _array_utils.applyBatch)({\r\n                    keyInfo: store,\r\n                    data: this._cachedStoreData,\r\n                    changes: changes\r\n                })\r\n            }\r\n            if (!fromStore) {\r\n                this._applyBatch(changes)\r\n            }\r\n        },\r\n        getDataIndexGetter: function() {\r\n            var _this = this;\r\n            if (!this._dataIndexGetter) {\r\n                var indexByKey;\r\n                var storeData;\r\n                var store = this.store();\r\n                this._dataIndexGetter = function(data) {\r\n                    var isCacheUpdated = storeData && storeData !== _this._cachedStoreData;\r\n                    if (!indexByKey || isCacheUpdated) {\r\n                        storeData = _this._cachedStoreData || [];\r\n                        indexByKey = {};\r\n                        for (var i = 0; i < storeData.length; i++) {\r\n                            indexByKey[(0, _common.getKeyHash)(store.keyOf(storeData[i]))] = i\r\n                        }\r\n                    }\r\n                    return indexByKey[(0, _common.getKeyHash)(store.keyOf(data))]\r\n                }\r\n            }\r\n            return this._dataIndexGetter\r\n        },\r\n        _getKeyInfo: function() {\r\n            return this.store()\r\n        },\r\n        _applyBatch: function(changes) {\r\n            var _this2 = this;\r\n            var keyInfo = this._getKeyInfo();\r\n            var dataSource = this._dataSource;\r\n            var groupCount = _uiData_grid.default.normalizeSortingInfo(this.group()).length;\r\n            var totalCount = this.totalCount();\r\n            var isVirtualMode = \"virtual\" === this.option(\"scrolling.mode\");\r\n            changes = changes.filter(function(change) {\r\n                return !dataSource.paginate() || \"insert\" !== change.type || void 0 !== change.index\r\n            });\r\n            var getItemCount = function() {\r\n                return groupCount ? _this2.itemsCount() : _this2._items.length\r\n            };\r\n            var oldItemCount = getItemCount();\r\n            (0, _array_utils.applyBatch)({\r\n                keyInfo: keyInfo,\r\n                data: this._items,\r\n                changes: changes,\r\n                groupCount: groupCount,\r\n                useInsertIndex: true\r\n            });\r\n            (0, _array_utils.applyBatch)({\r\n                keyInfo: keyInfo,\r\n                data: dataSource.items(),\r\n                changes: changes,\r\n                groupCount: groupCount,\r\n                useInsertIndex: true\r\n            });\r\n            if (this._currentTotalCount > 0 || isVirtualMode && totalCount === oldItemCount) {\r\n                this._skipCorrection += getItemCount() - oldItemCount\r\n            }\r\n            changes.splice(0, changes.length)\r\n        },\r\n        _handlePush: function(changes) {\r\n            this.push(changes, true)\r\n        },\r\n        _handleChanging: function(e) {\r\n            this.changing.fire(e);\r\n            this._applyBatch(e.changes)\r\n        },\r\n        _needCleanCacheByOperation: function(operationType, remoteOperations) {\r\n            var operationTypesByOrder = [\"filtering\", \"sorting\", \"paging\"];\r\n            var operationTypeIndex = operationTypesByOrder.indexOf(operationType);\r\n            var currentOperationTypes = operationTypeIndex >= 0 ? operationTypesByOrder.slice(operationTypeIndex) : [operationType];\r\n            return currentOperationTypes.some(function(operationType) {\r\n                return remoteOperations[operationType]\r\n            })\r\n        },\r\n        _customizeRemoteOperations: function(options, operationTypes) {\r\n            var that = this;\r\n            var cachedStoreData = that._cachedStoreData;\r\n            var cachedPagingData = that._cachedPagingData;\r\n            var cachedPagesData = that._cachedPagesData;\r\n            if (options.storeLoadOptions.filter && !options.remoteOperations.filtering || options.storeLoadOptions.sort && !options.remoteOperations.sorting) {\r\n                options.remoteOperations = {\r\n                    filtering: options.remoteOperations.filtering\r\n                }\r\n            }\r\n            if (operationTypes.fullReload) {\r\n                cachedStoreData = void 0;\r\n                cachedPagingData = void 0;\r\n                cachedPagesData = createEmptyPagesData()\r\n            } else {\r\n                if (operationTypes.reload) {\r\n                    cachedPagingData = void 0;\r\n                    cachedPagesData = createEmptyPagesData()\r\n                } else {\r\n                    if (operationTypes.take || operationTypes.groupExpanding) {\r\n                        cachedPagesData = createEmptyPagesData()\r\n                    }\r\n                }(0, _iterator.each)(operationTypes, function(operationType, value) {\r\n                    if (value && that._needCleanCacheByOperation(operationType, options.remoteOperations)) {\r\n                        cachedStoreData = void 0;\r\n                        cachedPagingData = void 0\r\n                    }\r\n                })\r\n            }\r\n            if (cachedPagingData) {\r\n                options.remoteOperations.paging = false\r\n            }\r\n            options.cachedStoreData = cachedStoreData;\r\n            options.cachedPagingData = cachedPagingData;\r\n            options.cachedPagesData = cachedPagesData;\r\n            if (!options.isCustomLoading) {\r\n                that._cachedStoreData = cachedStoreData;\r\n                that._cachedPagingData = cachedPagingData;\r\n                that._cachedPagesData = cachedPagesData\r\n            }\r\n        },\r\n        _handleDataLoading: function(options) {\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            var lastLoadOptions = that._lastLoadOptions;\r\n            that.customizeStoreLoadOptions.fire(options);\r\n            options.delay = this.option(\"loadingTimeout\");\r\n            options.originalStoreLoadOptions = options.storeLoadOptions;\r\n            options.remoteOperations = (0, _extend.extend)({}, this.remoteOperations());\r\n            var isFullReload = !that.isLoaded() && !that._isRefreshing;\r\n            if (that.option(\"integrationOptions.renderedOnServer\") && !that.isLoaded()) {\r\n                options.delay = void 0\r\n            }\r\n            var loadOptions = (0, _extend.extend)({\r\n                pageIndex: that.pageIndex()\r\n            }, options.storeLoadOptions);\r\n            var operationTypes = calculateOperationTypes(loadOptions, lastLoadOptions, isFullReload);\r\n            that._customizeRemoteOperations(options, operationTypes);\r\n            if (!options.isCustomLoading) {\r\n                var isRefreshing = that._isRefreshing;\r\n                options.pageIndex = dataSource.pageIndex();\r\n                options.lastLoadOptions = loadOptions;\r\n                options.operationTypes = operationTypes;\r\n                that._loadingOperationTypes = operationTypes;\r\n                that._isRefreshing = true;\r\n                (0, _deferred.when)(isRefreshing || that._isRefreshed || that.refresh(options, operationTypes)).done(function() {\r\n                    if (that._lastOperationId === options.operationId) {\r\n                        that._isRefreshed = true;\r\n                        that.load().always(function() {\r\n                            that._isRefreshed = false\r\n                        })\r\n                    }\r\n                }).fail(function() {\r\n                    dataSource.cancel(options.operationId)\r\n                }).always(function() {\r\n                    that._isRefreshing = false\r\n                });\r\n                dataSource.cancel(that._lastOperationId);\r\n                that._lastOperationId = options.operationId;\r\n                if (that._isRefreshing) {\r\n                    dataSource.cancel(that._lastOperationId)\r\n                }\r\n            }\r\n            this._handleDataLoadingCore(options)\r\n        },\r\n        _handleDataLoadingCore: function(options) {\r\n            var remoteOperations = options.remoteOperations;\r\n            options.loadOptions = {};\r\n            var cachedExtra = options.cachedPagesData.extra;\r\n            var localLoadOptionNames = {\r\n                filter: !remoteOperations.filtering,\r\n                sort: !remoteOperations.sorting,\r\n                group: !remoteOperations.grouping,\r\n                summary: !remoteOperations.summary,\r\n                skip: !remoteOperations.paging,\r\n                take: !remoteOperations.paging,\r\n                requireTotalCount: cachedExtra && \"totalCount\" in cachedExtra || !remoteOperations.paging\r\n            };\r\n            (0, _iterator.each)(options.storeLoadOptions, function(optionName, optionValue) {\r\n                if (localLoadOptionNames[optionName]) {\r\n                    options.loadOptions[optionName] = optionValue;\r\n                    delete options.storeLoadOptions[optionName]\r\n                }\r\n            });\r\n            if (cachedExtra) {\r\n                options.extra = cachedExtra\r\n            }\r\n            options.data = getPageDataFromCache(options) || options.cachedStoreData\r\n        },\r\n        _handleDataLoaded: function(options) {\r\n            var _this3 = this;\r\n            var loadOptions = options.loadOptions;\r\n            var localPaging = options.remoteOperations && !options.remoteOperations.paging;\r\n            var cachedPagesData = options.cachedPagesData;\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var needCache = false !== this.option(\"cacheEnabled\") && storeLoadOptions;\r\n            var needPageCache = needCache && !options.isCustomLoading && cachedPagesData && (!localPaging || storeLoadOptions.group) && !this.option(\"legacyRendering\");\r\n            var needPagingCache = needCache && localPaging;\r\n            var needStoreCache = needPagingCache && !options.isCustomLoading;\r\n            if (!loadOptions) {\r\n                this._dataSource.cancel(options.operationId);\r\n                return\r\n            }\r\n            if (options.lastLoadOptions) {\r\n                this._lastLoadOptions = options.lastLoadOptions;\r\n                Object.keys(options.operationTypes).forEach(function(operationType) {\r\n                    _this3._lastOperationTypes[operationType] = _this3._lastOperationTypes[operationType] || options.operationTypes[operationType]\r\n                })\r\n            }\r\n            if (localPaging) {\r\n                options.skip = loadOptions.skip;\r\n                options.take = loadOptions.take;\r\n                delete loadOptions.skip;\r\n                delete loadOptions.take\r\n            }\r\n            if (loadOptions.group) {\r\n                loadOptions.group = options.group || loadOptions.group\r\n            }\r\n            var groupCount = _uiData_grid.default.normalizeSortingInfo(storeLoadOptions.group || loadOptions.group).length;\r\n            if (!needPageCache || !getPageDataFromCache(options)) {\r\n                if (needPagingCache && options.cachedPagingData) {\r\n                    options.data = cloneItems(options.cachedPagingData, groupCount)\r\n                } else {\r\n                    if (needStoreCache) {\r\n                        if (!this._cachedStoreData) {\r\n                            this._cachedStoreData = cloneItems(options.data, _uiData_grid.default.normalizeSortingInfo(storeLoadOptions.group).length)\r\n                        } else {\r\n                            if (options.mergeStoreLoadData) {\r\n                                options.data = this._cachedStoreData = this._cachedStoreData.concat(options.data)\r\n                            }\r\n                        }\r\n                    }\r\n                    new _array_store.default(options.data).load(loadOptions).done(function(data) {\r\n                        options.data = data;\r\n                        if (needStoreCache) {\r\n                            _this3._cachedPagingData = cloneItems(options.data, groupCount)\r\n                        }\r\n                    }).fail(function(error) {\r\n                        options.data = (new _deferred.Deferred).reject(error)\r\n                    })\r\n                }\r\n                if (loadOptions.requireTotalCount && localPaging) {\r\n                    options.extra = (0, _type.isPlainObject)(options.extra) ? options.extra : {};\r\n                    options.extra.totalCount = options.data.length\r\n                }\r\n                if (options.extra && options.extra.totalCount >= 0 && (false === storeLoadOptions.requireTotalCount || false === loadOptions.requireTotalCount)) {\r\n                    options.extra.totalCount = -1\r\n                }\r\n                this._handleDataLoadedCore(options);\r\n                if (needPageCache) {\r\n                    cachedPagesData.extra = cachedPagesData.extra || (0, _extend.extend)({}, options.extra);\r\n                    (0, _deferred.when)(options.data).done(function(data) {\r\n                        setPageDataToCache(options, cloneItems(data, groupCount))\r\n                    })\r\n                }\r\n            }\r\n            options.storeLoadOptions = options.originalStoreLoadOptions\r\n        },\r\n        _handleDataLoadedCore: function(options) {\r\n            if (options.remoteOperations && !options.remoteOperations.paging && Array.isArray(options.data)) {\r\n                if (void 0 !== options.skip) {\r\n                    options.data = options.data.slice(options.skip)\r\n                }\r\n                if (void 0 !== options.take) {\r\n                    options.data = options.data.slice(0, options.take)\r\n                }\r\n            }\r\n        },\r\n        _handleLoadingChanged: function(isLoading) {\r\n            this.loadingChanged.fire(isLoading)\r\n        },\r\n        _handleLoadError: function(error) {\r\n            this.loadError.fire(error);\r\n            this.changed.fire({\r\n                changeType: \"loadError\",\r\n                error: error\r\n            })\r\n        },\r\n        _handleDataChanged: function(args) {\r\n            var that = this;\r\n            var currentTotalCount;\r\n            var dataSource = that._dataSource;\r\n            var isLoading = false;\r\n            var itemsCount = that.itemsCount();\r\n            that._isLastPage = !itemsCount || !that.pageSize() || itemsCount < that.pageSize();\r\n            if (that._isLastPage) {\r\n                that._hasLastPage = true\r\n            }\r\n            if (dataSource.totalCount() >= 0) {\r\n                if (dataSource.pageIndex() >= that.pageCount()) {\r\n                    dataSource.pageIndex(that.pageCount() - 1);\r\n                    that.pageIndex(dataSource.pageIndex());\r\n                    that.resetPagesCache();\r\n                    dataSource.load();\r\n                    isLoading = true\r\n                }\r\n            } else {\r\n                if (!args || (0, _type.isDefined)(args.changeType)) {\r\n                    currentTotalCount = dataSource.pageIndex() * that.pageSize() + itemsCount;\r\n                    that._currentTotalCount = Math.max(that._currentTotalCount, currentTotalCount);\r\n                    if (0 === itemsCount && dataSource.pageIndex() >= that.pageCount()) {\r\n                        dataSource.pageIndex(that.pageCount() - 1);\r\n                        if (\"infinite\" !== that.option(\"scrolling.mode\")) {\r\n                            dataSource.load();\r\n                            isLoading = true\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (!isLoading) {\r\n                that._operationTypes = that._lastOperationTypes;\r\n                that._lastOperationTypes = {};\r\n                that.component._optionCache = {};\r\n                that.changed.fire(args);\r\n                that.component._optionCache = void 0\r\n            }\r\n        },\r\n        _scheduleCustomLoadCallbacks: function(deferred) {\r\n            var that = this;\r\n            that._isCustomLoading = true;\r\n            deferred.always(function() {\r\n                that._isCustomLoading = false\r\n            })\r\n        },\r\n        loadingOperationTypes: function() {\r\n            return this._loadingOperationTypes\r\n        },\r\n        operationTypes: function() {\r\n            return this._operationTypes\r\n        },\r\n        lastLoadOptions: function() {\r\n            return this._lastLoadOptions || {}\r\n        },\r\n        isLastPage: function() {\r\n            return this._isLastPage\r\n        },\r\n        totalCount: function() {\r\n            return parseInt((this._currentTotalCount || this._dataSource.totalCount()) + this._skipCorrection)\r\n        },\r\n        itemsCount: function() {\r\n            return this._dataSource.items().length\r\n        },\r\n        totalItemsCount: function() {\r\n            return this.totalCount()\r\n        },\r\n        pageSize: function() {\r\n            var dataSource = this._dataSource;\r\n            if (!arguments.length && !dataSource.paginate()) {\r\n                return 0\r\n            }\r\n            return dataSource.pageSize.apply(dataSource, arguments)\r\n        },\r\n        pageCount: function() {\r\n            var that = this;\r\n            var count = that.totalItemsCount() - that._skipCorrection;\r\n            var pageSize = that.pageSize();\r\n            if (pageSize && count > 0) {\r\n                return Math.max(1, Math.ceil(count / pageSize))\r\n            }\r\n            return 1\r\n        },\r\n        hasKnownLastPage: function() {\r\n            return this._hasLastPage || this._dataSource.totalCount() >= 0\r\n        },\r\n        loadFromStore: function(loadOptions, store) {\r\n            var dataSource = this._dataSource;\r\n            var d = new _deferred.Deferred;\r\n            if (!dataSource) {\r\n                return\r\n            }\r\n            store = store || dataSource.store();\r\n            store.load(loadOptions).done(function(data, extra) {\r\n                if (data && !Array.isArray(data) && Array.isArray(data.data)) {\r\n                    extra = data;\r\n                    data = data.data\r\n                }\r\n                d.resolve(data, extra)\r\n            }).fail(d.reject);\r\n            return d\r\n        },\r\n        isCustomLoading: function() {\r\n            return !!this._isCustomLoading\r\n        },\r\n        load: function(options) {\r\n            var _this4 = this;\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            var d = new _deferred.Deferred;\r\n            if (options) {\r\n                var store = dataSource.store();\r\n                var dataSourceLoadOptions = dataSource.loadOptions();\r\n                var loadResult = {\r\n                    storeLoadOptions: options,\r\n                    isCustomLoading: true\r\n                };\r\n                (0, _iterator.each)(store._customLoadOptions() || [], function(_, optionName) {\r\n                    if (!(optionName in loadResult.storeLoadOptions)) {\r\n                        loadResult.storeLoadOptions[optionName] = dataSourceLoadOptions[optionName]\r\n                    }\r\n                });\r\n                this._isLoadingAll = options.isLoadingAll;\r\n                that._scheduleCustomLoadCallbacks(d);\r\n                dataSource._scheduleLoadCallbacks(d);\r\n                that._handleDataLoading(loadResult);\r\n                executeTask(function() {\r\n                    if (!dataSource.store()) {\r\n                        return d.reject(\"canceled\")\r\n                    }(0, _deferred.when)(loadResult.data || that.loadFromStore(loadResult.storeLoadOptions)).done(function(data, extra) {\r\n                        loadResult.data = data;\r\n                        loadResult.extra = extra || {};\r\n                        that._handleDataLoaded(loadResult);\r\n                        if (options.requireTotalCount && void 0 === loadResult.extra.totalCount) {\r\n                            loadResult.extra.totalCount = store.totalCount(loadResult.storeLoadOptions)\r\n                        }(0, _deferred.when)(loadResult.data, loadResult.extra.totalCount).done(function(data, totalCount) {\r\n                            loadResult.extra.totalCount = totalCount;\r\n                            d.resolve(data, loadResult.extra)\r\n                        }).fail(d.reject)\r\n                    }).fail(d.reject)\r\n                }, that.option(\"loadingTimeout\"));\r\n                return d.fail(function() {\r\n                    that._eventsStrategy.fireEvent(\"loadError\", arguments)\r\n                }).always(function() {\r\n                    _this4._isLoadingAll = false\r\n                }).promise()\r\n            } else {\r\n                return dataSource.load()\r\n            }\r\n        },\r\n        reload: function(full) {\r\n            return full ? this._dataSource.reload() : this._dataSource.load()\r\n        },\r\n        getCachedStoreData: function() {\r\n            return this._cachedStoreData\r\n        }\r\n    }\r\n}());\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}