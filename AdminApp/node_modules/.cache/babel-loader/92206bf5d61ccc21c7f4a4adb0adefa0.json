{"ast":null,"code":"/**\r\n * DevExtreme (ui/data_grid/ui.data_grid.focus.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _uiData_grid = _interopRequireDefault(require(\"./ui.data_grid.core\"));\n\nvar _uiGrid_core = _interopRequireDefault(require(\"../grid_core/ui.grid_core.focus\"));\n\nvar _deferred = require(\"../../core/utils/deferred\");\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _common = require(\"../../core/utils/common\");\n\nvar _uiData_grid2 = require(\"./ui.data_grid.utils\");\n\nvar _data = require(\"../../core/utils/data\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\n_uiData_grid.default.registerModule(\"focus\", (0, _extend.extend)(true, {}, _uiGrid_core.default, {\n  extenders: {\n    controllers: {\n      data: {\n        changeRowExpand: function (path, isRowClick) {\n          if (this.option(\"focusedRowEnabled\") && Array.isArray(path) && this.isRowExpanded(path)) {\n            var keyboardNavigation = this.getController(\"keyboardNavigation\");\n\n            if ((!isRowClick || !keyboardNavigation.isKeyboardEnabled()) && this._isFocusedRowInsideGroup(path)) {\n              this.option(\"focusedRowKey\", path);\n            }\n          }\n\n          return this.callBase.apply(this, arguments);\n        },\n        _isFocusedRowInsideGroup: function (path) {\n          var columnsController = this.getController(\"columns\");\n          var focusedRowKey = this.option(\"focusedRowKey\");\n          var rowIndex = this.getRowIndexByKey(focusedRowKey);\n          var focusedRow = rowIndex >= 0 && this.getVisibleRows()[rowIndex];\n          var groups = columnsController.getGroupDataSourceParameters(true);\n\n          if (focusedRow) {\n            for (var i = 0; i < path.length; ++i) {\n              var getter = (0, _data.compileGetter)(groups[i] && groups[i].selector);\n\n              if (getter(focusedRow.data) !== path[i]) {\n                return false;\n              }\n            }\n          }\n\n          return true;\n        },\n        _getGroupPath: function (group) {\n          var groupPath = [group.key];\n          var items = group.items;\n\n          while (items && items[0]) {\n            var item = items[0];\n\n            if (void 0 !== item.key) {\n              groupPath.push(item.key);\n            }\n\n            items = item.items;\n          }\n\n          return groupPath;\n        },\n        _expandGroupByPath: function (that, groupPath, level) {\n          var d = new _deferred.Deferred();\n          level++;\n          that.expandRow(groupPath.slice(0, level)).done(function () {\n            if (level === groupPath.length) {\n              d.resolve();\n            } else {\n              that._expandGroupByPath(that, groupPath, level).done(d.resolve).fail(d.reject);\n            }\n          }).fail(d.reject);\n          return d.promise();\n        },\n        _calculateGlobalRowIndexByGroupedData: function (key) {\n          var that = this;\n          var dataSource = that._dataSource;\n\n          var filter = that._generateFilterByKey(key);\n\n          var deferred = new _deferred.Deferred();\n          var isGroupKey = Array.isArray(key);\n          var group = dataSource.group();\n\n          if (isGroupKey) {\n            return deferred.resolve(-1).promise();\n          }\n\n          if (!dataSource._grouping._updatePagingOptions) {\n            that._calculateGlobalRowIndexByFlatData(key, null, true).done(deferred.resolve).fail(deferred.reject);\n\n            return deferred;\n          }\n\n          dataSource.load({\n            filter: that._concatWithCombinedFilter(filter),\n            group: group\n          }).done(function (data) {\n            if (!data || 0 === data.length || !(0, _type.isDefined)(data[0].key) || data[0].key === -1) {\n              return deferred.resolve(-1).promise();\n            }\n\n            var groupPath = that._getGroupPath(data[0]);\n\n            that._expandGroupByPath(that, groupPath, 0).done(function () {\n              that._calculateExpandedRowGlobalIndex(deferred, key, groupPath, group);\n            }).fail(deferred.reject);\n          }).fail(deferred.reject);\n          return deferred.promise();\n        },\n        _calculateExpandedRowGlobalIndex: function (deferred, key, groupPath, group) {\n          var groupFilter = (0, _uiData_grid2.createGroupFilter)(groupPath, {\n            group: group\n          });\n          var dataSource = this._dataSource;\n          var scrollingMode = this.option(\"scrolling.mode\");\n          var isVirtualScrolling = \"virtual\" === scrollingMode || \"infinite\" === scrollingMode;\n          var pageSize = dataSource.pageSize();\n          var groupOffset;\n\n          dataSource._grouping._updatePagingOptions({\n            skip: 0,\n            take: MAX_SAFE_INTEGER\n          }, function (groupInfo, totalOffset) {\n            if ((0, _common.equalByValue)(groupInfo.path, groupPath)) {\n              groupOffset = totalOffset;\n            }\n          });\n\n          this._calculateGlobalRowIndexByFlatData(key, groupFilter).done(function (dataOffset) {\n            var count;\n            var groupContinuationCount;\n\n            if (dataOffset < 0) {\n              deferred.resolve(-1);\n              return;\n            }\n\n            var currentPageOffset = groupOffset % pageSize || pageSize;\n            count = currentPageOffset + dataOffset - groupPath.length;\n\n            if (isVirtualScrolling) {\n              groupContinuationCount = 0;\n            } else {\n              groupContinuationCount = Math.floor(count / (pageSize - groupPath.length)) * groupPath.length;\n            }\n\n            count = groupOffset + dataOffset + groupContinuationCount;\n            deferred.resolve(count);\n          }).fail(deferred.reject);\n        }\n      }\n    }\n  }\n}));","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/node_modules/devextreme/ui/data_grid/ui.data_grid.focus.js"],"names":["_uiData_grid","_interopRequireDefault","require","_uiGrid_core","_deferred","_type","_common","_uiData_grid2","_data","_extend","obj","__esModule","MAX_SAFE_INTEGER","Number","default","registerModule","extend","extenders","controllers","data","changeRowExpand","path","isRowClick","option","Array","isArray","isRowExpanded","keyboardNavigation","getController","isKeyboardEnabled","_isFocusedRowInsideGroup","callBase","apply","arguments","columnsController","focusedRowKey","rowIndex","getRowIndexByKey","focusedRow","getVisibleRows","groups","getGroupDataSourceParameters","i","length","getter","compileGetter","selector","_getGroupPath","group","groupPath","key","items","item","push","_expandGroupByPath","that","level","d","Deferred","expandRow","slice","done","resolve","fail","reject","promise","_calculateGlobalRowIndexByGroupedData","dataSource","_dataSource","filter","_generateFilterByKey","deferred","isGroupKey","_grouping","_updatePagingOptions","_calculateGlobalRowIndexByFlatData","load","_concatWithCombinedFilter","isDefined","_calculateExpandedRowGlobalIndex","groupFilter","createGroupFilter","scrollingMode","isVirtualScrolling","pageSize","groupOffset","skip","take","groupInfo","totalOffset","equalByValue","dataOffset","count","groupContinuationCount","currentPageOffset","Math","floor"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/data_grid/ui.data_grid.focus.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _uiData_grid = _interopRequireDefault(require(\"./ui.data_grid.core\"));\r\nvar _uiGrid_core = _interopRequireDefault(require(\"../grid_core/ui.grid_core.focus\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _common = require(\"../../core/utils/common\");\r\nvar _uiData_grid2 = require(\"./ui.data_grid.utils\");\r\nvar _data = require(\"../../core/utils/data\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\r\n_uiData_grid.default.registerModule(\"focus\", (0, _extend.extend)(true, {}, _uiGrid_core.default, {\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                changeRowExpand: function(path, isRowClick) {\r\n                    if (this.option(\"focusedRowEnabled\") && Array.isArray(path) && this.isRowExpanded(path)) {\r\n                        var keyboardNavigation = this.getController(\"keyboardNavigation\");\r\n                        if ((!isRowClick || !keyboardNavigation.isKeyboardEnabled()) && this._isFocusedRowInsideGroup(path)) {\r\n                            this.option(\"focusedRowKey\", path)\r\n                        }\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _isFocusedRowInsideGroup: function(path) {\r\n                    var columnsController = this.getController(\"columns\");\r\n                    var focusedRowKey = this.option(\"focusedRowKey\");\r\n                    var rowIndex = this.getRowIndexByKey(focusedRowKey);\r\n                    var focusedRow = rowIndex >= 0 && this.getVisibleRows()[rowIndex];\r\n                    var groups = columnsController.getGroupDataSourceParameters(true);\r\n                    if (focusedRow) {\r\n                        for (var i = 0; i < path.length; ++i) {\r\n                            var getter = (0, _data.compileGetter)(groups[i] && groups[i].selector);\r\n                            if (getter(focusedRow.data) !== path[i]) {\r\n                                return false\r\n                            }\r\n                        }\r\n                    }\r\n                    return true\r\n                },\r\n                _getGroupPath: function(group) {\r\n                    var groupPath = [group.key];\r\n                    var items = group.items;\r\n                    while (items && items[0]) {\r\n                        var item = items[0];\r\n                        if (void 0 !== item.key) {\r\n                            groupPath.push(item.key)\r\n                        }\r\n                        items = item.items\r\n                    }\r\n                    return groupPath\r\n                },\r\n                _expandGroupByPath: function(that, groupPath, level) {\r\n                    var d = new _deferred.Deferred;\r\n                    level++;\r\n                    that.expandRow(groupPath.slice(0, level)).done(function() {\r\n                        if (level === groupPath.length) {\r\n                            d.resolve()\r\n                        } else {\r\n                            that._expandGroupByPath(that, groupPath, level).done(d.resolve).fail(d.reject)\r\n                        }\r\n                    }).fail(d.reject);\r\n                    return d.promise()\r\n                },\r\n                _calculateGlobalRowIndexByGroupedData: function(key) {\r\n                    var that = this;\r\n                    var dataSource = that._dataSource;\r\n                    var filter = that._generateFilterByKey(key);\r\n                    var deferred = new _deferred.Deferred;\r\n                    var isGroupKey = Array.isArray(key);\r\n                    var group = dataSource.group();\r\n                    if (isGroupKey) {\r\n                        return deferred.resolve(-1).promise()\r\n                    }\r\n                    if (!dataSource._grouping._updatePagingOptions) {\r\n                        that._calculateGlobalRowIndexByFlatData(key, null, true).done(deferred.resolve).fail(deferred.reject);\r\n                        return deferred\r\n                    }\r\n                    dataSource.load({\r\n                        filter: that._concatWithCombinedFilter(filter),\r\n                        group: group\r\n                    }).done(function(data) {\r\n                        if (!data || 0 === data.length || !(0, _type.isDefined)(data[0].key) || data[0].key === -1) {\r\n                            return deferred.resolve(-1).promise()\r\n                        }\r\n                        var groupPath = that._getGroupPath(data[0]);\r\n                        that._expandGroupByPath(that, groupPath, 0).done(function() {\r\n                            that._calculateExpandedRowGlobalIndex(deferred, key, groupPath, group)\r\n                        }).fail(deferred.reject)\r\n                    }).fail(deferred.reject);\r\n                    return deferred.promise()\r\n                },\r\n                _calculateExpandedRowGlobalIndex: function(deferred, key, groupPath, group) {\r\n                    var groupFilter = (0, _uiData_grid2.createGroupFilter)(groupPath, {\r\n                        group: group\r\n                    });\r\n                    var dataSource = this._dataSource;\r\n                    var scrollingMode = this.option(\"scrolling.mode\");\r\n                    var isVirtualScrolling = \"virtual\" === scrollingMode || \"infinite\" === scrollingMode;\r\n                    var pageSize = dataSource.pageSize();\r\n                    var groupOffset;\r\n                    dataSource._grouping._updatePagingOptions({\r\n                        skip: 0,\r\n                        take: MAX_SAFE_INTEGER\r\n                    }, function(groupInfo, totalOffset) {\r\n                        if ((0, _common.equalByValue)(groupInfo.path, groupPath)) {\r\n                            groupOffset = totalOffset\r\n                        }\r\n                    });\r\n                    this._calculateGlobalRowIndexByFlatData(key, groupFilter).done(function(dataOffset) {\r\n                        var count;\r\n                        var groupContinuationCount;\r\n                        if (dataOffset < 0) {\r\n                            deferred.resolve(-1);\r\n                            return\r\n                        }\r\n                        var currentPageOffset = groupOffset % pageSize || pageSize;\r\n                        count = currentPageOffset + dataOffset - groupPath.length;\r\n                        if (isVirtualScrolling) {\r\n                            groupContinuationCount = 0\r\n                        } else {\r\n                            groupContinuationCount = Math.floor(count / (pageSize - groupPath.length)) * groupPath.length\r\n                        }\r\n                        count = groupOffset + dataOffset + groupContinuationCount;\r\n                        deferred.resolve(count)\r\n                    }).fail(deferred.reject)\r\n                }\r\n            }\r\n        }\r\n    }\r\n}));\r\n"]},"metadata":{},"sourceType":"script"}