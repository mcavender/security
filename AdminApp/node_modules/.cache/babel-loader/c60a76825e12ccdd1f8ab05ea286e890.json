{"ast":null,"code":"/**\r\n * DevExtreme (ui/sortable.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _renderer = _interopRequireDefault(require(\"../core/renderer\"));\n\nvar _events_engine = _interopRequireDefault(require(\"../events/core/events_engine\"));\n\nvar _component_registrator = _interopRequireDefault(require(\"../core/component_registrator\"));\n\nvar _extend = require(\"../core/utils/extend\");\n\nvar _draggable = _interopRequireDefault(require(\"./draggable\"));\n\nvar _element = require(\"../core/element\");\n\nvar _window = require(\"../core/utils/window\");\n\nvar _position = require(\"../core/utils/position\");\n\nvar _translator = require(\"../animation/translator\");\n\nvar _fx = _interopRequireDefault(require(\"../animation/fx\"));\n\nvar _deferred = require(\"../core/utils/deferred\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar window = (0, _window.getWindow)();\nvar SORTABLE = \"dxSortable\";\nvar PLACEHOLDER_CLASS = \"placeholder\";\nvar CLONE_CLASS = \"clone\";\n\nvar isElementVisible = function (itemElement) {\n  return (0, _renderer.default)(itemElement).is(\":visible\");\n};\n\nvar animate = function (element, config) {\n  var _config$to, _config$to2;\n\n  if (!element) {\n    return;\n  }\n\n  var left = (null === (_config$to = config.to) || void 0 === _config$to ? void 0 : _config$to.left) || 0;\n  var top = (null === (_config$to2 = config.to) || void 0 === _config$to2 ? void 0 : _config$to2.top) || 0;\n  element.style.transform = \"translate(\".concat(left, \"px,\").concat(top, \"px)\");\n  element.style.transition = _fx.default.off ? \"\" : \"transform \".concat(config.duration, \"ms \").concat(config.easing);\n};\n\nvar stopAnimation = function (element) {\n  if (!element) {\n    return;\n  }\n\n  element.style.transform = \"\";\n  element.style.transition = \"\";\n};\n\nfunction getScrollableBoundary($scrollable) {\n  var offset = $scrollable.offset();\n  var style = $scrollable[0].style;\n  var paddingLeft = parseFloat(style.paddingLeft) || 0;\n  var paddingRight = parseFloat(style.paddingRight) || 0;\n  var paddingTop = parseFloat(style.paddingTop) || 0;\n  var width = $scrollable[0].clientWidth - (paddingLeft + paddingRight);\n  var height = $scrollable.height();\n  var left = offset.left + paddingLeft;\n  var top = offset.top + paddingTop;\n  return {\n    left: left,\n    right: left + width,\n    top: top,\n    bottom: top + height\n  };\n}\n\nvar Sortable = _draggable.default.inherit({\n  _init: function () {\n    this.callBase();\n    this._sourceScrollHandler = this._handleSourceScroll.bind(this);\n    this._sourceScrollableInfo = null;\n  },\n  _getDefaultOptions: function () {\n    return (0, _extend.extend)(this.callBase(), {\n      clone: true,\n      filter: \"> *\",\n      itemOrientation: \"vertical\",\n      dropFeedbackMode: \"push\",\n      allowDropInsideItem: false,\n      allowReordering: true,\n      moveItemOnDrop: false,\n      onDragChange: null,\n      onAdd: null,\n      onRemove: null,\n      onReorder: null,\n      onPlaceholderPrepared: null,\n      animation: {\n        type: \"slide\",\n        duration: 300,\n        easing: \"ease\"\n      },\n      fromIndex: null,\n      toIndex: null,\n      dropInsideItem: false,\n      itemPoints: null,\n      fromIndexOffset: 0,\n      offset: 0,\n      autoUpdate: false,\n      draggableElementSize: 0\n    });\n  },\n  reset: function () {\n    this.option({\n      dropInsideItem: false,\n      toIndex: null,\n      fromIndex: null,\n      itemPoints: null,\n      fromIndexOffset: 0,\n      draggableElementSize: 0\n    });\n\n    if (this._$placeholderElement) {\n      this._$placeholderElement.remove();\n    }\n\n    this._$placeholderElement = null;\n\n    if (!this._isIndicateMode() && this._$modifiedItem) {\n      this._$modifiedItem.css(\"marginBottom\", this._modifiedItemMargin);\n\n      this._$modifiedItem = null;\n    }\n  },\n  _getPrevVisibleItem: function (items, index) {\n    return items.slice(0, index).reverse().filter(isElementVisible)[0];\n  },\n  _dragStartHandler: function (e) {\n    this.callBase.apply(this, arguments);\n\n    if (true === e.cancel) {\n      return;\n    }\n\n    var $sourceElement = this._getSourceElement();\n\n    this._updateItemPoints();\n\n    this._subscribeToSourceScroll(e);\n\n    this.option(\"fromIndex\", this._getElementIndex($sourceElement));\n    this.option(\"fromIndexOffset\", this.option(\"offset\"));\n  },\n  _dragEndHandler: function () {\n    this.callBase.apply(this, arguments);\n\n    this._unsubscribeFromSourceScroll();\n  },\n  _subscribeToSourceScroll: function (e) {\n    var $scrollable = this._getScrollable((0, _renderer.default)(e.target));\n\n    if ($scrollable) {\n      this._sourceScrollableInfo = {\n        element: $scrollable,\n        scrollLeft: $scrollable.scrollLeft(),\n        scrollTop: $scrollable.scrollTop()\n      };\n\n      _events_engine.default.on($scrollable, \"scroll\", this._sourceScrollHandler);\n    }\n  },\n  _unsubscribeFromSourceScroll: function () {\n    if (this._sourceScrollableInfo) {\n      _events_engine.default.off(this._sourceScrollableInfo.element, \"scroll\", this._sourceScrollHandler);\n\n      this._sourceScrollableInfo = null;\n    }\n  },\n  _handleSourceScroll: function (e) {\n    var _this = this;\n\n    var sourceScrollableInfo = this._sourceScrollableInfo;\n\n    if (sourceScrollableInfo) {\n      [\"scrollLeft\", \"scrollTop\"].forEach(function (scrollProp) {\n        if (e.target[scrollProp] !== sourceScrollableInfo[scrollProp]) {\n          var scrollBy = e.target[scrollProp] - sourceScrollableInfo[scrollProp];\n\n          _this._correctItemPoints(scrollBy);\n\n          sourceScrollableInfo[scrollProp] = e.target[scrollProp];\n        }\n      });\n    }\n  },\n  _dragEnterHandler: function () {\n    this.callBase.apply(this, arguments);\n\n    if (this === this._getSourceDraggable()) {\n      return;\n    }\n\n    this._updateItemPoints();\n\n    this.option(\"fromIndex\", -1);\n\n    if (!this._isIndicateMode()) {\n      var itemPoints = this.option(\"itemPoints\");\n      var lastItemPoint = itemPoints[itemPoints.length - 1];\n\n      if (lastItemPoint) {\n        var $element = this.$element();\n\n        var $sourceElement = this._getSourceElement();\n\n        var isVertical = this._isVerticalOrientation();\n\n        var sourceElementSize = isVertical ? $sourceElement.outerHeight(true) : $sourceElement.outerWidth(true);\n        var scrollSize = $element.get(0)[isVertical ? \"scrollHeight\" : \"scrollWidth\"];\n        var scrollPosition = $element.get(0)[isVertical ? \"scrollTop\" : \"scrollLeft\"];\n        var positionProp = isVertical ? \"top\" : \"left\";\n        var lastPointPosition = lastItemPoint[positionProp];\n        var elementPosition = $element.offset()[positionProp];\n        var freeSize = elementPosition + scrollSize - scrollPosition - lastPointPosition;\n\n        if (freeSize < sourceElementSize) {\n          if (isVertical) {\n            var items = this._getItems();\n\n            var $lastItem = (0, _renderer.default)(this._getPrevVisibleItem(items));\n            this._$modifiedItem = $lastItem;\n            this._modifiedItemMargin = $lastItem.get(0).style.marginBottom;\n            $lastItem.css(\"marginBottom\", sourceElementSize - freeSize);\n            var $sortable = $lastItem.closest(\".dx-sortable\");\n            var sortable = $sortable.data(\"dxScrollable\") || $sortable.data(\"dxScrollView\");\n            sortable && sortable.update();\n          }\n        }\n      }\n    }\n  },\n  dragEnter: function () {\n    if (this !== this._getTargetDraggable()) {\n      this.option(\"toIndex\", -1);\n    }\n  },\n  dragLeave: function () {\n    if (this !== this._getTargetDraggable()) {\n      this.option(\"toIndex\", this.option(\"fromIndex\"));\n    }\n  },\n  _isInsideTargetDraggable: function (event) {\n    var $targetDraggable = this._getTargetDraggable().$element();\n\n    var $scrollable = this._getScrollable($targetDraggable);\n\n    if ($scrollable) {\n      var _getScrollableBoundar = getScrollableBoundary($scrollable),\n          left = _getScrollableBoundar.left,\n          right = _getScrollableBoundar.right,\n          top = _getScrollableBoundar.top,\n          bottom = _getScrollableBoundar.bottom;\n\n      var validX = left <= event.pageX && event.pageX <= right;\n      var validY = top <= event.pageY && event.pageY <= bottom;\n      return validY && validX;\n    }\n\n    return true;\n  },\n  dragEnd: function (sourceEvent) {\n    var $sourceElement = this._getSourceElement();\n\n    var sourceDraggable = this._getSourceDraggable();\n\n    var isSourceDraggable = sourceDraggable.NAME !== this.NAME;\n    var toIndex = this.option(\"toIndex\");\n\n    var isInsideTargetDraggable = this._isInsideTargetDraggable(sourceEvent.event);\n\n    if (null !== toIndex && toIndex >= 0 && isInsideTargetDraggable) {\n      var cancelAdd;\n      var cancelRemove;\n\n      if (sourceDraggable !== this) {\n        cancelAdd = this._fireAddEvent(sourceEvent);\n\n        if (!cancelAdd) {\n          cancelRemove = this._fireRemoveEvent(sourceEvent);\n        }\n      }\n\n      if (isSourceDraggable) {\n        (0, _translator.resetPosition)($sourceElement);\n      }\n\n      if (this.option(\"moveItemOnDrop\")) {\n        !cancelAdd && this._moveItem($sourceElement, toIndex, cancelRemove);\n      }\n\n      if (sourceDraggable === this) {\n        return this._fireReorderEvent(sourceEvent);\n      }\n    }\n\n    return new _deferred.Deferred().resolve();\n  },\n  dragMove: function (e) {\n    var itemPoints = this.option(\"itemPoints\");\n\n    if (!itemPoints) {\n      return;\n    }\n\n    var isVertical = this._isVerticalOrientation();\n\n    var axisName = isVertical ? \"top\" : \"left\";\n    var cursorPosition = isVertical ? e.pageY : e.pageX;\n    var rtlEnabled = this.option(\"rtlEnabled\");\n    var itemPoint;\n\n    for (var i = itemPoints.length - 1; i >= 0; i--) {\n      var centerPosition = itemPoints[i + 1] && (itemPoints[i][axisName] + itemPoints[i + 1][axisName]) / 2;\n\n      if ((!isVertical && rtlEnabled ? cursorPosition > centerPosition : centerPosition > cursorPosition) || void 0 === centerPosition) {\n        itemPoint = itemPoints[i];\n      } else {\n        break;\n      }\n    }\n\n    if (itemPoint) {\n      this._updatePlaceholderPosition(e, itemPoint);\n\n      if (this._verticalScrollHelper.isScrolling() && this._isIndicateMode()) {\n        this._movePlaceholder();\n      }\n    }\n  },\n  _isIndicateMode: function () {\n    return \"indicate\" === this.option(\"dropFeedbackMode\") || this.option(\"allowDropInsideItem\");\n  },\n  _createPlaceholder: function () {\n    var $placeholderContainer;\n\n    if (this._isIndicateMode()) {\n      $placeholderContainer = (0, _renderer.default)(\"<div>\").addClass(this._addWidgetPrefix(PLACEHOLDER_CLASS)).insertBefore(this._getSourceDraggable()._$dragElement);\n    }\n\n    this._$placeholderElement = $placeholderContainer;\n    return $placeholderContainer;\n  },\n  _getItems: function () {\n    var itemsSelector = this._getItemsSelector();\n\n    return this._$content().find(itemsSelector).not(\".\" + this._addWidgetPrefix(PLACEHOLDER_CLASS)).not(\".\" + this._addWidgetPrefix(CLONE_CLASS)).toArray();\n  },\n  _allowReordering: function () {\n    var sourceDraggable = this._getSourceDraggable();\n\n    var targetDraggable = this._getTargetDraggable();\n\n    return sourceDraggable !== targetDraggable || this.option(\"allowReordering\");\n  },\n  _isValidPoint: function (visibleIndex, draggableVisibleIndex, dropInsideItem) {\n    var allowDropInsideItem = this.option(\"allowDropInsideItem\");\n\n    var allowReordering = dropInsideItem || this._allowReordering();\n\n    if (!allowReordering && (0 !== visibleIndex || !allowDropInsideItem)) {\n      return false;\n    }\n\n    if (!this._isIndicateMode()) {\n      return true;\n    }\n\n    return draggableVisibleIndex === -1 || visibleIndex !== draggableVisibleIndex && (dropInsideItem || visibleIndex !== draggableVisibleIndex + 1);\n  },\n  _getItemPoints: function () {\n    var that = this;\n    var result = [];\n    var $item;\n    var offset;\n    var itemWidth;\n    var rtlEnabled = that.option(\"rtlEnabled\");\n\n    var isVertical = that._isVerticalOrientation();\n\n    var itemElements = that._getItems();\n\n    var visibleItemElements = itemElements.filter(isElementVisible);\n    var visibleItemCount = visibleItemElements.length;\n\n    var $draggableItem = this._getDraggableElement();\n\n    var draggableVisibleIndex = visibleItemElements.indexOf($draggableItem.get(0));\n\n    if (visibleItemCount) {\n      for (var i = 0; i <= visibleItemCount; i++) {\n        var needCorrectLeftPosition = !isVertical && rtlEnabled ^ i === visibleItemCount;\n        var needCorrectTopPosition = isVertical && i === visibleItemCount;\n\n        if (i < visibleItemCount) {\n          $item = (0, _renderer.default)(visibleItemElements[i]);\n          offset = $item.offset();\n          itemWidth = $item.outerWidth();\n        }\n\n        result.push({\n          dropInsideItem: false,\n          left: offset.left + (needCorrectLeftPosition ? itemWidth : 0),\n          top: offset.top + (needCorrectTopPosition ? result[i - 1].height : 0),\n          index: i === visibleItemCount ? itemElements.length : itemElements.indexOf($item.get(0)),\n          $item: $item,\n          width: $item.outerWidth(),\n          height: $item.outerHeight(),\n          isValid: that._isValidPoint(i, draggableVisibleIndex)\n        });\n      }\n\n      if (this.option(\"allowDropInsideItem\")) {\n        var points = result;\n        result = [];\n\n        for (var _i = 0; _i < points.length; _i++) {\n          result.push(points[_i]);\n\n          if (points[_i + 1]) {\n            result.push((0, _extend.extend)({}, points[_i], {\n              dropInsideItem: true,\n              top: Math.floor((points[_i].top + points[_i + 1].top) / 2),\n              left: Math.floor((points[_i].left + points[_i + 1].left) / 2),\n              isValid: this._isValidPoint(_i, draggableVisibleIndex, true)\n            }));\n          }\n        }\n      }\n    } else {\n      result.push({\n        dropInsideItem: false,\n        index: 0,\n        isValid: true\n      });\n    }\n\n    return result;\n  },\n  _updateItemPoints: function (forceUpdate) {\n    if (forceUpdate || this.option(\"autoUpdate\") || !this.option(\"itemPoints\")) {\n      this.option(\"itemPoints\", this._getItemPoints());\n    }\n  },\n  _correctItemPoints: function (scrollBy) {\n    var itemPoints = this.option(\"itemPoints\");\n\n    if (scrollBy && itemPoints && !this.option(\"autoUpdate\")) {\n      var isVertical = this._isVerticalOrientation();\n\n      var positionPropName = isVertical ? \"top\" : \"left\";\n      itemPoints.forEach(function (itemPoint) {\n        itemPoint[positionPropName] -= scrollBy;\n      });\n    }\n  },\n  _getElementIndex: function ($itemElement) {\n    return this._getItems().indexOf($itemElement.get(0));\n  },\n  _getDragTemplateArgs: function ($element) {\n    var args = this.callBase.apply(this, arguments);\n    args.model.fromIndex = this._getElementIndex($element);\n    return args;\n  },\n  _togglePlaceholder: function (value) {\n    this._$placeholderElement && this._$placeholderElement.toggle(value);\n  },\n  _isVerticalOrientation: function () {\n    return \"vertical\" === this.option(\"itemOrientation\");\n  },\n  _normalizeToIndex: function (toIndex, dropInsideItem) {\n    var isAnotherDraggable = this._getSourceDraggable() !== this._getTargetDraggable();\n\n    var fromIndex = this.option(\"fromIndex\");\n\n    if (null === toIndex) {\n      return fromIndex;\n    }\n\n    return Math.max(isAnotherDraggable || fromIndex >= toIndex || dropInsideItem ? toIndex : toIndex - 1, 0);\n  },\n  _updatePlaceholderPosition: function (e, itemPoint) {\n    var sourceDraggable = this._getSourceDraggable();\n\n    var toIndex = this._normalizeToIndex(itemPoint.index, itemPoint.dropInsideItem);\n\n    var eventArgs = (0, _extend.extend)(this._getEventArgs(e), {\n      toIndex: toIndex,\n      dropInsideItem: itemPoint.dropInsideItem\n    });\n    itemPoint.isValid && this._getAction(\"onDragChange\")(eventArgs);\n\n    if (eventArgs.cancel || !itemPoint.isValid) {\n      if (!itemPoint.isValid) {\n        this.option({\n          dropInsideItem: false,\n          toIndex: null\n        });\n      }\n\n      return;\n    }\n\n    this.option({\n      dropInsideItem: itemPoint.dropInsideItem,\n      toIndex: itemPoint.index\n    });\n\n    this._getAction(\"onPlaceholderPrepared\")((0, _extend.extend)(this._getEventArgs(e), {\n      placeholderElement: (0, _element.getPublicElement)(this._$placeholderElement),\n      dragElement: (0, _element.getPublicElement)(sourceDraggable._$dragElement)\n    }));\n\n    this._updateItemPoints();\n  },\n  _makeWidthCorrection: function ($item, width) {\n    this._$scrollable = this._getScrollable($item);\n\n    if (this._$scrollable && this._$scrollable.width() < width) {\n      var scrollableWidth = this._$scrollable.width();\n\n      var offsetLeft = $item.offset().left - this._$scrollable.offset().left;\n\n      var offsetRight = scrollableWidth - $item.outerWidth() - offsetLeft;\n\n      if (offsetLeft > 0) {\n        width = scrollableWidth - offsetLeft;\n      } else {\n        if (offsetRight > 0) {\n          width = scrollableWidth - offsetRight;\n        } else {\n          width = scrollableWidth;\n        }\n      }\n    }\n\n    return width;\n  },\n  _updatePlaceholderSizes: function ($placeholderElement, itemElement) {\n    var that = this;\n    var dropInsideItem = that.option(\"dropInsideItem\");\n    var $item = (0, _renderer.default)(itemElement);\n\n    var isVertical = that._isVerticalOrientation();\n\n    var width = \"\";\n    var height = \"\";\n    $placeholderElement.toggleClass(that._addWidgetPrefix(\"placeholder-inside\"), dropInsideItem);\n\n    if (isVertical || dropInsideItem) {\n      width = $item.outerWidth();\n    }\n\n    if (!isVertical || dropInsideItem) {\n      height = $item.outerHeight();\n    }\n\n    width = that._makeWidthCorrection($item, width);\n    $placeholderElement.css({\n      width: width,\n      height: height\n    });\n  },\n  _moveItem: function ($itemElement, index, cancelRemove) {\n    var $prevTargetItemElement;\n\n    var $itemElements = this._getItems();\n\n    var $targetItemElement = $itemElements[index];\n\n    var sourceDraggable = this._getSourceDraggable();\n\n    if (cancelRemove) {\n      $itemElement = $itemElement.clone();\n\n      sourceDraggable._toggleDragSourceClass(false, $itemElement);\n    }\n\n    if (!$targetItemElement) {\n      $prevTargetItemElement = $itemElements[index - 1];\n    }\n\n    this._moveItemCore($itemElement, $targetItemElement, $prevTargetItemElement);\n  },\n  _moveItemCore: function ($targetItem, item, prevItem) {\n    if (!item && !prevItem) {\n      $targetItem.appendTo(this.$element());\n    } else {\n      if (prevItem) {\n        $targetItem.insertAfter((0, _renderer.default)(prevItem));\n      } else {\n        $targetItem.insertBefore((0, _renderer.default)(item));\n      }\n    }\n  },\n  _getDragStartArgs: function (e, $itemElement) {\n    return (0, _extend.extend)(this.callBase.apply(this, arguments), {\n      fromIndex: this._getElementIndex($itemElement)\n    });\n  },\n  _getEventArgs: function (e) {\n    var sourceDraggable = this._getSourceDraggable();\n\n    var targetDraggable = this._getTargetDraggable();\n\n    var dropInsideItem = targetDraggable.option(\"dropInsideItem\");\n    return (0, _extend.extend)(this.callBase.apply(this, arguments), {\n      fromIndex: sourceDraggable.option(\"fromIndex\"),\n      toIndex: this._normalizeToIndex(targetDraggable.option(\"toIndex\"), dropInsideItem),\n      dropInsideItem: dropInsideItem\n    });\n  },\n  _optionChanged: function (args) {\n    var _this2 = this;\n\n    var name = args.name;\n\n    switch (name) {\n      case \"onDragChange\":\n      case \"onPlaceholderPrepared\":\n      case \"onAdd\":\n      case \"onRemove\":\n      case \"onReorder\":\n        this[\"_\" + name + \"Action\"] = this._createActionByOption(name);\n        break;\n\n      case \"itemOrientation\":\n      case \"allowDropInsideItem\":\n      case \"moveItemOnDrop\":\n      case \"dropFeedbackMode\":\n      case \"itemPoints\":\n      case \"animation\":\n      case \"allowReordering\":\n      case \"fromIndexOffset\":\n      case \"offset\":\n      case \"draggableElementSize\":\n      case \"autoUpdate\":\n        break;\n\n      case \"fromIndex\":\n        [false, true].forEach(function (isDragSource) {\n          var fromIndex = isDragSource ? args.value : args.previousValue;\n\n          if (null !== fromIndex) {\n            var $fromElement = (0, _renderer.default)(_this2._getItems()[fromIndex]);\n\n            _this2._toggleDragSourceClass(isDragSource, $fromElement);\n          }\n        });\n        break;\n\n      case \"dropInsideItem\":\n        this._optionChangedDropInsideItem(args);\n\n        break;\n\n      case \"toIndex\":\n        this._optionChangedToIndex(args);\n\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _optionChangedDropInsideItem: function () {\n    if (this._isIndicateMode() && this._$placeholderElement) {\n      this._movePlaceholder();\n    }\n  },\n  _isPositionVisible: function (position) {\n    var $element = this.$element();\n    var scrollContainer;\n\n    if (\"hidden\" !== $element.css(\"overflow\")) {\n      scrollContainer = $element.get(0);\n    } else {\n      $element.parents().each(function () {\n        if (\"visible\" !== (0, _renderer.default)(this).css(\"overflow\")) {\n          scrollContainer = this;\n          return false;\n        }\n      });\n    }\n\n    if (scrollContainer) {\n      var clientRect = (0, _position.getBoundingRect)(scrollContainer);\n\n      var isVerticalOrientation = this._isVerticalOrientation();\n\n      var start = isVerticalOrientation ? \"top\" : \"left\";\n      var end = isVerticalOrientation ? \"bottom\" : \"right\";\n      var pageOffset = isVerticalOrientation ? window.pageYOffset : window.pageXOffset;\n\n      if (position[start] < clientRect[start] + pageOffset || position[start] > clientRect[end] + pageOffset) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n  _optionChangedToIndex: function (args) {\n    var toIndex = args.value;\n\n    if (this._isIndicateMode()) {\n      var showPlaceholder = null !== toIndex && toIndex >= 0;\n\n      this._togglePlaceholder(showPlaceholder);\n\n      if (showPlaceholder) {\n        this._movePlaceholder();\n      }\n    } else {\n      this._moveItems(args.previousValue, args.value, args.fullUpdate);\n    }\n  },\n  update: function () {\n    if (null === this.option(\"fromIndex\") && null === this.option(\"toIndex\")) {\n      return;\n    }\n\n    this._updateItemPoints(true);\n\n    this._updateDragSourceClass();\n\n    var toIndex = this.option(\"toIndex\");\n\n    this._optionChangedToIndex({\n      value: toIndex,\n      fullUpdate: true\n    });\n  },\n  _updateDragSourceClass: function () {\n    var fromIndex = this._getActualFromIndex();\n\n    var $fromElement = (0, _renderer.default)(this._getItems()[fromIndex]);\n\n    if ($fromElement.length) {\n      this._$sourceElement = $fromElement;\n\n      this._toggleDragSourceClass(true, $fromElement);\n    }\n  },\n  _makeLeftCorrection: function (left, leftMargin) {\n    var that = this;\n    var $scrollable = that._$scrollable;\n\n    if ($scrollable && that._isVerticalOrientation() && $scrollable.scrollLeft() > leftMargin) {\n      left += $scrollable.scrollLeft() - leftMargin;\n    }\n\n    return left;\n  },\n  _movePlaceholder: function () {\n    var that = this;\n\n    var $placeholderElement = that._$placeholderElement || that._createPlaceholder();\n\n    var items = that._getItems();\n\n    var toIndex = that.option(\"toIndex\");\n\n    var isVerticalOrientation = that._isVerticalOrientation();\n\n    var rtlEnabled = this.option(\"rtlEnabled\");\n    var dropInsideItem = that.option(\"dropInsideItem\");\n    var position = null;\n    var leftMargin = 0;\n    var itemElement = items[toIndex];\n\n    if (itemElement) {\n      var $itemElement = (0, _renderer.default)(itemElement);\n      position = $itemElement.offset();\n      leftMargin = parseFloat($itemElement.css(\"marginLeft\"));\n\n      if (!isVerticalOrientation && rtlEnabled && !dropInsideItem) {\n        position.left += $itemElement.outerWidth(true);\n      }\n    } else {\n      var prevVisibleItemElement = itemElement = this._getPrevVisibleItem(items, toIndex);\n\n      if (prevVisibleItemElement) {\n        position = (0, _renderer.default)(prevVisibleItemElement).offset();\n\n        if (isVerticalOrientation) {\n          position.top += (0, _renderer.default)(prevVisibleItemElement).outerHeight(true);\n        } else {\n          if (!rtlEnabled) {\n            position.left += (0, _renderer.default)(prevVisibleItemElement).outerWidth(true);\n          }\n        }\n      }\n    }\n\n    that._updatePlaceholderSizes($placeholderElement, itemElement);\n\n    if (position && !that._isPositionVisible(position)) {\n      position = null;\n    }\n\n    if (position) {\n      position.left = that._makeLeftCorrection(position.left, leftMargin);\n\n      that._move(position, $placeholderElement);\n    }\n\n    $placeholderElement.toggle(!!position);\n  },\n  _getPositions: function (items, elementSize, fromIndex, toIndex) {\n    var positions = [];\n\n    for (var i = 0; i < items.length; i++) {\n      var position = 0;\n\n      if (null === toIndex || null === fromIndex) {\n        positions.push(position);\n        continue;\n      }\n\n      if (fromIndex === -1) {\n        if (i >= toIndex) {\n          position = elementSize;\n        }\n      } else {\n        if (toIndex === -1) {\n          if (i > fromIndex) {\n            position = -elementSize;\n          }\n        } else {\n          if (fromIndex < toIndex) {\n            if (i > fromIndex && i < toIndex) {\n              position = -elementSize;\n            }\n          } else {\n            if (fromIndex > toIndex) {\n              if (i >= toIndex && i < fromIndex) {\n                position = elementSize;\n              }\n            }\n          }\n        }\n      }\n\n      positions.push(position);\n    }\n\n    return positions;\n  },\n  _getDraggableElementSize: function (isVerticalOrientation) {\n    var $draggableItem = this._getDraggableElement();\n\n    var size = this.option(\"draggableElementSize\");\n\n    if (!size) {\n      size = isVerticalOrientation ? ($draggableItem.outerHeight() + $draggableItem.outerHeight(true)) / 2 : ($draggableItem.outerWidth() + $draggableItem.outerWidth(true)) / 2;\n\n      if (!this.option(\"autoUpdate\")) {\n        this.option(\"draggableElementSize\", size);\n      }\n    }\n\n    return size;\n  },\n  _getActualFromIndex: function () {\n    var _this$option = this.option(),\n        fromIndex = _this$option.fromIndex,\n        fromIndexOffset = _this$option.fromIndexOffset,\n        offset = _this$option.offset;\n\n    return null == fromIndex ? null : fromIndex + fromIndexOffset - offset;\n  },\n  _moveItems: function (prevToIndex, toIndex, fullUpdate) {\n    var fromIndex = this._getActualFromIndex();\n\n    var isVerticalOrientation = this._isVerticalOrientation();\n\n    var positionPropName = isVerticalOrientation ? \"top\" : \"left\";\n\n    var elementSize = this._getDraggableElementSize(isVerticalOrientation);\n\n    var items = this._getItems();\n\n    var prevPositions = this._getPositions(items, elementSize, fromIndex, prevToIndex);\n\n    var positions = this._getPositions(items, elementSize, fromIndex, toIndex);\n\n    var animationConfig = this.option(\"animation\");\n    var rtlEnabled = this.option(\"rtlEnabled\");\n\n    for (var i = 0; i < items.length; i++) {\n      var itemElement = items[i];\n      var prevPosition = prevPositions[i];\n      var position = positions[i];\n\n      if (null === toIndex || null === fromIndex) {\n        stopAnimation(itemElement);\n      } else {\n        if (prevPosition !== position || fullUpdate && position) {\n          animate(itemElement, (0, _extend.extend)({}, animationConfig, {\n            to: _defineProperty({}, positionPropName, !isVerticalOrientation && rtlEnabled ? -position : position)\n          }));\n        }\n      }\n    }\n  },\n  _toggleDragSourceClass: function (value, $element) {\n    var $sourceElement = $element || this._$sourceElement;\n    this.callBase.apply(this, arguments);\n\n    if (!this._isIndicateMode()) {\n      $sourceElement && $sourceElement.toggleClass(this._addWidgetPrefix(\"source-hidden\"), value);\n    }\n  },\n  _dispose: function () {\n    this.reset();\n    this.callBase();\n  },\n  _fireAddEvent: function (sourceEvent) {\n    var args = this._getEventArgs(sourceEvent);\n\n    this._getAction(\"onAdd\")(args);\n\n    return args.cancel;\n  },\n  _fireRemoveEvent: function (sourceEvent) {\n    var sourceDraggable = this._getSourceDraggable();\n\n    var args = this._getEventArgs(sourceEvent);\n\n    sourceDraggable._getAction(\"onRemove\")(args);\n\n    return args.cancel;\n  },\n  _fireReorderEvent: function (sourceEvent) {\n    var args = this._getEventArgs(sourceEvent);\n\n    this._getAction(\"onReorder\")(args);\n\n    return args.promise || new _deferred.Deferred().resolve();\n  }\n});\n\n(0, _component_registrator.default)(SORTABLE, Sortable);\nvar _default = Sortable;\nexports.default = _default;\nmodule.exports = exports.default;\nmodule.exports.default = module.exports;","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/node_modules/devextreme/ui/sortable.js"],"names":["exports","default","_renderer","_interopRequireDefault","require","_events_engine","_component_registrator","_extend","_draggable","_element","_window","_position","_translator","_fx","_deferred","obj","__esModule","_defineProperty","key","value","Object","defineProperty","enumerable","configurable","writable","window","getWindow","SORTABLE","PLACEHOLDER_CLASS","CLONE_CLASS","isElementVisible","itemElement","is","animate","element","config","_config$to","_config$to2","left","to","top","style","transform","concat","transition","off","duration","easing","stopAnimation","getScrollableBoundary","$scrollable","offset","paddingLeft","parseFloat","paddingRight","paddingTop","width","clientWidth","height","right","bottom","Sortable","inherit","_init","callBase","_sourceScrollHandler","_handleSourceScroll","bind","_sourceScrollableInfo","_getDefaultOptions","extend","clone","filter","itemOrientation","dropFeedbackMode","allowDropInsideItem","allowReordering","moveItemOnDrop","onDragChange","onAdd","onRemove","onReorder","onPlaceholderPrepared","animation","type","fromIndex","toIndex","dropInsideItem","itemPoints","fromIndexOffset","autoUpdate","draggableElementSize","reset","option","_$placeholderElement","remove","_isIndicateMode","_$modifiedItem","css","_modifiedItemMargin","_getPrevVisibleItem","items","index","slice","reverse","_dragStartHandler","e","apply","arguments","cancel","$sourceElement","_getSourceElement","_updateItemPoints","_subscribeToSourceScroll","_getElementIndex","_dragEndHandler","_unsubscribeFromSourceScroll","_getScrollable","target","scrollLeft","scrollTop","on","_this","sourceScrollableInfo","forEach","scrollProp","scrollBy","_correctItemPoints","_dragEnterHandler","_getSourceDraggable","lastItemPoint","length","$element","isVertical","_isVerticalOrientation","sourceElementSize","outerHeight","outerWidth","scrollSize","get","scrollPosition","positionProp","lastPointPosition","elementPosition","freeSize","_getItems","$lastItem","marginBottom","$sortable","closest","sortable","data","update","dragEnter","_getTargetDraggable","dragLeave","_isInsideTargetDraggable","event","$targetDraggable","_getScrollableBoundar","validX","pageX","validY","pageY","dragEnd","sourceEvent","sourceDraggable","isSourceDraggable","NAME","isInsideTargetDraggable","cancelAdd","cancelRemove","_fireAddEvent","_fireRemoveEvent","resetPosition","_moveItem","_fireReorderEvent","Deferred","resolve","dragMove","axisName","cursorPosition","rtlEnabled","itemPoint","i","centerPosition","_updatePlaceholderPosition","_verticalScrollHelper","isScrolling","_movePlaceholder","_createPlaceholder","$placeholderContainer","addClass","_addWidgetPrefix","insertBefore","_$dragElement","itemsSelector","_getItemsSelector","_$content","find","not","toArray","_allowReordering","targetDraggable","_isValidPoint","visibleIndex","draggableVisibleIndex","_getItemPoints","that","result","$item","itemWidth","itemElements","visibleItemElements","visibleItemCount","$draggableItem","_getDraggableElement","indexOf","needCorrectLeftPosition","needCorrectTopPosition","push","isValid","points","_i","Math","floor","forceUpdate","positionPropName","$itemElement","_getDragTemplateArgs","args","model","_togglePlaceholder","toggle","_normalizeToIndex","isAnotherDraggable","max","eventArgs","_getEventArgs","_getAction","placeholderElement","getPublicElement","dragElement","_makeWidthCorrection","_$scrollable","scrollableWidth","offsetLeft","offsetRight","_updatePlaceholderSizes","$placeholderElement","toggleClass","$prevTargetItemElement","$itemElements","$targetItemElement","_toggleDragSourceClass","_moveItemCore","$targetItem","item","prevItem","appendTo","insertAfter","_getDragStartArgs","_optionChanged","_this2","name","_createActionByOption","isDragSource","previousValue","$fromElement","_optionChangedDropInsideItem","_optionChangedToIndex","_isPositionVisible","position","scrollContainer","parents","each","clientRect","getBoundingRect","isVerticalOrientation","start","end","pageOffset","pageYOffset","pageXOffset","showPlaceholder","_moveItems","fullUpdate","_updateDragSourceClass","_getActualFromIndex","_$sourceElement","_makeLeftCorrection","leftMargin","prevVisibleItemElement","_move","_getPositions","elementSize","positions","_getDraggableElementSize","size","_this$option","prevToIndex","prevPositions","animationConfig","prevPosition","_dispose","promise","_default","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/sortable.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../events/core/events_engine\"));\r\nvar _component_registrator = _interopRequireDefault(require(\"../core/component_registrator\"));\r\nvar _extend = require(\"../core/utils/extend\");\r\nvar _draggable = _interopRequireDefault(require(\"./draggable\"));\r\nvar _element = require(\"../core/element\");\r\nvar _window = require(\"../core/utils/window\");\r\nvar _position = require(\"../core/utils/position\");\r\nvar _translator = require(\"../animation/translator\");\r\nvar _fx = _interopRequireDefault(require(\"../animation/fx\"));\r\nvar _deferred = require(\"../core/utils/deferred\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _defineProperty(obj, key, value) {\r\n    if (key in obj) {\r\n        Object.defineProperty(obj, key, {\r\n            value: value,\r\n            enumerable: true,\r\n            configurable: true,\r\n            writable: true\r\n        })\r\n    } else {\r\n        obj[key] = value\r\n    }\r\n    return obj\r\n}\r\nvar window = (0, _window.getWindow)();\r\nvar SORTABLE = \"dxSortable\";\r\nvar PLACEHOLDER_CLASS = \"placeholder\";\r\nvar CLONE_CLASS = \"clone\";\r\nvar isElementVisible = function(itemElement) {\r\n    return (0, _renderer.default)(itemElement).is(\":visible\")\r\n};\r\nvar animate = function(element, config) {\r\n    var _config$to, _config$to2;\r\n    if (!element) {\r\n        return\r\n    }\r\n    var left = (null === (_config$to = config.to) || void 0 === _config$to ? void 0 : _config$to.left) || 0;\r\n    var top = (null === (_config$to2 = config.to) || void 0 === _config$to2 ? void 0 : _config$to2.top) || 0;\r\n    element.style.transform = \"translate(\".concat(left, \"px,\").concat(top, \"px)\");\r\n    element.style.transition = _fx.default.off ? \"\" : \"transform \".concat(config.duration, \"ms \").concat(config.easing)\r\n};\r\nvar stopAnimation = function(element) {\r\n    if (!element) {\r\n        return\r\n    }\r\n    element.style.transform = \"\";\r\n    element.style.transition = \"\"\r\n};\r\n\r\nfunction getScrollableBoundary($scrollable) {\r\n    var offset = $scrollable.offset();\r\n    var style = $scrollable[0].style;\r\n    var paddingLeft = parseFloat(style.paddingLeft) || 0;\r\n    var paddingRight = parseFloat(style.paddingRight) || 0;\r\n    var paddingTop = parseFloat(style.paddingTop) || 0;\r\n    var width = $scrollable[0].clientWidth - (paddingLeft + paddingRight);\r\n    var height = $scrollable.height();\r\n    var left = offset.left + paddingLeft;\r\n    var top = offset.top + paddingTop;\r\n    return {\r\n        left: left,\r\n        right: left + width,\r\n        top: top,\r\n        bottom: top + height\r\n    }\r\n}\r\nvar Sortable = _draggable.default.inherit({\r\n    _init: function() {\r\n        this.callBase();\r\n        this._sourceScrollHandler = this._handleSourceScroll.bind(this);\r\n        this._sourceScrollableInfo = null\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            clone: true,\r\n            filter: \"> *\",\r\n            itemOrientation: \"vertical\",\r\n            dropFeedbackMode: \"push\",\r\n            allowDropInsideItem: false,\r\n            allowReordering: true,\r\n            moveItemOnDrop: false,\r\n            onDragChange: null,\r\n            onAdd: null,\r\n            onRemove: null,\r\n            onReorder: null,\r\n            onPlaceholderPrepared: null,\r\n            animation: {\r\n                type: \"slide\",\r\n                duration: 300,\r\n                easing: \"ease\"\r\n            },\r\n            fromIndex: null,\r\n            toIndex: null,\r\n            dropInsideItem: false,\r\n            itemPoints: null,\r\n            fromIndexOffset: 0,\r\n            offset: 0,\r\n            autoUpdate: false,\r\n            draggableElementSize: 0\r\n        })\r\n    },\r\n    reset: function() {\r\n        this.option({\r\n            dropInsideItem: false,\r\n            toIndex: null,\r\n            fromIndex: null,\r\n            itemPoints: null,\r\n            fromIndexOffset: 0,\r\n            draggableElementSize: 0\r\n        });\r\n        if (this._$placeholderElement) {\r\n            this._$placeholderElement.remove()\r\n        }\r\n        this._$placeholderElement = null;\r\n        if (!this._isIndicateMode() && this._$modifiedItem) {\r\n            this._$modifiedItem.css(\"marginBottom\", this._modifiedItemMargin);\r\n            this._$modifiedItem = null\r\n        }\r\n    },\r\n    _getPrevVisibleItem: function(items, index) {\r\n        return items.slice(0, index).reverse().filter(isElementVisible)[0]\r\n    },\r\n    _dragStartHandler: function(e) {\r\n        this.callBase.apply(this, arguments);\r\n        if (true === e.cancel) {\r\n            return\r\n        }\r\n        var $sourceElement = this._getSourceElement();\r\n        this._updateItemPoints();\r\n        this._subscribeToSourceScroll(e);\r\n        this.option(\"fromIndex\", this._getElementIndex($sourceElement));\r\n        this.option(\"fromIndexOffset\", this.option(\"offset\"))\r\n    },\r\n    _dragEndHandler: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._unsubscribeFromSourceScroll()\r\n    },\r\n    _subscribeToSourceScroll: function(e) {\r\n        var $scrollable = this._getScrollable((0, _renderer.default)(e.target));\r\n        if ($scrollable) {\r\n            this._sourceScrollableInfo = {\r\n                element: $scrollable,\r\n                scrollLeft: $scrollable.scrollLeft(),\r\n                scrollTop: $scrollable.scrollTop()\r\n            };\r\n            _events_engine.default.on($scrollable, \"scroll\", this._sourceScrollHandler)\r\n        }\r\n    },\r\n    _unsubscribeFromSourceScroll: function() {\r\n        if (this._sourceScrollableInfo) {\r\n            _events_engine.default.off(this._sourceScrollableInfo.element, \"scroll\", this._sourceScrollHandler);\r\n            this._sourceScrollableInfo = null\r\n        }\r\n    },\r\n    _handleSourceScroll: function(e) {\r\n        var _this = this;\r\n        var sourceScrollableInfo = this._sourceScrollableInfo;\r\n        if (sourceScrollableInfo) {\r\n            [\"scrollLeft\", \"scrollTop\"].forEach(function(scrollProp) {\r\n                if (e.target[scrollProp] !== sourceScrollableInfo[scrollProp]) {\r\n                    var scrollBy = e.target[scrollProp] - sourceScrollableInfo[scrollProp];\r\n                    _this._correctItemPoints(scrollBy);\r\n                    sourceScrollableInfo[scrollProp] = e.target[scrollProp]\r\n                }\r\n            })\r\n        }\r\n    },\r\n    _dragEnterHandler: function() {\r\n        this.callBase.apply(this, arguments);\r\n        if (this === this._getSourceDraggable()) {\r\n            return\r\n        }\r\n        this._updateItemPoints();\r\n        this.option(\"fromIndex\", -1);\r\n        if (!this._isIndicateMode()) {\r\n            var itemPoints = this.option(\"itemPoints\");\r\n            var lastItemPoint = itemPoints[itemPoints.length - 1];\r\n            if (lastItemPoint) {\r\n                var $element = this.$element();\r\n                var $sourceElement = this._getSourceElement();\r\n                var isVertical = this._isVerticalOrientation();\r\n                var sourceElementSize = isVertical ? $sourceElement.outerHeight(true) : $sourceElement.outerWidth(true);\r\n                var scrollSize = $element.get(0)[isVertical ? \"scrollHeight\" : \"scrollWidth\"];\r\n                var scrollPosition = $element.get(0)[isVertical ? \"scrollTop\" : \"scrollLeft\"];\r\n                var positionProp = isVertical ? \"top\" : \"left\";\r\n                var lastPointPosition = lastItemPoint[positionProp];\r\n                var elementPosition = $element.offset()[positionProp];\r\n                var freeSize = elementPosition + scrollSize - scrollPosition - lastPointPosition;\r\n                if (freeSize < sourceElementSize) {\r\n                    if (isVertical) {\r\n                        var items = this._getItems();\r\n                        var $lastItem = (0, _renderer.default)(this._getPrevVisibleItem(items));\r\n                        this._$modifiedItem = $lastItem;\r\n                        this._modifiedItemMargin = $lastItem.get(0).style.marginBottom;\r\n                        $lastItem.css(\"marginBottom\", sourceElementSize - freeSize);\r\n                        var $sortable = $lastItem.closest(\".dx-sortable\");\r\n                        var sortable = $sortable.data(\"dxScrollable\") || $sortable.data(\"dxScrollView\");\r\n                        sortable && sortable.update()\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    dragEnter: function() {\r\n        if (this !== this._getTargetDraggable()) {\r\n            this.option(\"toIndex\", -1)\r\n        }\r\n    },\r\n    dragLeave: function() {\r\n        if (this !== this._getTargetDraggable()) {\r\n            this.option(\"toIndex\", this.option(\"fromIndex\"))\r\n        }\r\n    },\r\n    _isInsideTargetDraggable: function(event) {\r\n        var $targetDraggable = this._getTargetDraggable().$element();\r\n        var $scrollable = this._getScrollable($targetDraggable);\r\n        if ($scrollable) {\r\n            var _getScrollableBoundar = getScrollableBoundary($scrollable),\r\n                left = _getScrollableBoundar.left,\r\n                right = _getScrollableBoundar.right,\r\n                top = _getScrollableBoundar.top,\r\n                bottom = _getScrollableBoundar.bottom;\r\n            var validX = left <= event.pageX && event.pageX <= right;\r\n            var validY = top <= event.pageY && event.pageY <= bottom;\r\n            return validY && validX\r\n        }\r\n        return true\r\n    },\r\n    dragEnd: function(sourceEvent) {\r\n        var $sourceElement = this._getSourceElement();\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        var isSourceDraggable = sourceDraggable.NAME !== this.NAME;\r\n        var toIndex = this.option(\"toIndex\");\r\n        var isInsideTargetDraggable = this._isInsideTargetDraggable(sourceEvent.event);\r\n        if (null !== toIndex && toIndex >= 0 && isInsideTargetDraggable) {\r\n            var cancelAdd;\r\n            var cancelRemove;\r\n            if (sourceDraggable !== this) {\r\n                cancelAdd = this._fireAddEvent(sourceEvent);\r\n                if (!cancelAdd) {\r\n                    cancelRemove = this._fireRemoveEvent(sourceEvent)\r\n                }\r\n            }\r\n            if (isSourceDraggable) {\r\n                (0, _translator.resetPosition)($sourceElement)\r\n            }\r\n            if (this.option(\"moveItemOnDrop\")) {\r\n                !cancelAdd && this._moveItem($sourceElement, toIndex, cancelRemove)\r\n            }\r\n            if (sourceDraggable === this) {\r\n                return this._fireReorderEvent(sourceEvent)\r\n            }\r\n        }\r\n        return (new _deferred.Deferred).resolve()\r\n    },\r\n    dragMove: function(e) {\r\n        var itemPoints = this.option(\"itemPoints\");\r\n        if (!itemPoints) {\r\n            return\r\n        }\r\n        var isVertical = this._isVerticalOrientation();\r\n        var axisName = isVertical ? \"top\" : \"left\";\r\n        var cursorPosition = isVertical ? e.pageY : e.pageX;\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var itemPoint;\r\n        for (var i = itemPoints.length - 1; i >= 0; i--) {\r\n            var centerPosition = itemPoints[i + 1] && (itemPoints[i][axisName] + itemPoints[i + 1][axisName]) / 2;\r\n            if ((!isVertical && rtlEnabled ? cursorPosition > centerPosition : centerPosition > cursorPosition) || void 0 === centerPosition) {\r\n                itemPoint = itemPoints[i]\r\n            } else {\r\n                break\r\n            }\r\n        }\r\n        if (itemPoint) {\r\n            this._updatePlaceholderPosition(e, itemPoint);\r\n            if (this._verticalScrollHelper.isScrolling() && this._isIndicateMode()) {\r\n                this._movePlaceholder()\r\n            }\r\n        }\r\n    },\r\n    _isIndicateMode: function() {\r\n        return \"indicate\" === this.option(\"dropFeedbackMode\") || this.option(\"allowDropInsideItem\")\r\n    },\r\n    _createPlaceholder: function() {\r\n        var $placeholderContainer;\r\n        if (this._isIndicateMode()) {\r\n            $placeholderContainer = (0, _renderer.default)(\"<div>\").addClass(this._addWidgetPrefix(PLACEHOLDER_CLASS)).insertBefore(this._getSourceDraggable()._$dragElement)\r\n        }\r\n        this._$placeholderElement = $placeholderContainer;\r\n        return $placeholderContainer\r\n    },\r\n    _getItems: function() {\r\n        var itemsSelector = this._getItemsSelector();\r\n        return this._$content().find(itemsSelector).not(\".\" + this._addWidgetPrefix(PLACEHOLDER_CLASS)).not(\".\" + this._addWidgetPrefix(CLONE_CLASS)).toArray()\r\n    },\r\n    _allowReordering: function() {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        var targetDraggable = this._getTargetDraggable();\r\n        return sourceDraggable !== targetDraggable || this.option(\"allowReordering\")\r\n    },\r\n    _isValidPoint: function(visibleIndex, draggableVisibleIndex, dropInsideItem) {\r\n        var allowDropInsideItem = this.option(\"allowDropInsideItem\");\r\n        var allowReordering = dropInsideItem || this._allowReordering();\r\n        if (!allowReordering && (0 !== visibleIndex || !allowDropInsideItem)) {\r\n            return false\r\n        }\r\n        if (!this._isIndicateMode()) {\r\n            return true\r\n        }\r\n        return draggableVisibleIndex === -1 || visibleIndex !== draggableVisibleIndex && (dropInsideItem || visibleIndex !== draggableVisibleIndex + 1)\r\n    },\r\n    _getItemPoints: function() {\r\n        var that = this;\r\n        var result = [];\r\n        var $item;\r\n        var offset;\r\n        var itemWidth;\r\n        var rtlEnabled = that.option(\"rtlEnabled\");\r\n        var isVertical = that._isVerticalOrientation();\r\n        var itemElements = that._getItems();\r\n        var visibleItemElements = itemElements.filter(isElementVisible);\r\n        var visibleItemCount = visibleItemElements.length;\r\n        var $draggableItem = this._getDraggableElement();\r\n        var draggableVisibleIndex = visibleItemElements.indexOf($draggableItem.get(0));\r\n        if (visibleItemCount) {\r\n            for (var i = 0; i <= visibleItemCount; i++) {\r\n                var needCorrectLeftPosition = !isVertical && rtlEnabled ^ i === visibleItemCount;\r\n                var needCorrectTopPosition = isVertical && i === visibleItemCount;\r\n                if (i < visibleItemCount) {\r\n                    $item = (0, _renderer.default)(visibleItemElements[i]);\r\n                    offset = $item.offset();\r\n                    itemWidth = $item.outerWidth()\r\n                }\r\n                result.push({\r\n                    dropInsideItem: false,\r\n                    left: offset.left + (needCorrectLeftPosition ? itemWidth : 0),\r\n                    top: offset.top + (needCorrectTopPosition ? result[i - 1].height : 0),\r\n                    index: i === visibleItemCount ? itemElements.length : itemElements.indexOf($item.get(0)),\r\n                    $item: $item,\r\n                    width: $item.outerWidth(),\r\n                    height: $item.outerHeight(),\r\n                    isValid: that._isValidPoint(i, draggableVisibleIndex)\r\n                })\r\n            }\r\n            if (this.option(\"allowDropInsideItem\")) {\r\n                var points = result;\r\n                result = [];\r\n                for (var _i = 0; _i < points.length; _i++) {\r\n                    result.push(points[_i]);\r\n                    if (points[_i + 1]) {\r\n                        result.push((0, _extend.extend)({}, points[_i], {\r\n                            dropInsideItem: true,\r\n                            top: Math.floor((points[_i].top + points[_i + 1].top) / 2),\r\n                            left: Math.floor((points[_i].left + points[_i + 1].left) / 2),\r\n                            isValid: this._isValidPoint(_i, draggableVisibleIndex, true)\r\n                        }))\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            result.push({\r\n                dropInsideItem: false,\r\n                index: 0,\r\n                isValid: true\r\n            })\r\n        }\r\n        return result\r\n    },\r\n    _updateItemPoints: function(forceUpdate) {\r\n        if (forceUpdate || this.option(\"autoUpdate\") || !this.option(\"itemPoints\")) {\r\n            this.option(\"itemPoints\", this._getItemPoints())\r\n        }\r\n    },\r\n    _correctItemPoints: function(scrollBy) {\r\n        var itemPoints = this.option(\"itemPoints\");\r\n        if (scrollBy && itemPoints && !this.option(\"autoUpdate\")) {\r\n            var isVertical = this._isVerticalOrientation();\r\n            var positionPropName = isVertical ? \"top\" : \"left\";\r\n            itemPoints.forEach(function(itemPoint) {\r\n                itemPoint[positionPropName] -= scrollBy\r\n            })\r\n        }\r\n    },\r\n    _getElementIndex: function($itemElement) {\r\n        return this._getItems().indexOf($itemElement.get(0))\r\n    },\r\n    _getDragTemplateArgs: function($element) {\r\n        var args = this.callBase.apply(this, arguments);\r\n        args.model.fromIndex = this._getElementIndex($element);\r\n        return args\r\n    },\r\n    _togglePlaceholder: function(value) {\r\n        this._$placeholderElement && this._$placeholderElement.toggle(value)\r\n    },\r\n    _isVerticalOrientation: function() {\r\n        return \"vertical\" === this.option(\"itemOrientation\")\r\n    },\r\n    _normalizeToIndex: function(toIndex, dropInsideItem) {\r\n        var isAnotherDraggable = this._getSourceDraggable() !== this._getTargetDraggable();\r\n        var fromIndex = this.option(\"fromIndex\");\r\n        if (null === toIndex) {\r\n            return fromIndex\r\n        }\r\n        return Math.max(isAnotherDraggable || fromIndex >= toIndex || dropInsideItem ? toIndex : toIndex - 1, 0)\r\n    },\r\n    _updatePlaceholderPosition: function(e, itemPoint) {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        var toIndex = this._normalizeToIndex(itemPoint.index, itemPoint.dropInsideItem);\r\n        var eventArgs = (0, _extend.extend)(this._getEventArgs(e), {\r\n            toIndex: toIndex,\r\n            dropInsideItem: itemPoint.dropInsideItem\r\n        });\r\n        itemPoint.isValid && this._getAction(\"onDragChange\")(eventArgs);\r\n        if (eventArgs.cancel || !itemPoint.isValid) {\r\n            if (!itemPoint.isValid) {\r\n                this.option({\r\n                    dropInsideItem: false,\r\n                    toIndex: null\r\n                })\r\n            }\r\n            return\r\n        }\r\n        this.option({\r\n            dropInsideItem: itemPoint.dropInsideItem,\r\n            toIndex: itemPoint.index\r\n        });\r\n        this._getAction(\"onPlaceholderPrepared\")((0, _extend.extend)(this._getEventArgs(e), {\r\n            placeholderElement: (0, _element.getPublicElement)(this._$placeholderElement),\r\n            dragElement: (0, _element.getPublicElement)(sourceDraggable._$dragElement)\r\n        }));\r\n        this._updateItemPoints()\r\n    },\r\n    _makeWidthCorrection: function($item, width) {\r\n        this._$scrollable = this._getScrollable($item);\r\n        if (this._$scrollable && this._$scrollable.width() < width) {\r\n            var scrollableWidth = this._$scrollable.width();\r\n            var offsetLeft = $item.offset().left - this._$scrollable.offset().left;\r\n            var offsetRight = scrollableWidth - $item.outerWidth() - offsetLeft;\r\n            if (offsetLeft > 0) {\r\n                width = scrollableWidth - offsetLeft\r\n            } else {\r\n                if (offsetRight > 0) {\r\n                    width = scrollableWidth - offsetRight\r\n                } else {\r\n                    width = scrollableWidth\r\n                }\r\n            }\r\n        }\r\n        return width\r\n    },\r\n    _updatePlaceholderSizes: function($placeholderElement, itemElement) {\r\n        var that = this;\r\n        var dropInsideItem = that.option(\"dropInsideItem\");\r\n        var $item = (0, _renderer.default)(itemElement);\r\n        var isVertical = that._isVerticalOrientation();\r\n        var width = \"\";\r\n        var height = \"\";\r\n        $placeholderElement.toggleClass(that._addWidgetPrefix(\"placeholder-inside\"), dropInsideItem);\r\n        if (isVertical || dropInsideItem) {\r\n            width = $item.outerWidth()\r\n        }\r\n        if (!isVertical || dropInsideItem) {\r\n            height = $item.outerHeight()\r\n        }\r\n        width = that._makeWidthCorrection($item, width);\r\n        $placeholderElement.css({\r\n            width: width,\r\n            height: height\r\n        })\r\n    },\r\n    _moveItem: function($itemElement, index, cancelRemove) {\r\n        var $prevTargetItemElement;\r\n        var $itemElements = this._getItems();\r\n        var $targetItemElement = $itemElements[index];\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        if (cancelRemove) {\r\n            $itemElement = $itemElement.clone();\r\n            sourceDraggable._toggleDragSourceClass(false, $itemElement)\r\n        }\r\n        if (!$targetItemElement) {\r\n            $prevTargetItemElement = $itemElements[index - 1]\r\n        }\r\n        this._moveItemCore($itemElement, $targetItemElement, $prevTargetItemElement)\r\n    },\r\n    _moveItemCore: function($targetItem, item, prevItem) {\r\n        if (!item && !prevItem) {\r\n            $targetItem.appendTo(this.$element())\r\n        } else {\r\n            if (prevItem) {\r\n                $targetItem.insertAfter((0, _renderer.default)(prevItem))\r\n            } else {\r\n                $targetItem.insertBefore((0, _renderer.default)(item))\r\n            }\r\n        }\r\n    },\r\n    _getDragStartArgs: function(e, $itemElement) {\r\n        return (0, _extend.extend)(this.callBase.apply(this, arguments), {\r\n            fromIndex: this._getElementIndex($itemElement)\r\n        })\r\n    },\r\n    _getEventArgs: function(e) {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        var targetDraggable = this._getTargetDraggable();\r\n        var dropInsideItem = targetDraggable.option(\"dropInsideItem\");\r\n        return (0, _extend.extend)(this.callBase.apply(this, arguments), {\r\n            fromIndex: sourceDraggable.option(\"fromIndex\"),\r\n            toIndex: this._normalizeToIndex(targetDraggable.option(\"toIndex\"), dropInsideItem),\r\n            dropInsideItem: dropInsideItem\r\n        })\r\n    },\r\n    _optionChanged: function(args) {\r\n        var _this2 = this;\r\n        var name = args.name;\r\n        switch (name) {\r\n            case \"onDragChange\":\r\n            case \"onPlaceholderPrepared\":\r\n            case \"onAdd\":\r\n            case \"onRemove\":\r\n            case \"onReorder\":\r\n                this[\"_\" + name + \"Action\"] = this._createActionByOption(name);\r\n                break;\r\n            case \"itemOrientation\":\r\n            case \"allowDropInsideItem\":\r\n            case \"moveItemOnDrop\":\r\n            case \"dropFeedbackMode\":\r\n            case \"itemPoints\":\r\n            case \"animation\":\r\n            case \"allowReordering\":\r\n            case \"fromIndexOffset\":\r\n            case \"offset\":\r\n            case \"draggableElementSize\":\r\n            case \"autoUpdate\":\r\n                break;\r\n            case \"fromIndex\":\r\n                [false, true].forEach(function(isDragSource) {\r\n                    var fromIndex = isDragSource ? args.value : args.previousValue;\r\n                    if (null !== fromIndex) {\r\n                        var $fromElement = (0, _renderer.default)(_this2._getItems()[fromIndex]);\r\n                        _this2._toggleDragSourceClass(isDragSource, $fromElement)\r\n                    }\r\n                });\r\n                break;\r\n            case \"dropInsideItem\":\r\n                this._optionChangedDropInsideItem(args);\r\n                break;\r\n            case \"toIndex\":\r\n                this._optionChangedToIndex(args);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _optionChangedDropInsideItem: function() {\r\n        if (this._isIndicateMode() && this._$placeholderElement) {\r\n            this._movePlaceholder()\r\n        }\r\n    },\r\n    _isPositionVisible: function(position) {\r\n        var $element = this.$element();\r\n        var scrollContainer;\r\n        if (\"hidden\" !== $element.css(\"overflow\")) {\r\n            scrollContainer = $element.get(0)\r\n        } else {\r\n            $element.parents().each(function() {\r\n                if (\"visible\" !== (0, _renderer.default)(this).css(\"overflow\")) {\r\n                    scrollContainer = this;\r\n                    return false\r\n                }\r\n            })\r\n        }\r\n        if (scrollContainer) {\r\n            var clientRect = (0, _position.getBoundingRect)(scrollContainer);\r\n            var isVerticalOrientation = this._isVerticalOrientation();\r\n            var start = isVerticalOrientation ? \"top\" : \"left\";\r\n            var end = isVerticalOrientation ? \"bottom\" : \"right\";\r\n            var pageOffset = isVerticalOrientation ? window.pageYOffset : window.pageXOffset;\r\n            if (position[start] < clientRect[start] + pageOffset || position[start] > clientRect[end] + pageOffset) {\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    },\r\n    _optionChangedToIndex: function(args) {\r\n        var toIndex = args.value;\r\n        if (this._isIndicateMode()) {\r\n            var showPlaceholder = null !== toIndex && toIndex >= 0;\r\n            this._togglePlaceholder(showPlaceholder);\r\n            if (showPlaceholder) {\r\n                this._movePlaceholder()\r\n            }\r\n        } else {\r\n            this._moveItems(args.previousValue, args.value, args.fullUpdate)\r\n        }\r\n    },\r\n    update: function() {\r\n        if (null === this.option(\"fromIndex\") && null === this.option(\"toIndex\")) {\r\n            return\r\n        }\r\n        this._updateItemPoints(true);\r\n        this._updateDragSourceClass();\r\n        var toIndex = this.option(\"toIndex\");\r\n        this._optionChangedToIndex({\r\n            value: toIndex,\r\n            fullUpdate: true\r\n        })\r\n    },\r\n    _updateDragSourceClass: function() {\r\n        var fromIndex = this._getActualFromIndex();\r\n        var $fromElement = (0, _renderer.default)(this._getItems()[fromIndex]);\r\n        if ($fromElement.length) {\r\n            this._$sourceElement = $fromElement;\r\n            this._toggleDragSourceClass(true, $fromElement)\r\n        }\r\n    },\r\n    _makeLeftCorrection: function(left, leftMargin) {\r\n        var that = this;\r\n        var $scrollable = that._$scrollable;\r\n        if ($scrollable && that._isVerticalOrientation() && $scrollable.scrollLeft() > leftMargin) {\r\n            left += $scrollable.scrollLeft() - leftMargin\r\n        }\r\n        return left\r\n    },\r\n    _movePlaceholder: function() {\r\n        var that = this;\r\n        var $placeholderElement = that._$placeholderElement || that._createPlaceholder();\r\n        var items = that._getItems();\r\n        var toIndex = that.option(\"toIndex\");\r\n        var isVerticalOrientation = that._isVerticalOrientation();\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var dropInsideItem = that.option(\"dropInsideItem\");\r\n        var position = null;\r\n        var leftMargin = 0;\r\n        var itemElement = items[toIndex];\r\n        if (itemElement) {\r\n            var $itemElement = (0, _renderer.default)(itemElement);\r\n            position = $itemElement.offset();\r\n            leftMargin = parseFloat($itemElement.css(\"marginLeft\"));\r\n            if (!isVerticalOrientation && rtlEnabled && !dropInsideItem) {\r\n                position.left += $itemElement.outerWidth(true)\r\n            }\r\n        } else {\r\n            var prevVisibleItemElement = itemElement = this._getPrevVisibleItem(items, toIndex);\r\n            if (prevVisibleItemElement) {\r\n                position = (0, _renderer.default)(prevVisibleItemElement).offset();\r\n                if (isVerticalOrientation) {\r\n                    position.top += (0, _renderer.default)(prevVisibleItemElement).outerHeight(true)\r\n                } else {\r\n                    if (!rtlEnabled) {\r\n                        position.left += (0, _renderer.default)(prevVisibleItemElement).outerWidth(true)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        that._updatePlaceholderSizes($placeholderElement, itemElement);\r\n        if (position && !that._isPositionVisible(position)) {\r\n            position = null\r\n        }\r\n        if (position) {\r\n            position.left = that._makeLeftCorrection(position.left, leftMargin);\r\n            that._move(position, $placeholderElement)\r\n        }\r\n        $placeholderElement.toggle(!!position)\r\n    },\r\n    _getPositions: function(items, elementSize, fromIndex, toIndex) {\r\n        var positions = [];\r\n        for (var i = 0; i < items.length; i++) {\r\n            var position = 0;\r\n            if (null === toIndex || null === fromIndex) {\r\n                positions.push(position);\r\n                continue\r\n            }\r\n            if (fromIndex === -1) {\r\n                if (i >= toIndex) {\r\n                    position = elementSize\r\n                }\r\n            } else {\r\n                if (toIndex === -1) {\r\n                    if (i > fromIndex) {\r\n                        position = -elementSize\r\n                    }\r\n                } else {\r\n                    if (fromIndex < toIndex) {\r\n                        if (i > fromIndex && i < toIndex) {\r\n                            position = -elementSize\r\n                        }\r\n                    } else {\r\n                        if (fromIndex > toIndex) {\r\n                            if (i >= toIndex && i < fromIndex) {\r\n                                position = elementSize\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            positions.push(position)\r\n        }\r\n        return positions\r\n    },\r\n    _getDraggableElementSize: function(isVerticalOrientation) {\r\n        var $draggableItem = this._getDraggableElement();\r\n        var size = this.option(\"draggableElementSize\");\r\n        if (!size) {\r\n            size = isVerticalOrientation ? ($draggableItem.outerHeight() + $draggableItem.outerHeight(true)) / 2 : ($draggableItem.outerWidth() + $draggableItem.outerWidth(true)) / 2;\r\n            if (!this.option(\"autoUpdate\")) {\r\n                this.option(\"draggableElementSize\", size)\r\n            }\r\n        }\r\n        return size\r\n    },\r\n    _getActualFromIndex: function() {\r\n        var _this$option = this.option(),\r\n            fromIndex = _this$option.fromIndex,\r\n            fromIndexOffset = _this$option.fromIndexOffset,\r\n            offset = _this$option.offset;\r\n        return null == fromIndex ? null : fromIndex + fromIndexOffset - offset\r\n    },\r\n    _moveItems: function(prevToIndex, toIndex, fullUpdate) {\r\n        var fromIndex = this._getActualFromIndex();\r\n        var isVerticalOrientation = this._isVerticalOrientation();\r\n        var positionPropName = isVerticalOrientation ? \"top\" : \"left\";\r\n        var elementSize = this._getDraggableElementSize(isVerticalOrientation);\r\n        var items = this._getItems();\r\n        var prevPositions = this._getPositions(items, elementSize, fromIndex, prevToIndex);\r\n        var positions = this._getPositions(items, elementSize, fromIndex, toIndex);\r\n        var animationConfig = this.option(\"animation\");\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        for (var i = 0; i < items.length; i++) {\r\n            var itemElement = items[i];\r\n            var prevPosition = prevPositions[i];\r\n            var position = positions[i];\r\n            if (null === toIndex || null === fromIndex) {\r\n                stopAnimation(itemElement)\r\n            } else {\r\n                if (prevPosition !== position || fullUpdate && position) {\r\n                    animate(itemElement, (0, _extend.extend)({}, animationConfig, {\r\n                        to: _defineProperty({}, positionPropName, !isVerticalOrientation && rtlEnabled ? -position : position)\r\n                    }))\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _toggleDragSourceClass: function(value, $element) {\r\n        var $sourceElement = $element || this._$sourceElement;\r\n        this.callBase.apply(this, arguments);\r\n        if (!this._isIndicateMode()) {\r\n            $sourceElement && $sourceElement.toggleClass(this._addWidgetPrefix(\"source-hidden\"), value)\r\n        }\r\n    },\r\n    _dispose: function() {\r\n        this.reset();\r\n        this.callBase()\r\n    },\r\n    _fireAddEvent: function(sourceEvent) {\r\n        var args = this._getEventArgs(sourceEvent);\r\n        this._getAction(\"onAdd\")(args);\r\n        return args.cancel\r\n    },\r\n    _fireRemoveEvent: function(sourceEvent) {\r\n        var sourceDraggable = this._getSourceDraggable();\r\n        var args = this._getEventArgs(sourceEvent);\r\n        sourceDraggable._getAction(\"onRemove\")(args);\r\n        return args.cancel\r\n    },\r\n    _fireReorderEvent: function(sourceEvent) {\r\n        var args = this._getEventArgs(sourceEvent);\r\n        this._getAction(\"onReorder\")(args);\r\n        return args.promise || (new _deferred.Deferred).resolve()\r\n    }\r\n});\r\n(0, _component_registrator.default)(SORTABLE, Sortable);\r\nvar _default = Sortable;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n"]},"metadata":{},"sourceType":"script"}