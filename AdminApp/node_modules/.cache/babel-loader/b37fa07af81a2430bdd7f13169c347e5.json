{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CapiniaC\\\\Desktop\\\\Collection\\\\Work\\\\project\\\\security\\\\AdminApp\\\\src\\\\components\\\\pages\\\\users\\\\NewUserForm.js\";\nimport React, { useEffect } from 'react';\nimport { Grid } from '@material-ui/core';\nimport Controls from \"../../controls/Controls\";\nimport { useForm, Form } from '../../controls/useForm';\nimport UsersService from '../../../services/UsersService';\nconst initialFValues = {\n  id: 0,\n  email: '',\n  fullname: '',\n  phonenumber: '',\n  role: '',\n  username: ''\n};\nexport default function UserForm(props) {\n  const {\n    addOrEdit,\n    recordForEdit\n  } = props;\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors\n    };\n    if ('fullName' in fieldValues) temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\";\n    if ('email' in fieldValues) temp.email = /$^|.+@.+..+/.test(fieldValues.email) ? \"\" : \"Email is not valid.\";\n    if ('phonenumber' in fieldValues) temp.phonenumber = fieldValues.phonenumber.length > 9 ? \"\" : \"Minimum 10 numbers required.\";\n    setErrors({ ...temp\n    });\n    if (fieldValues === values) return Object.values(temp).every(x => x === \"\");\n  };\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialFValues, true, validate);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (validate()) {\n      UsersService.addUsers(values);\n      resetForm();\n    }\n  };\n\n  useEffect(() => {\n    if (recordForEdit != null) setValues({ ...recordForEdit\n    });\n  }, [recordForEdit]);\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Controls.Input, {\n    name: \"fullName\",\n    label: \"Full Name\",\n    value: values.fullname,\n    onChange: handleInputChange,\n    error: errors.fullname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Controls.Input, {\n    label: \"Email\",\n    name: \"email\",\n    value: values.email,\n    onChange: handleInputChange,\n    error: errors.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Controls.Input, {\n    label: \"phonenumber\",\n    name: \"phonenumber\",\n    value: values.phonenumber,\n    onChange: handleInputChange,\n    error: errors.phonenumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Controls.Input, {\n    label: \"role\",\n    name: \"role\",\n    value: values.role,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Controls.Input, {\n    label: \"username\",\n    name: \"username\",\n    value: values.username,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Controls.Button, {\n    type: \"submit\",\n    text: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Controls.Button, {\n    text: \"Reset\",\n    color: \"default\",\n    onClick: resetForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  })))));\n}","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/AdminApp/src/components/pages/users/NewUserForm.js"],"names":["React","useEffect","Grid","Controls","useForm","Form","UsersService","initialFValues","id","email","fullname","phonenumber","role","username","UserForm","props","addOrEdit","recordForEdit","validate","fieldValues","values","temp","errors","fullName","test","length","setErrors","Object","every","x","setValues","handleInputChange","resetForm","handleSubmit","e","preventDefault","addUsers"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { Grid, } from '@material-ui/core';\r\nimport Controls from \"../../controls/Controls\";\r\nimport { useForm, Form } from '../../controls/useForm';\r\nimport UsersService from '../../../services/UsersService';\r\n\r\nconst initialFValues = {\r\n    id: 0,\r\n    email: '',\r\n    fullname: '',\r\n    phonenumber: '',\r\n    role: '',\r\n    username: '',\r\n}\r\n\r\nexport default function UserForm(props) {\r\n\r\n    const { addOrEdit, recordForEdit } = props\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('fullName' in fieldValues)\r\n            temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\"\r\n        if ('email' in fieldValues)\r\n            temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\r\n        if ('phonenumber' in fieldValues)\r\n            temp.phonenumber = fieldValues.phonenumber.length > 9 ? \"\" : \"Minimum 10 numbers required.\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues === values)\r\n            return Object.values(temp).every(x => x === \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()){\r\n            UsersService.addUsers(values)\r\n            resetForm()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n    }, [recordForEdit])\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <Controls.Input\r\n                        name=\"fullName\"\r\n                        label=\"Full Name\"\r\n                        value={values.fullname}\r\n                        onChange={handleInputChange}\r\n                        error={errors.fullname}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        value={values.email}\r\n                        onChange={handleInputChange}\r\n                        error={errors.email}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"phonenumber\"\r\n                        name=\"phonenumber\"\r\n                        value={values.phonenumber}\r\n                        onChange={handleInputChange}\r\n                        error={errors.phonenumber}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"role\"\r\n                        name=\"role\"\r\n                        value={values.role}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <Controls.Input\r\n                        label=\"username\"\r\n                        name=\"username\"\r\n                        value={values.username}\r\n                        onChange={handleInputChange}\r\n                    />\r\n\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <div>\r\n                        <Controls.Button\r\n                            type=\"submit\"\r\n                            text=\"Submit\" />\r\n                        <Controls.Button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}