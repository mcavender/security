{"ast":null,"code":"/**\r\n * DevExtreme (ui/list/ui.list.edit.decorator.selection.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\n\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\n\nvar _click = require(\"../../events/click\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _ui = _interopRequireDefault(require(\"../widget/ui.errors\"));\n\nvar _check_box = _interopRequireDefault(require(\"../check_box\"));\n\nvar _radio_button = _interopRequireDefault(require(\"../radio_group/radio_button\"));\n\nvar _index = require(\"../../events/utils/index\");\n\nvar _uiListEdit = require(\"./ui.list.edit.decorator_registry\");\n\nvar _uiListEdit2 = _interopRequireDefault(require(\"./ui.list.edit.decorator\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar SELECT_DECORATOR_ENABLED_CLASS = \"dx-list-select-decorator-enabled\";\nvar SELECT_DECORATOR_SELECT_ALL_CLASS = \"dx-list-select-all\";\nvar SELECT_DECORATOR_SELECT_ALL_CHECKBOX_CLASS = \"dx-list-select-all-checkbox\";\nvar SELECT_DECORATOR_SELECT_ALL_LABEL_CLASS = \"dx-list-select-all-label\";\nvar SELECT_CHECKBOX_CONTAINER_CLASS = \"dx-list-select-checkbox-container\";\nvar SELECT_CHECKBOX_CLASS = \"dx-list-select-checkbox\";\nvar SELECT_RADIO_BUTTON_CONTAINER_CLASS = \"dx-list-select-radiobutton-container\";\nvar SELECT_RADIO_BUTTON_CLASS = \"dx-list-select-radiobutton\";\nvar FOCUSED_STATE_CLASS = \"dx-state-focused\";\nvar CLICK_EVENT_NAME = (0, _index.addNamespace)(_click.name, \"dxListEditDecorator\");\n(0, _uiListEdit.register)(\"selection\", \"default\", _uiListEdit2.default.inherit({\n  _init: function () {\n    this.callBase.apply(this, arguments);\n\n    var selectionMode = this._list.option(\"selectionMode\");\n\n    this._singleStrategy = \"single\" === selectionMode;\n    this._containerClass = this._singleStrategy ? SELECT_RADIO_BUTTON_CONTAINER_CLASS : SELECT_CHECKBOX_CONTAINER_CLASS;\n    this._controlClass = this._singleStrategy ? SELECT_RADIO_BUTTON_CLASS : SELECT_CHECKBOX_CLASS;\n    this._controlWidget = this._singleStrategy ? _radio_button.default : _check_box.default;\n\n    this._list.$element().addClass(SELECT_DECORATOR_ENABLED_CLASS);\n  },\n  beforeBag: function (config) {\n    var $itemElement = config.$itemElement;\n    var $container = config.$container.addClass(this._containerClass);\n    var $control = (0, _renderer.default)(\"<div>\").addClass(this._controlClass).appendTo($container);\n    new this._controlWidget($control, (0, _extend.extend)(this._commonOptions(), {\n      value: this._isSelected($itemElement),\n      focusStateEnabled: false,\n      hoverStateEnabled: false,\n      onValueChanged: function (e) {\n        e.event && this._list._saveSelectionChangeEvent(e.event);\n\n        this._processCheckedState($itemElement, e.value);\n\n        e.event && e.event.stopPropagation();\n      }.bind(this)\n    }));\n  },\n  modifyElement: function (config) {\n    this.callBase.apply(this, arguments);\n    var $itemElement = config.$itemElement;\n\n    var control = this._controlWidget.getInstance($itemElement.find(\".\" + this._controlClass));\n\n    _events_engine.default.on($itemElement, \"stateChanged\", function (e, state) {\n      control.option(\"value\", state);\n    }.bind(this));\n  },\n  _updateSelectAllState: function () {\n    if (!this._$selectAll) {\n      return;\n    }\n\n    this._selectAllCheckBox.option(\"value\", this._list.isSelectAll());\n  },\n  afterRender: function () {\n    if (\"all\" !== this._list.option(\"selectionMode\")) {\n      return;\n    }\n\n    if (!this._$selectAll) {\n      this._renderSelectAll();\n    } else {\n      this._updateSelectAllState();\n    }\n  },\n  handleKeyboardEvents: function (currentFocusedIndex, moveFocusUp) {\n    var moveFocusDown = !moveFocusUp;\n    var list = this._list;\n    var $selectAll = this._$selectAll;\n\n    var lastItemIndex = list._getLastItemIndex();\n\n    var isFocusOutOfList = moveFocusUp && 0 === currentFocusedIndex || moveFocusDown && currentFocusedIndex === lastItemIndex;\n    var hasSelectAllItem = !!$selectAll;\n\n    if (hasSelectAllItem && isFocusOutOfList) {\n      list.option(\"focusedElement\", $selectAll);\n      list.scrollToItem(list.option(\"focusedElement\"));\n      return true;\n    }\n\n    return false;\n  },\n  handleEnterPressing: function (e) {\n    if (this._$selectAll && this._$selectAll.hasClass(FOCUSED_STATE_CLASS)) {\n      e.target = this._$selectAll.get(0);\n\n      this._list._saveSelectionChangeEvent(e);\n\n      this._selectAllCheckBox.option(\"value\", !this._selectAllCheckBox.option(\"value\"));\n\n      return true;\n    }\n  },\n  _renderSelectAll: function () {\n    var $selectAll = this._$selectAll = (0, _renderer.default)(\"<div>\").addClass(SELECT_DECORATOR_SELECT_ALL_CLASS);\n    var list = this._list;\n\n    var downArrowHandler = list._supportedKeys().downArrow.bind(list);\n\n    this._selectAllCheckBox = list._createComponent((0, _renderer.default)(\"<div>\").addClass(SELECT_DECORATOR_SELECT_ALL_CHECKBOX_CLASS).appendTo($selectAll), _check_box.default, {\n      focusStateEnabled: false,\n      hoverStateEnabled: false\n    });\n\n    this._selectAllCheckBox.registerKeyHandler(\"downArrow\", downArrowHandler);\n\n    (0, _renderer.default)(\"<div>\").addClass(SELECT_DECORATOR_SELECT_ALL_LABEL_CLASS).text(this._list.option(\"selectAllText\")).appendTo($selectAll);\n\n    this._list.itemsContainer().prepend($selectAll);\n\n    this._updateSelectAllState();\n\n    this._attachSelectAllHandler();\n  },\n  _attachSelectAllHandler: function () {\n    this._selectAllCheckBox.option(\"onValueChanged\", this._selectAllHandler.bind(this));\n\n    _events_engine.default.off(this._$selectAll, CLICK_EVENT_NAME);\n\n    _events_engine.default.on(this._$selectAll, CLICK_EVENT_NAME, this._selectAllClickHandler.bind(this));\n  },\n  _selectAllHandler: function (e) {\n    e.event && e.event.stopPropagation();\n\n    var isSelectedAll = this._selectAllCheckBox.option(\"value\");\n\n    var result = this._list._createActionByOption(\"onSelectAllValueChanged\")({\n      value: isSelectedAll\n    });\n\n    if (false === result) {\n      return;\n    }\n\n    e.event && this._list._saveSelectionChangeEvent(e.event);\n\n    if (true === isSelectedAll) {\n      this._selectAllItems();\n    } else {\n      if (false === isSelectedAll) {\n        this._unselectAllItems();\n      }\n    }\n  },\n  _checkSelectAllCapability: function () {\n    var list = this._list;\n    var dataSource = list.getDataSource();\n\n    if (\"allPages\" === list.option(\"selectAllMode\") && list.option(\"grouped\") && (!dataSource || !dataSource.group())) {\n      _ui.default.log(\"W1010\");\n\n      return false;\n    }\n\n    return true;\n  },\n  _selectAllItems: function () {\n    if (!this._checkSelectAllCapability()) {\n      return;\n    }\n\n    this._list._selection.selectAll(\"page\" === this._list.option(\"selectAllMode\"));\n  },\n  _unselectAllItems: function () {\n    if (!this._checkSelectAllCapability()) {\n      return;\n    }\n\n    this._list._selection.deselectAll(\"page\" === this._list.option(\"selectAllMode\"));\n  },\n  _selectAllClickHandler: function (e) {\n    this._list._saveSelectionChangeEvent(e);\n\n    this._selectAllCheckBox.option(\"value\", !this._selectAllCheckBox.option(\"value\"));\n  },\n  _isSelected: function ($itemElement) {\n    return this._list.isItemSelected($itemElement);\n  },\n  _processCheckedState: function ($itemElement, checked) {\n    if (checked) {\n      this._list.selectItem($itemElement);\n    } else {\n      this._list.unselectItem($itemElement);\n    }\n  },\n  dispose: function () {\n    this._disposeSelectAll();\n\n    this._list.$element().removeClass(SELECT_DECORATOR_ENABLED_CLASS);\n\n    this.callBase.apply(this, arguments);\n  },\n  _disposeSelectAll: function () {\n    if (this._$selectAll) {\n      this._$selectAll.remove();\n\n      this._$selectAll = null;\n    }\n  }\n}));","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/node_modules/devextreme/ui/list/ui.list.edit.decorator.selection.js"],"names":["_renderer","_interopRequireDefault","require","_events_engine","_click","_extend","_ui","_check_box","_radio_button","_index","_uiListEdit","_uiListEdit2","obj","__esModule","SELECT_DECORATOR_ENABLED_CLASS","SELECT_DECORATOR_SELECT_ALL_CLASS","SELECT_DECORATOR_SELECT_ALL_CHECKBOX_CLASS","SELECT_DECORATOR_SELECT_ALL_LABEL_CLASS","SELECT_CHECKBOX_CONTAINER_CLASS","SELECT_CHECKBOX_CLASS","SELECT_RADIO_BUTTON_CONTAINER_CLASS","SELECT_RADIO_BUTTON_CLASS","FOCUSED_STATE_CLASS","CLICK_EVENT_NAME","addNamespace","name","register","default","inherit","_init","callBase","apply","arguments","selectionMode","_list","option","_singleStrategy","_containerClass","_controlClass","_controlWidget","$element","addClass","beforeBag","config","$itemElement","$container","$control","appendTo","extend","_commonOptions","value","_isSelected","focusStateEnabled","hoverStateEnabled","onValueChanged","e","event","_saveSelectionChangeEvent","_processCheckedState","stopPropagation","bind","modifyElement","control","getInstance","find","on","state","_updateSelectAllState","_$selectAll","_selectAllCheckBox","isSelectAll","afterRender","_renderSelectAll","handleKeyboardEvents","currentFocusedIndex","moveFocusUp","moveFocusDown","list","$selectAll","lastItemIndex","_getLastItemIndex","isFocusOutOfList","hasSelectAllItem","scrollToItem","handleEnterPressing","hasClass","target","get","downArrowHandler","_supportedKeys","downArrow","_createComponent","registerKeyHandler","text","itemsContainer","prepend","_attachSelectAllHandler","_selectAllHandler","off","_selectAllClickHandler","isSelectedAll","result","_createActionByOption","_selectAllItems","_unselectAllItems","_checkSelectAllCapability","dataSource","getDataSource","group","log","_selection","selectAll","deselectAll","isItemSelected","checked","selectItem","unselectItem","dispose","_disposeSelectAll","removeClass","remove"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/list/ui.list.edit.decorator.selection.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _click = require(\"../../events/click\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _ui = _interopRequireDefault(require(\"../widget/ui.errors\"));\r\nvar _check_box = _interopRequireDefault(require(\"../check_box\"));\r\nvar _radio_button = _interopRequireDefault(require(\"../radio_group/radio_button\"));\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _uiListEdit = require(\"./ui.list.edit.decorator_registry\");\r\nvar _uiListEdit2 = _interopRequireDefault(require(\"./ui.list.edit.decorator\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar SELECT_DECORATOR_ENABLED_CLASS = \"dx-list-select-decorator-enabled\";\r\nvar SELECT_DECORATOR_SELECT_ALL_CLASS = \"dx-list-select-all\";\r\nvar SELECT_DECORATOR_SELECT_ALL_CHECKBOX_CLASS = \"dx-list-select-all-checkbox\";\r\nvar SELECT_DECORATOR_SELECT_ALL_LABEL_CLASS = \"dx-list-select-all-label\";\r\nvar SELECT_CHECKBOX_CONTAINER_CLASS = \"dx-list-select-checkbox-container\";\r\nvar SELECT_CHECKBOX_CLASS = \"dx-list-select-checkbox\";\r\nvar SELECT_RADIO_BUTTON_CONTAINER_CLASS = \"dx-list-select-radiobutton-container\";\r\nvar SELECT_RADIO_BUTTON_CLASS = \"dx-list-select-radiobutton\";\r\nvar FOCUSED_STATE_CLASS = \"dx-state-focused\";\r\nvar CLICK_EVENT_NAME = (0, _index.addNamespace)(_click.name, \"dxListEditDecorator\");\r\n(0, _uiListEdit.register)(\"selection\", \"default\", _uiListEdit2.default.inherit({\r\n    _init: function() {\r\n        this.callBase.apply(this, arguments);\r\n        var selectionMode = this._list.option(\"selectionMode\");\r\n        this._singleStrategy = \"single\" === selectionMode;\r\n        this._containerClass = this._singleStrategy ? SELECT_RADIO_BUTTON_CONTAINER_CLASS : SELECT_CHECKBOX_CONTAINER_CLASS;\r\n        this._controlClass = this._singleStrategy ? SELECT_RADIO_BUTTON_CLASS : SELECT_CHECKBOX_CLASS;\r\n        this._controlWidget = this._singleStrategy ? _radio_button.default : _check_box.default;\r\n        this._list.$element().addClass(SELECT_DECORATOR_ENABLED_CLASS)\r\n    },\r\n    beforeBag: function(config) {\r\n        var $itemElement = config.$itemElement;\r\n        var $container = config.$container.addClass(this._containerClass);\r\n        var $control = (0, _renderer.default)(\"<div>\").addClass(this._controlClass).appendTo($container);\r\n        new this._controlWidget($control, (0, _extend.extend)(this._commonOptions(), {\r\n            value: this._isSelected($itemElement),\r\n            focusStateEnabled: false,\r\n            hoverStateEnabled: false,\r\n            onValueChanged: function(e) {\r\n                e.event && this._list._saveSelectionChangeEvent(e.event);\r\n                this._processCheckedState($itemElement, e.value);\r\n                e.event && e.event.stopPropagation()\r\n            }.bind(this)\r\n        }))\r\n    },\r\n    modifyElement: function(config) {\r\n        this.callBase.apply(this, arguments);\r\n        var $itemElement = config.$itemElement;\r\n        var control = this._controlWidget.getInstance($itemElement.find(\".\" + this._controlClass));\r\n        _events_engine.default.on($itemElement, \"stateChanged\", function(e, state) {\r\n            control.option(\"value\", state)\r\n        }.bind(this))\r\n    },\r\n    _updateSelectAllState: function() {\r\n        if (!this._$selectAll) {\r\n            return\r\n        }\r\n        this._selectAllCheckBox.option(\"value\", this._list.isSelectAll())\r\n    },\r\n    afterRender: function() {\r\n        if (\"all\" !== this._list.option(\"selectionMode\")) {\r\n            return\r\n        }\r\n        if (!this._$selectAll) {\r\n            this._renderSelectAll()\r\n        } else {\r\n            this._updateSelectAllState()\r\n        }\r\n    },\r\n    handleKeyboardEvents: function(currentFocusedIndex, moveFocusUp) {\r\n        var moveFocusDown = !moveFocusUp;\r\n        var list = this._list;\r\n        var $selectAll = this._$selectAll;\r\n        var lastItemIndex = list._getLastItemIndex();\r\n        var isFocusOutOfList = moveFocusUp && 0 === currentFocusedIndex || moveFocusDown && currentFocusedIndex === lastItemIndex;\r\n        var hasSelectAllItem = !!$selectAll;\r\n        if (hasSelectAllItem && isFocusOutOfList) {\r\n            list.option(\"focusedElement\", $selectAll);\r\n            list.scrollToItem(list.option(\"focusedElement\"));\r\n            return true\r\n        }\r\n        return false\r\n    },\r\n    handleEnterPressing: function(e) {\r\n        if (this._$selectAll && this._$selectAll.hasClass(FOCUSED_STATE_CLASS)) {\r\n            e.target = this._$selectAll.get(0);\r\n            this._list._saveSelectionChangeEvent(e);\r\n            this._selectAllCheckBox.option(\"value\", !this._selectAllCheckBox.option(\"value\"));\r\n            return true\r\n        }\r\n    },\r\n    _renderSelectAll: function() {\r\n        var $selectAll = this._$selectAll = (0, _renderer.default)(\"<div>\").addClass(SELECT_DECORATOR_SELECT_ALL_CLASS);\r\n        var list = this._list;\r\n        var downArrowHandler = list._supportedKeys().downArrow.bind(list);\r\n        this._selectAllCheckBox = list._createComponent((0, _renderer.default)(\"<div>\").addClass(SELECT_DECORATOR_SELECT_ALL_CHECKBOX_CLASS).appendTo($selectAll), _check_box.default, {\r\n            focusStateEnabled: false,\r\n            hoverStateEnabled: false\r\n        });\r\n        this._selectAllCheckBox.registerKeyHandler(\"downArrow\", downArrowHandler);\r\n        (0, _renderer.default)(\"<div>\").addClass(SELECT_DECORATOR_SELECT_ALL_LABEL_CLASS).text(this._list.option(\"selectAllText\")).appendTo($selectAll);\r\n        this._list.itemsContainer().prepend($selectAll);\r\n        this._updateSelectAllState();\r\n        this._attachSelectAllHandler()\r\n    },\r\n    _attachSelectAllHandler: function() {\r\n        this._selectAllCheckBox.option(\"onValueChanged\", this._selectAllHandler.bind(this));\r\n        _events_engine.default.off(this._$selectAll, CLICK_EVENT_NAME);\r\n        _events_engine.default.on(this._$selectAll, CLICK_EVENT_NAME, this._selectAllClickHandler.bind(this))\r\n    },\r\n    _selectAllHandler: function(e) {\r\n        e.event && e.event.stopPropagation();\r\n        var isSelectedAll = this._selectAllCheckBox.option(\"value\");\r\n        var result = this._list._createActionByOption(\"onSelectAllValueChanged\")({\r\n            value: isSelectedAll\r\n        });\r\n        if (false === result) {\r\n            return\r\n        }\r\n        e.event && this._list._saveSelectionChangeEvent(e.event);\r\n        if (true === isSelectedAll) {\r\n            this._selectAllItems()\r\n        } else {\r\n            if (false === isSelectedAll) {\r\n                this._unselectAllItems()\r\n            }\r\n        }\r\n    },\r\n    _checkSelectAllCapability: function() {\r\n        var list = this._list;\r\n        var dataSource = list.getDataSource();\r\n        if (\"allPages\" === list.option(\"selectAllMode\") && list.option(\"grouped\") && (!dataSource || !dataSource.group())) {\r\n            _ui.default.log(\"W1010\");\r\n            return false\r\n        }\r\n        return true\r\n    },\r\n    _selectAllItems: function() {\r\n        if (!this._checkSelectAllCapability()) {\r\n            return\r\n        }\r\n        this._list._selection.selectAll(\"page\" === this._list.option(\"selectAllMode\"))\r\n    },\r\n    _unselectAllItems: function() {\r\n        if (!this._checkSelectAllCapability()) {\r\n            return\r\n        }\r\n        this._list._selection.deselectAll(\"page\" === this._list.option(\"selectAllMode\"))\r\n    },\r\n    _selectAllClickHandler: function(e) {\r\n        this._list._saveSelectionChangeEvent(e);\r\n        this._selectAllCheckBox.option(\"value\", !this._selectAllCheckBox.option(\"value\"))\r\n    },\r\n    _isSelected: function($itemElement) {\r\n        return this._list.isItemSelected($itemElement)\r\n    },\r\n    _processCheckedState: function($itemElement, checked) {\r\n        if (checked) {\r\n            this._list.selectItem($itemElement)\r\n        } else {\r\n            this._list.unselectItem($itemElement)\r\n        }\r\n    },\r\n    dispose: function() {\r\n        this._disposeSelectAll();\r\n        this._list.$element().removeClass(SELECT_DECORATOR_ENABLED_CLASS);\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _disposeSelectAll: function() {\r\n        if (this._$selectAll) {\r\n            this._$selectAll.remove();\r\n            this._$selectAll = null\r\n        }\r\n    }\r\n}));\r\n"]},"metadata":{},"sourceType":"script"}