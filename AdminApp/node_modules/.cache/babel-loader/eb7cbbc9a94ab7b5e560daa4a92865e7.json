{"ast":null,"code":"/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.header_filter.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\n\nvar _uiGrid_core = _interopRequireDefault(require(\"./ui.grid_core.modules\"));\n\nvar _filtering = _interopRequireDefault(require(\"../shared/filtering\"));\n\nvar _uiGrid_core2 = _interopRequireDefault(require(\"./ui.grid_core.utils\"));\n\nvar _uiGrid_core3 = require(\"./ui.grid_core.header_filter_core\");\n\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\n\nvar _click = require(\"../../events/click\");\n\nvar _data = require(\"../../core/utils/data\");\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _position = require(\"../../core/utils/position\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _utils = require(\"../../data/data_source/utils\");\n\nvar _date = _interopRequireDefault(require(\"../../localization/date\"));\n\nvar _variable_wrapper = _interopRequireDefault(require(\"../../core/utils/variable_wrapper\"));\n\nvar _deferred = require(\"../../core/utils/deferred\");\n\nvar _accessibility = require(\"../shared/accessibility\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar DATE_INTERVAL_FORMATS = {\n  month: function (value) {\n    return _date.default.getMonthNames()[value - 1];\n  },\n  quarter: function (value) {\n    return _date.default.format(new Date(2e3, 3 * value - 1), \"quarter\");\n  }\n};\n\nvar HeaderFilterController = _uiGrid_core.default.ViewController.inherit(function () {\n  var getFormatOptions = function (value, column, currentLevel) {\n    var groupInterval = _filtering.default.getGroupInterval(column);\n\n    var result = _uiGrid_core2.default.getFormatOptionsByColumn(column, \"headerFilter\");\n\n    if (groupInterval) {\n      result.groupInterval = groupInterval[currentLevel];\n\n      if (_uiGrid_core2.default.isDateType(column.dataType)) {\n        result.format = DATE_INTERVAL_FORMATS[groupInterval[currentLevel]];\n      } else {\n        if (\"number\" === column.dataType) {\n          result.getDisplayFormat = function () {\n            var formatOptions = {\n              format: column.format,\n              target: \"headerFilter\"\n            };\n\n            var firstValueText = _uiGrid_core2.default.formatValue(value, formatOptions);\n\n            var secondValue = value + groupInterval[currentLevel];\n\n            var secondValueText = _uiGrid_core2.default.formatValue(secondValue, formatOptions);\n\n            return firstValueText && secondValueText ? firstValueText + \" - \" + secondValueText : \"\";\n          };\n        }\n      }\n    }\n\n    return result;\n  };\n\n  return {\n    init: function () {\n      this._columnsController = this.getController(\"columns\");\n      this._dataController = this.getController(\"data\");\n      this._headerFilterView = this.getView(\"headerFilterView\");\n    },\n    _updateSelectedState: function (items, column) {\n      var i = items.length;\n      var isExclude = \"exclude\" === column.filterType;\n\n      while (i--) {\n        var item = items[i];\n\n        if (\"items\" in items[i]) {\n          this._updateSelectedState(items[i].items, column);\n        }\n\n        (0, _uiGrid_core3.updateHeaderFilterItemSelectionState)(item, _uiGrid_core2.default.getIndexByKey(items[i].value, column.filterValues, null) > -1, isExclude);\n      }\n    },\n    _normalizeGroupItem: function (item, currentLevel, options) {\n      var value;\n      var displayValue;\n      var path = options.path;\n      var valueSelector = options.valueSelector;\n      var displaySelector = options.displaySelector;\n      var column = options.column;\n\n      if (valueSelector && displaySelector) {\n        value = valueSelector(item);\n        displayValue = displaySelector(item);\n      } else {\n        value = item.key;\n        displayValue = value;\n      }\n\n      if (!(0, _type.isObject)(item)) {\n        item = {};\n      } else {\n        item = (0, _extend.extend)({}, item);\n      }\n\n      path.push(value);\n\n      if (1 === path.length) {\n        item.value = path[0];\n      } else {\n        item.value = path.join(\"/\");\n      }\n\n      item.text = this.getHeaderItemText(displayValue, column, currentLevel, options.headerFilterOptions);\n      return item;\n    },\n    getHeaderItemText: function (displayValue, column, currentLevel, headerFilterOptions) {\n      var text = _uiGrid_core2.default.formatValue(displayValue, getFormatOptions(displayValue, column, currentLevel));\n\n      if (!text) {\n        text = headerFilterOptions.texts.emptyValue;\n      }\n\n      return text;\n    },\n    _processGroupItems: function (groupItems, currentLevel, path, options) {\n      var that = this;\n      var displaySelector;\n      var valueSelector;\n      var column = options.column;\n      var lookup = column.lookup;\n      var level = options.level;\n      path = path || [];\n      currentLevel = currentLevel || 0;\n\n      if (lookup) {\n        displaySelector = (0, _data.compileGetter)(lookup.displayExpr);\n        valueSelector = (0, _data.compileGetter)(lookup.valueExpr);\n      }\n\n      for (var i = 0; i < groupItems.length; i++) {\n        groupItems[i] = that._normalizeGroupItem(groupItems[i], currentLevel, {\n          column: options.column,\n          headerFilterOptions: options.headerFilterOptions,\n          displaySelector: displaySelector,\n          valueSelector: valueSelector,\n          path: path\n        });\n\n        if (\"items\" in groupItems[i]) {\n          if (currentLevel === level || !(0, _type.isDefined)(groupItems[i].value)) {\n            delete groupItems[i].items;\n          } else {\n            that._processGroupItems(groupItems[i].items, currentLevel + 1, path, options);\n          }\n        }\n\n        path.pop();\n      }\n    },\n    getDataSource: function (column) {\n      var that = this;\n\n      var dataSource = that._dataController.dataSource();\n\n      var group = _uiGrid_core2.default.getHeaderFilterGroupParameters(column, dataSource && dataSource.remoteOperations().grouping);\n\n      var headerFilterDataSource = column.headerFilter && column.headerFilter.dataSource;\n      var headerFilterOptions = that.option(\"headerFilter\");\n      var isLookup = false;\n      var options = {\n        component: that.component\n      };\n\n      if (!dataSource) {\n        return;\n      }\n\n      if ((0, _type.isDefined)(headerFilterDataSource) && !(0, _type.isFunction)(headerFilterDataSource)) {\n        options.dataSource = (0, _utils.normalizeDataSourceOptions)(headerFilterDataSource);\n      } else {\n        if (column.lookup) {\n          isLookup = true;\n          var lookupDataSourceOptions;\n\n          if (column.lookup.items) {\n            lookupDataSourceOptions = column.lookup.items;\n          } else {\n            lookupDataSourceOptions = column.lookup.dataSource;\n\n            if ((0, _type.isFunction)(lookupDataSourceOptions) && !_variable_wrapper.default.isWrapped(lookupDataSourceOptions)) {\n              lookupDataSourceOptions = lookupDataSourceOptions({});\n            }\n          }\n\n          options.dataSource = (0, _utils.normalizeDataSourceOptions)(lookupDataSourceOptions);\n        } else {\n          var cutoffLevel = Array.isArray(group) ? group.length - 1 : 0;\n          that._currentColumn = column;\n\n          var filter = that._dataController.getCombinedFilter();\n\n          that._currentColumn = null;\n          options.dataSource = {\n            filter: filter,\n            group: group,\n            useDefaultSearch: true,\n            load: function (options) {\n              var d = new _deferred.Deferred();\n              options.dataField = column.dataField || column.name;\n              dataSource.load(options).done(function (data) {\n                that._processGroupItems(data, null, null, {\n                  level: cutoffLevel,\n                  column: column,\n                  headerFilterOptions: headerFilterOptions\n                });\n\n                d.resolve(data);\n              }).fail(d.reject);\n              return d;\n            }\n          };\n        }\n      }\n\n      if ((0, _type.isFunction)(headerFilterDataSource)) {\n        headerFilterDataSource.call(column, options);\n      }\n\n      var origPostProcess = options.dataSource.postProcess;\n\n      options.dataSource.postProcess = function (data) {\n        var items = data;\n\n        if (isLookup) {\n          if (0 === this.pageIndex() && !this.searchValue()) {\n            items = items.slice(0);\n            items.unshift(null);\n          }\n\n          that._processGroupItems(items, null, null, {\n            level: 0,\n            column: column,\n            headerFilterOptions: headerFilterOptions\n          });\n        }\n\n        items = origPostProcess && origPostProcess.call(this, items) || items;\n\n        that._updateSelectedState(items, column);\n\n        return items;\n      };\n\n      return options.dataSource;\n    },\n    getCurrentColumn: function () {\n      return this._currentColumn;\n    },\n    showHeaderFilterMenu: function (columnIndex, isGroupPanel) {\n      var columnsController = this._columnsController;\n      var column = (0, _extend.extend)(true, {}, this._columnsController.getColumns()[columnIndex]);\n\n      if (column) {\n        var visibleIndex = columnsController.getVisibleIndex(columnIndex);\n        var view = isGroupPanel ? this.getView(\"headerPanel\") : this.getView(\"columnHeadersView\");\n        var $columnElement = $columnElement || view.getColumnElements().eq(isGroupPanel ? column.groupIndex : visibleIndex);\n        this.showHeaderFilterMenuBase({\n          columnElement: $columnElement,\n          column: column,\n          applyFilter: true,\n          apply: function () {\n            columnsController.columnOption(columnIndex, {\n              filterValues: this.filterValues,\n              filterType: this.filterType\n            });\n          }\n        });\n      }\n    },\n    showHeaderFilterMenuBase: function (options) {\n      var _this = this;\n\n      var that = this;\n      var column = options.column;\n\n      if (column) {\n        var groupInterval = _filtering.default.getGroupInterval(column);\n\n        var dataSource = that._dataController.dataSource();\n\n        var remoteFiltering = dataSource && dataSource.remoteOperations().filtering;\n        (0, _extend.extend)(options, column, {\n          type: groupInterval && groupInterval.length > 1 ? \"tree\" : \"list\",\n          remoteFiltering: remoteFiltering,\n          onShowing: function (e) {\n            var dxResizableInstance = e.component.overlayContent().dxResizable(\"instance\");\n            dxResizableInstance && dxResizableInstance.option(\"onResizeEnd\", function (e) {\n              var columnsController = that.getController(\"columns\");\n              var headerFilterByColumn = columnsController.columnOption(options.dataField, \"headerFilter\");\n              headerFilterByColumn = headerFilterByColumn || {};\n              headerFilterByColumn.width = e.width;\n              headerFilterByColumn.height = e.height;\n              columnsController.columnOption(options.dataField, \"headerFilter\", headerFilterByColumn, true);\n            });\n          },\n          onHidden: function () {\n            return (0, _accessibility.restoreFocus)(_this);\n          }\n        });\n        options.dataSource = that.getDataSource(options);\n\n        if (options.isFilterBuilder) {\n          options.dataSource.filter = null;\n          options.alignment = \"right\";\n        }\n\n        that._headerFilterView.showHeaderFilterMenu(options.columnElement, options);\n      }\n    },\n    hideHeaderFilterMenu: function () {\n      this._headerFilterView.hideHeaderFilterMenu();\n    }\n  };\n}());\n\nvar ColumnHeadersViewHeaderFilterExtender = (0, _extend.extend)({}, _uiGrid_core3.headerFilterMixin, {\n  _renderCellContent: function ($cell, options) {\n    var that = this;\n    var $headerFilterIndicator;\n    var column = options.column;\n\n    if (!column.command && (0, _uiGrid_core3.allowHeaderFiltering)(column) && that.option(\"headerFilter.visible\") && \"header\" === options.rowType) {\n      $headerFilterIndicator = that._applyColumnState({\n        name: \"headerFilter\",\n        rootElement: $cell,\n        column: column,\n        showColumnLines: that.option(\"showColumnLines\")\n      });\n      $headerFilterIndicator && that._subscribeToIndicatorEvent($headerFilterIndicator, column, \"headerFilter\");\n    }\n\n    that.callBase($cell, options);\n  },\n  _subscribeToIndicatorEvent: function ($indicator, column, indicatorName) {\n    var that = this;\n\n    if (\"headerFilter\" === indicatorName) {\n      _events_engine.default.on($indicator, _click.name, that.createAction(function (e) {\n        e.event.stopPropagation();\n        that.getController(\"headerFilter\").showHeaderFilterMenu(column.index, false);\n      }));\n    }\n  },\n  _updateIndicator: function ($cell, column, indicatorName) {\n    var $indicator = this.callBase($cell, column, indicatorName);\n    $indicator && this._subscribeToIndicatorEvent($indicator, column, indicatorName);\n  },\n  _updateHeaderFilterIndicators: function () {\n    if (this.option(\"headerFilter.visible\")) {\n      this._updateIndicators(\"headerFilter\");\n    }\n  },\n  _needUpdateFilterIndicators: function () {\n    return true;\n  },\n  _columnOptionChanged: function (e) {\n    var optionNames = e.optionNames;\n\n    if (_uiGrid_core2.default.checkChanges(optionNames, [\"filterValues\", \"filterType\"])) {\n      if (this._needUpdateFilterIndicators()) {\n        this._updateHeaderFilterIndicators();\n      }\n\n      return;\n    }\n\n    this.callBase(e);\n  }\n});\nvar HeaderPanelHeaderFilterExtender = (0, _extend.extend)({}, _uiGrid_core3.headerFilterMixin, {\n  _createGroupPanelItem: function ($rootElement, groupColumn) {\n    var that = this;\n    var $item = that.callBase.apply(that, arguments);\n    var $headerFilterIndicator;\n\n    if (!groupColumn.command && (0, _uiGrid_core3.allowHeaderFiltering)(groupColumn) && that.option(\"headerFilter.visible\")) {\n      $headerFilterIndicator = that._applyColumnState({\n        name: \"headerFilter\",\n        rootElement: $item,\n        column: {\n          alignment: (0, _position.getDefaultAlignment)(that.option(\"rtlEnabled\")),\n          filterValues: groupColumn.filterValues,\n          allowHeaderFiltering: true\n        },\n        showColumnLines: true\n      });\n      $headerFilterIndicator && _events_engine.default.on($headerFilterIndicator, _click.name, that.createAction(function (e) {\n        var event = e.event;\n        event.stopPropagation();\n        that.getController(\"headerFilter\").showHeaderFilterMenu(groupColumn.index, true);\n      }));\n    }\n\n    return $item;\n  }\n});\n\nfunction invertFilterExpression(filter) {\n  return [\"!\", filter];\n}\n\nvar DataControllerFilterRowExtender = {\n  skipCalculateColumnFilters: function () {\n    return false;\n  },\n  _calculateAdditionalFilter: function () {\n    if (this.skipCalculateColumnFilters()) {\n      return this.callBase();\n    }\n\n    var that = this;\n    var filters = [that.callBase()];\n\n    var columns = that._columnsController.getVisibleColumns(null, true);\n\n    var headerFilterController = that.getController(\"headerFilter\");\n    var currentColumn = headerFilterController.getCurrentColumn();\n    (0, _iterator.each)(columns, function (_, column) {\n      var filter;\n\n      if (currentColumn && currentColumn.index === column.index) {\n        return;\n      }\n\n      if ((0, _uiGrid_core3.allowHeaderFiltering)(column) && column.calculateFilterExpression && Array.isArray(column.filterValues) && column.filterValues.length) {\n        var filterValues = [];\n        (0, _iterator.each)(column.filterValues, function (_, filterValue) {\n          if (Array.isArray(filterValue)) {\n            filter = filterValue;\n          } else {\n            if (column.deserializeValue && !_uiGrid_core2.default.isDateType(column.dataType) && \"number\" !== column.dataType) {\n              filterValue = column.deserializeValue(filterValue);\n            }\n\n            filter = column.createFilterExpression(filterValue, \"=\", \"headerFilter\");\n          }\n\n          if (filter) {\n            filter.columnIndex = column.index;\n          }\n\n          filterValues.push(filter);\n        });\n        filterValues = _uiGrid_core2.default.combineFilters(filterValues, \"or\");\n        filters.push(\"exclude\" === column.filterType ? [\"!\", filterValues] : filterValues);\n      }\n    });\n    return _uiGrid_core2.default.combineFilters(filters);\n  }\n};\nvar _default = {\n  invertFilterExpression: invertFilterExpression,\n  defaultOptions: function () {\n    return {\n      headerFilter: {\n        visible: false,\n        width: 252,\n        height: 325,\n        allowSearch: false,\n        searchTimeout: 500,\n        texts: {\n          emptyValue: _message.default.format(\"dxDataGrid-headerFilterEmptyValue\"),\n          ok: _message.default.format(\"dxDataGrid-headerFilterOK\"),\n          cancel: _message.default.format(\"dxDataGrid-headerFilterCancel\")\n        }\n      }\n    };\n  },\n  controllers: {\n    headerFilter: HeaderFilterController\n  },\n  views: {\n    headerFilterView: _uiGrid_core3.HeaderFilterView\n  },\n  extenders: {\n    controllers: {\n      data: DataControllerFilterRowExtender\n    },\n    views: {\n      columnHeadersView: ColumnHeadersViewHeaderFilterExtender,\n      headerPanel: HeaderPanelHeaderFilterExtender\n    }\n  }\n};\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/node_modules/devextreme/ui/grid_core/ui.grid_core.header_filter.js"],"names":["exports","default","_events_engine","_interopRequireDefault","require","_uiGrid_core","_filtering","_uiGrid_core2","_uiGrid_core3","_message","_click","_data","_iterator","_type","_position","_extend","_utils","_date","_variable_wrapper","_deferred","_accessibility","obj","__esModule","DATE_INTERVAL_FORMATS","month","value","getMonthNames","quarter","format","Date","HeaderFilterController","ViewController","inherit","getFormatOptions","column","currentLevel","groupInterval","getGroupInterval","result","getFormatOptionsByColumn","isDateType","dataType","getDisplayFormat","formatOptions","target","firstValueText","formatValue","secondValue","secondValueText","init","_columnsController","getController","_dataController","_headerFilterView","getView","_updateSelectedState","items","i","length","isExclude","filterType","item","updateHeaderFilterItemSelectionState","getIndexByKey","filterValues","_normalizeGroupItem","options","displayValue","path","valueSelector","displaySelector","key","isObject","extend","push","join","text","getHeaderItemText","headerFilterOptions","texts","emptyValue","_processGroupItems","groupItems","that","lookup","level","compileGetter","displayExpr","valueExpr","isDefined","pop","getDataSource","dataSource","group","getHeaderFilterGroupParameters","remoteOperations","grouping","headerFilterDataSource","headerFilter","option","isLookup","component","isFunction","normalizeDataSourceOptions","lookupDataSourceOptions","isWrapped","cutoffLevel","Array","isArray","_currentColumn","filter","getCombinedFilter","useDefaultSearch","load","d","Deferred","dataField","name","done","data","resolve","fail","reject","call","origPostProcess","postProcess","pageIndex","searchValue","slice","unshift","getCurrentColumn","showHeaderFilterMenu","columnIndex","isGroupPanel","columnsController","getColumns","visibleIndex","getVisibleIndex","view","$columnElement","getColumnElements","eq","groupIndex","showHeaderFilterMenuBase","columnElement","applyFilter","apply","columnOption","_this","remoteFiltering","filtering","type","onShowing","e","dxResizableInstance","overlayContent","dxResizable","headerFilterByColumn","width","height","onHidden","restoreFocus","isFilterBuilder","alignment","hideHeaderFilterMenu","ColumnHeadersViewHeaderFilterExtender","headerFilterMixin","_renderCellContent","$cell","$headerFilterIndicator","command","allowHeaderFiltering","rowType","_applyColumnState","rootElement","showColumnLines","_subscribeToIndicatorEvent","callBase","$indicator","indicatorName","on","createAction","event","stopPropagation","index","_updateIndicator","_updateHeaderFilterIndicators","_updateIndicators","_needUpdateFilterIndicators","_columnOptionChanged","optionNames","checkChanges","HeaderPanelHeaderFilterExtender","_createGroupPanelItem","$rootElement","groupColumn","$item","arguments","getDefaultAlignment","invertFilterExpression","DataControllerFilterRowExtender","skipCalculateColumnFilters","_calculateAdditionalFilter","filters","columns","getVisibleColumns","headerFilterController","currentColumn","each","_","calculateFilterExpression","filterValue","deserializeValue","createFilterExpression","combineFilters","_default","defaultOptions","visible","allowSearch","searchTimeout","ok","cancel","controllers","views","headerFilterView","HeaderFilterView","extenders","columnHeadersView","headerPanel","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.header_filter.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _uiGrid_core = _interopRequireDefault(require(\"./ui.grid_core.modules\"));\r\nvar _filtering = _interopRequireDefault(require(\"../shared/filtering\"));\r\nvar _uiGrid_core2 = _interopRequireDefault(require(\"./ui.grid_core.utils\"));\r\nvar _uiGrid_core3 = require(\"./ui.grid_core.header_filter_core\");\r\nvar _message = _interopRequireDefault(require(\"../../localization/message\"));\r\nvar _click = require(\"../../events/click\");\r\nvar _data = require(\"../../core/utils/data\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _position = require(\"../../core/utils/position\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _utils = require(\"../../data/data_source/utils\");\r\nvar _date = _interopRequireDefault(require(\"../../localization/date\"));\r\nvar _variable_wrapper = _interopRequireDefault(require(\"../../core/utils/variable_wrapper\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _accessibility = require(\"../shared/accessibility\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar DATE_INTERVAL_FORMATS = {\r\n    month: function(value) {\r\n        return _date.default.getMonthNames()[value - 1]\r\n    },\r\n    quarter: function(value) {\r\n        return _date.default.format(new Date(2e3, 3 * value - 1), \"quarter\")\r\n    }\r\n};\r\nvar HeaderFilterController = _uiGrid_core.default.ViewController.inherit(function() {\r\n    var getFormatOptions = function(value, column, currentLevel) {\r\n        var groupInterval = _filtering.default.getGroupInterval(column);\r\n        var result = _uiGrid_core2.default.getFormatOptionsByColumn(column, \"headerFilter\");\r\n        if (groupInterval) {\r\n            result.groupInterval = groupInterval[currentLevel];\r\n            if (_uiGrid_core2.default.isDateType(column.dataType)) {\r\n                result.format = DATE_INTERVAL_FORMATS[groupInterval[currentLevel]]\r\n            } else {\r\n                if (\"number\" === column.dataType) {\r\n                    result.getDisplayFormat = function() {\r\n                        var formatOptions = {\r\n                            format: column.format,\r\n                            target: \"headerFilter\"\r\n                        };\r\n                        var firstValueText = _uiGrid_core2.default.formatValue(value, formatOptions);\r\n                        var secondValue = value + groupInterval[currentLevel];\r\n                        var secondValueText = _uiGrid_core2.default.formatValue(secondValue, formatOptions);\r\n                        return firstValueText && secondValueText ? firstValueText + \" - \" + secondValueText : \"\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return result\r\n    };\r\n    return {\r\n        init: function() {\r\n            this._columnsController = this.getController(\"columns\");\r\n            this._dataController = this.getController(\"data\");\r\n            this._headerFilterView = this.getView(\"headerFilterView\")\r\n        },\r\n        _updateSelectedState: function(items, column) {\r\n            var i = items.length;\r\n            var isExclude = \"exclude\" === column.filterType;\r\n            while (i--) {\r\n                var item = items[i];\r\n                if (\"items\" in items[i]) {\r\n                    this._updateSelectedState(items[i].items, column)\r\n                }(0, _uiGrid_core3.updateHeaderFilterItemSelectionState)(item, _uiGrid_core2.default.getIndexByKey(items[i].value, column.filterValues, null) > -1, isExclude)\r\n            }\r\n        },\r\n        _normalizeGroupItem: function(item, currentLevel, options) {\r\n            var value;\r\n            var displayValue;\r\n            var path = options.path;\r\n            var valueSelector = options.valueSelector;\r\n            var displaySelector = options.displaySelector;\r\n            var column = options.column;\r\n            if (valueSelector && displaySelector) {\r\n                value = valueSelector(item);\r\n                displayValue = displaySelector(item)\r\n            } else {\r\n                value = item.key;\r\n                displayValue = value\r\n            }\r\n            if (!(0, _type.isObject)(item)) {\r\n                item = {}\r\n            } else {\r\n                item = (0, _extend.extend)({}, item)\r\n            }\r\n            path.push(value);\r\n            if (1 === path.length) {\r\n                item.value = path[0]\r\n            } else {\r\n                item.value = path.join(\"/\")\r\n            }\r\n            item.text = this.getHeaderItemText(displayValue, column, currentLevel, options.headerFilterOptions);\r\n            return item\r\n        },\r\n        getHeaderItemText: function(displayValue, column, currentLevel, headerFilterOptions) {\r\n            var text = _uiGrid_core2.default.formatValue(displayValue, getFormatOptions(displayValue, column, currentLevel));\r\n            if (!text) {\r\n                text = headerFilterOptions.texts.emptyValue\r\n            }\r\n            return text\r\n        },\r\n        _processGroupItems: function(groupItems, currentLevel, path, options) {\r\n            var that = this;\r\n            var displaySelector;\r\n            var valueSelector;\r\n            var column = options.column;\r\n            var lookup = column.lookup;\r\n            var level = options.level;\r\n            path = path || [];\r\n            currentLevel = currentLevel || 0;\r\n            if (lookup) {\r\n                displaySelector = (0, _data.compileGetter)(lookup.displayExpr);\r\n                valueSelector = (0, _data.compileGetter)(lookup.valueExpr)\r\n            }\r\n            for (var i = 0; i < groupItems.length; i++) {\r\n                groupItems[i] = that._normalizeGroupItem(groupItems[i], currentLevel, {\r\n                    column: options.column,\r\n                    headerFilterOptions: options.headerFilterOptions,\r\n                    displaySelector: displaySelector,\r\n                    valueSelector: valueSelector,\r\n                    path: path\r\n                });\r\n                if (\"items\" in groupItems[i]) {\r\n                    if (currentLevel === level || !(0, _type.isDefined)(groupItems[i].value)) {\r\n                        delete groupItems[i].items\r\n                    } else {\r\n                        that._processGroupItems(groupItems[i].items, currentLevel + 1, path, options)\r\n                    }\r\n                }\r\n                path.pop()\r\n            }\r\n        },\r\n        getDataSource: function(column) {\r\n            var that = this;\r\n            var dataSource = that._dataController.dataSource();\r\n            var group = _uiGrid_core2.default.getHeaderFilterGroupParameters(column, dataSource && dataSource.remoteOperations().grouping);\r\n            var headerFilterDataSource = column.headerFilter && column.headerFilter.dataSource;\r\n            var headerFilterOptions = that.option(\"headerFilter\");\r\n            var isLookup = false;\r\n            var options = {\r\n                component: that.component\r\n            };\r\n            if (!dataSource) {\r\n                return\r\n            }\r\n            if ((0, _type.isDefined)(headerFilterDataSource) && !(0, _type.isFunction)(headerFilterDataSource)) {\r\n                options.dataSource = (0, _utils.normalizeDataSourceOptions)(headerFilterDataSource)\r\n            } else {\r\n                if (column.lookup) {\r\n                    isLookup = true;\r\n                    var lookupDataSourceOptions;\r\n                    if (column.lookup.items) {\r\n                        lookupDataSourceOptions = column.lookup.items\r\n                    } else {\r\n                        lookupDataSourceOptions = column.lookup.dataSource;\r\n                        if ((0, _type.isFunction)(lookupDataSourceOptions) && !_variable_wrapper.default.isWrapped(lookupDataSourceOptions)) {\r\n                            lookupDataSourceOptions = lookupDataSourceOptions({})\r\n                        }\r\n                    }\r\n                    options.dataSource = (0, _utils.normalizeDataSourceOptions)(lookupDataSourceOptions)\r\n                } else {\r\n                    var cutoffLevel = Array.isArray(group) ? group.length - 1 : 0;\r\n                    that._currentColumn = column;\r\n                    var filter = that._dataController.getCombinedFilter();\r\n                    that._currentColumn = null;\r\n                    options.dataSource = {\r\n                        filter: filter,\r\n                        group: group,\r\n                        useDefaultSearch: true,\r\n                        load: function(options) {\r\n                            var d = new _deferred.Deferred;\r\n                            options.dataField = column.dataField || column.name;\r\n                            dataSource.load(options).done(function(data) {\r\n                                that._processGroupItems(data, null, null, {\r\n                                    level: cutoffLevel,\r\n                                    column: column,\r\n                                    headerFilterOptions: headerFilterOptions\r\n                                });\r\n                                d.resolve(data)\r\n                            }).fail(d.reject);\r\n                            return d\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if ((0, _type.isFunction)(headerFilterDataSource)) {\r\n                headerFilterDataSource.call(column, options)\r\n            }\r\n            var origPostProcess = options.dataSource.postProcess;\r\n            options.dataSource.postProcess = function(data) {\r\n                var items = data;\r\n                if (isLookup) {\r\n                    if (0 === this.pageIndex() && !this.searchValue()) {\r\n                        items = items.slice(0);\r\n                        items.unshift(null)\r\n                    }\r\n                    that._processGroupItems(items, null, null, {\r\n                        level: 0,\r\n                        column: column,\r\n                        headerFilterOptions: headerFilterOptions\r\n                    })\r\n                }\r\n                items = origPostProcess && origPostProcess.call(this, items) || items;\r\n                that._updateSelectedState(items, column);\r\n                return items\r\n            };\r\n            return options.dataSource\r\n        },\r\n        getCurrentColumn: function() {\r\n            return this._currentColumn\r\n        },\r\n        showHeaderFilterMenu: function(columnIndex, isGroupPanel) {\r\n            var columnsController = this._columnsController;\r\n            var column = (0, _extend.extend)(true, {}, this._columnsController.getColumns()[columnIndex]);\r\n            if (column) {\r\n                var visibleIndex = columnsController.getVisibleIndex(columnIndex);\r\n                var view = isGroupPanel ? this.getView(\"headerPanel\") : this.getView(\"columnHeadersView\");\r\n                var $columnElement = $columnElement || view.getColumnElements().eq(isGroupPanel ? column.groupIndex : visibleIndex);\r\n                this.showHeaderFilterMenuBase({\r\n                    columnElement: $columnElement,\r\n                    column: column,\r\n                    applyFilter: true,\r\n                    apply: function() {\r\n                        columnsController.columnOption(columnIndex, {\r\n                            filterValues: this.filterValues,\r\n                            filterType: this.filterType\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        showHeaderFilterMenuBase: function(options) {\r\n            var _this = this;\r\n            var that = this;\r\n            var column = options.column;\r\n            if (column) {\r\n                var groupInterval = _filtering.default.getGroupInterval(column);\r\n                var dataSource = that._dataController.dataSource();\r\n                var remoteFiltering = dataSource && dataSource.remoteOperations().filtering;\r\n                (0, _extend.extend)(options, column, {\r\n                    type: groupInterval && groupInterval.length > 1 ? \"tree\" : \"list\",\r\n                    remoteFiltering: remoteFiltering,\r\n                    onShowing: function(e) {\r\n                        var dxResizableInstance = e.component.overlayContent().dxResizable(\"instance\");\r\n                        dxResizableInstance && dxResizableInstance.option(\"onResizeEnd\", function(e) {\r\n                            var columnsController = that.getController(\"columns\");\r\n                            var headerFilterByColumn = columnsController.columnOption(options.dataField, \"headerFilter\");\r\n                            headerFilterByColumn = headerFilterByColumn || {};\r\n                            headerFilterByColumn.width = e.width;\r\n                            headerFilterByColumn.height = e.height;\r\n                            columnsController.columnOption(options.dataField, \"headerFilter\", headerFilterByColumn, true)\r\n                        })\r\n                    },\r\n                    onHidden: function() {\r\n                        return (0, _accessibility.restoreFocus)(_this)\r\n                    }\r\n                });\r\n                options.dataSource = that.getDataSource(options);\r\n                if (options.isFilterBuilder) {\r\n                    options.dataSource.filter = null;\r\n                    options.alignment = \"right\"\r\n                }\r\n                that._headerFilterView.showHeaderFilterMenu(options.columnElement, options)\r\n            }\r\n        },\r\n        hideHeaderFilterMenu: function() {\r\n            this._headerFilterView.hideHeaderFilterMenu()\r\n        }\r\n    }\r\n}());\r\nvar ColumnHeadersViewHeaderFilterExtender = (0, _extend.extend)({}, _uiGrid_core3.headerFilterMixin, {\r\n    _renderCellContent: function($cell, options) {\r\n        var that = this;\r\n        var $headerFilterIndicator;\r\n        var column = options.column;\r\n        if (!column.command && (0, _uiGrid_core3.allowHeaderFiltering)(column) && that.option(\"headerFilter.visible\") && \"header\" === options.rowType) {\r\n            $headerFilterIndicator = that._applyColumnState({\r\n                name: \"headerFilter\",\r\n                rootElement: $cell,\r\n                column: column,\r\n                showColumnLines: that.option(\"showColumnLines\")\r\n            });\r\n            $headerFilterIndicator && that._subscribeToIndicatorEvent($headerFilterIndicator, column, \"headerFilter\")\r\n        }\r\n        that.callBase($cell, options)\r\n    },\r\n    _subscribeToIndicatorEvent: function($indicator, column, indicatorName) {\r\n        var that = this;\r\n        if (\"headerFilter\" === indicatorName) {\r\n            _events_engine.default.on($indicator, _click.name, that.createAction(function(e) {\r\n                e.event.stopPropagation();\r\n                that.getController(\"headerFilter\").showHeaderFilterMenu(column.index, false)\r\n            }))\r\n        }\r\n    },\r\n    _updateIndicator: function($cell, column, indicatorName) {\r\n        var $indicator = this.callBase($cell, column, indicatorName);\r\n        $indicator && this._subscribeToIndicatorEvent($indicator, column, indicatorName)\r\n    },\r\n    _updateHeaderFilterIndicators: function() {\r\n        if (this.option(\"headerFilter.visible\")) {\r\n            this._updateIndicators(\"headerFilter\")\r\n        }\r\n    },\r\n    _needUpdateFilterIndicators: function() {\r\n        return true\r\n    },\r\n    _columnOptionChanged: function(e) {\r\n        var optionNames = e.optionNames;\r\n        if (_uiGrid_core2.default.checkChanges(optionNames, [\"filterValues\", \"filterType\"])) {\r\n            if (this._needUpdateFilterIndicators()) {\r\n                this._updateHeaderFilterIndicators()\r\n            }\r\n            return\r\n        }\r\n        this.callBase(e)\r\n    }\r\n});\r\nvar HeaderPanelHeaderFilterExtender = (0, _extend.extend)({}, _uiGrid_core3.headerFilterMixin, {\r\n    _createGroupPanelItem: function($rootElement, groupColumn) {\r\n        var that = this;\r\n        var $item = that.callBase.apply(that, arguments);\r\n        var $headerFilterIndicator;\r\n        if (!groupColumn.command && (0, _uiGrid_core3.allowHeaderFiltering)(groupColumn) && that.option(\"headerFilter.visible\")) {\r\n            $headerFilterIndicator = that._applyColumnState({\r\n                name: \"headerFilter\",\r\n                rootElement: $item,\r\n                column: {\r\n                    alignment: (0, _position.getDefaultAlignment)(that.option(\"rtlEnabled\")),\r\n                    filterValues: groupColumn.filterValues,\r\n                    allowHeaderFiltering: true\r\n                },\r\n                showColumnLines: true\r\n            });\r\n            $headerFilterIndicator && _events_engine.default.on($headerFilterIndicator, _click.name, that.createAction(function(e) {\r\n                var event = e.event;\r\n                event.stopPropagation();\r\n                that.getController(\"headerFilter\").showHeaderFilterMenu(groupColumn.index, true)\r\n            }))\r\n        }\r\n        return $item\r\n    }\r\n});\r\n\r\nfunction invertFilterExpression(filter) {\r\n    return [\"!\", filter]\r\n}\r\nvar DataControllerFilterRowExtender = {\r\n    skipCalculateColumnFilters: function() {\r\n        return false\r\n    },\r\n    _calculateAdditionalFilter: function() {\r\n        if (this.skipCalculateColumnFilters()) {\r\n            return this.callBase()\r\n        }\r\n        var that = this;\r\n        var filters = [that.callBase()];\r\n        var columns = that._columnsController.getVisibleColumns(null, true);\r\n        var headerFilterController = that.getController(\"headerFilter\");\r\n        var currentColumn = headerFilterController.getCurrentColumn();\r\n        (0, _iterator.each)(columns, function(_, column) {\r\n            var filter;\r\n            if (currentColumn && currentColumn.index === column.index) {\r\n                return\r\n            }\r\n            if ((0, _uiGrid_core3.allowHeaderFiltering)(column) && column.calculateFilterExpression && Array.isArray(column.filterValues) && column.filterValues.length) {\r\n                var filterValues = [];\r\n                (0, _iterator.each)(column.filterValues, function(_, filterValue) {\r\n                    if (Array.isArray(filterValue)) {\r\n                        filter = filterValue\r\n                    } else {\r\n                        if (column.deserializeValue && !_uiGrid_core2.default.isDateType(column.dataType) && \"number\" !== column.dataType) {\r\n                            filterValue = column.deserializeValue(filterValue)\r\n                        }\r\n                        filter = column.createFilterExpression(filterValue, \"=\", \"headerFilter\")\r\n                    }\r\n                    if (filter) {\r\n                        filter.columnIndex = column.index\r\n                    }\r\n                    filterValues.push(filter)\r\n                });\r\n                filterValues = _uiGrid_core2.default.combineFilters(filterValues, \"or\");\r\n                filters.push(\"exclude\" === column.filterType ? [\"!\", filterValues] : filterValues)\r\n            }\r\n        });\r\n        return _uiGrid_core2.default.combineFilters(filters)\r\n    }\r\n};\r\nvar _default = {\r\n    invertFilterExpression: invertFilterExpression,\r\n    defaultOptions: function() {\r\n        return {\r\n            headerFilter: {\r\n                visible: false,\r\n                width: 252,\r\n                height: 325,\r\n                allowSearch: false,\r\n                searchTimeout: 500,\r\n                texts: {\r\n                    emptyValue: _message.default.format(\"dxDataGrid-headerFilterEmptyValue\"),\r\n                    ok: _message.default.format(\"dxDataGrid-headerFilterOK\"),\r\n                    cancel: _message.default.format(\"dxDataGrid-headerFilterCancel\")\r\n                }\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        headerFilter: HeaderFilterController\r\n    },\r\n    views: {\r\n        headerFilterView: _uiGrid_core3.HeaderFilterView\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: DataControllerFilterRowExtender\r\n        },\r\n        views: {\r\n            columnHeadersView: ColumnHeadersViewHeaderFilterExtender,\r\n            headerPanel: HeaderPanelHeaderFilterExtender\r\n        }\r\n    }\r\n};\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}