{"ast":null,"code":"/**\r\n * DevExtreme (ui/date_box/ui.date_utils.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\n\nvar _date_serialization = _interopRequireDefault(require(\"../../core/utils/date_serialization\"));\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _date = _interopRequireDefault(require(\"../../localization/date\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (\"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator) {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nvar dateComponents = function () {\n  return [\"year\", \"day\", \"month\", \"day\"];\n};\n\nvar ONE_MINUTE = 6e4;\nvar ONE_DAY = 60 * ONE_MINUTE * 24;\nvar ONE_YEAR = 365 * ONE_DAY;\n\nvar getStringFormat = function (format) {\n  var formatType = _typeof(format);\n\n  if (\"string\" === formatType) {\n    return \"format\";\n  }\n\n  if (\"object\" === formatType && void 0 !== format.type) {\n    return format.type;\n  }\n\n  return null;\n};\n\nvar dateUtils = {\n  SUPPORTED_FORMATS: [\"date\", \"time\", \"datetime\"],\n  DATE_COMPONENT_TEXT_FORMATTER: function (value, name) {\n    var $container = (0, _renderer.default)(\"<div>\").addClass(\"dx-dateview-formatter-container\");\n    (0, _renderer.default)(\"<span>\").text(value).addClass(\"dx-dateview-value-formatter\").appendTo($container);\n    (0, _renderer.default)(\"<span>\").text(name).addClass(\"dx-dateview-name-formatter\").appendTo($container);\n    return $container;\n  },\n  ONE_MINUTE: ONE_MINUTE,\n  ONE_DAY: ONE_DAY,\n  ONE_YEAR: ONE_YEAR,\n  MIN_DATEVIEW_DEFAULT_DATE: new Date(1900, 0, 1),\n  MAX_DATEVIEW_DEFAULT_DATE: function () {\n    var newDate = new Date();\n    return new Date(newDate.getFullYear() + 50, newDate.getMonth(), newDate.getDate(), 23, 59, 59);\n  }(),\n  FORMATS_INFO: {\n    date: {\n      getStandardPattern: function () {\n        return \"yyyy-MM-dd\";\n      },\n      components: dateComponents()\n    },\n    time: {\n      getStandardPattern: function () {\n        return \"HH:mm\";\n      },\n      components: [\"hours\", \"minutes\", \"seconds\", \"milliseconds\"]\n    },\n    datetime: {\n      getStandardPattern: function () {\n        var standardPattern;\n        !function () {\n          var androidFormatPattern = \"yyyy-MM-ddTHH:mmZ\";\n          var testDateString = \"2000-01-01T01:01Z\";\n          var $input = (0, _renderer.default)(\"<input>\").attr(\"type\", \"datetime\");\n          $input.val(testDateString);\n\n          if ($input.val()) {\n            standardPattern = androidFormatPattern;\n          }\n        }();\n\n        if (!standardPattern) {\n          standardPattern = \"yyyy-MM-ddTHH:mm:ssZ\";\n        }\n\n        dateUtils.FORMATS_INFO.datetime.getStandardPattern = function () {\n          return standardPattern;\n        };\n\n        return standardPattern;\n      },\n      components: dateComponents().concat([\"hours\", \"minutes\", \"seconds\", \"milliseconds\"])\n    },\n    \"datetime-local\": {\n      getStandardPattern: function () {\n        return \"yyyy-MM-ddTHH:mm:ss\";\n      },\n      components: dateComponents().concat([\"hours\", \"minutes\", \"seconds\"])\n    }\n  },\n  FORMATS_MAP: {\n    date: \"shortdate\",\n    time: \"shorttime\",\n    datetime: \"shortdateshorttime\"\n  },\n  SUBMIT_FORMATS_MAP: {\n    date: \"date\",\n    time: \"time\",\n    datetime: \"datetime-local\"\n  },\n  toStandardDateFormat: function (date, type) {\n    var pattern = dateUtils.FORMATS_INFO[type].getStandardPattern();\n    return _date_serialization.default.serializeDate(date, pattern);\n  },\n  fromStandardDateFormat: function (text) {\n    var date = _date_serialization.default.dateParser(text);\n\n    return (0, _type.isDate)(date) ? date : void 0;\n  },\n  getMaxMonthDay: function (year, month) {\n    return new Date(year, month + 1, 0).getDate();\n  },\n  mergeDates: function (oldValue, newValue, format) {\n    if (!newValue) {\n      return newValue || null;\n    }\n\n    if (!oldValue || isNaN(oldValue.getTime())) {\n      var now = new Date(null);\n      oldValue = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    }\n\n    var result = new Date(oldValue.valueOf());\n    var formatInfo = dateUtils.FORMATS_INFO[format];\n    (0, _iterator.each)(formatInfo.components, function () {\n      var componentInfo = dateUtils.DATE_COMPONENTS_INFO[this];\n      result[componentInfo.setter](newValue[componentInfo.getter]());\n    });\n    return result;\n  },\n  getLongestCaptionIndex: function (captionArray) {\n    var longestIndex = 0;\n    var longestCaptionLength = 0;\n    var i;\n\n    for (i = 0; i < captionArray.length; ++i) {\n      if (captionArray[i].length > longestCaptionLength) {\n        longestIndex = i;\n        longestCaptionLength = captionArray[i].length;\n      }\n    }\n\n    return longestIndex;\n  },\n  formatUsesMonthName: function (format) {\n    return _date.default.formatUsesMonthName(format);\n  },\n  formatUsesDayName: function (format) {\n    return _date.default.formatUsesDayName(format);\n  },\n  getLongestDate: function (format, monthNames, dayNames) {\n    var stringFormat = getStringFormat(format);\n    var month = 9;\n\n    if (!stringFormat || dateUtils.formatUsesMonthName(stringFormat)) {\n      month = dateUtils.getLongestCaptionIndex(monthNames);\n    }\n\n    var longestDate = new Date(1888, month, 21, 23, 59, 59, 999);\n\n    if (!stringFormat || dateUtils.formatUsesDayName(stringFormat)) {\n      var date = longestDate.getDate() - longestDate.getDay() + dateUtils.getLongestCaptionIndex(dayNames);\n      longestDate.setDate(date);\n    }\n\n    return longestDate;\n  },\n  normalizeTime: function (date) {\n    date.setSeconds(0);\n    date.setMilliseconds(0);\n  }\n};\ndateUtils.DATE_COMPONENTS_INFO = {\n  year: {\n    getter: \"getFullYear\",\n    setter: \"setFullYear\",\n    formatter: function (value, date) {\n      var formatDate = new Date(date.getTime());\n      formatDate.setFullYear(value);\n      return _date.default.format(formatDate, \"yyyy\");\n    },\n    startValue: void 0,\n    endValue: void 0\n  },\n  day: {\n    getter: \"getDate\",\n    setter: \"setDate\",\n    formatter: function (value, date) {\n      var formatDate = new Date(date.getTime());\n      formatDate.setDate(value);\n      return _date.default.format(formatDate, \"d\");\n    },\n    startValue: 1,\n    endValue: void 0\n  },\n  month: {\n    getter: \"getMonth\",\n    setter: \"setMonth\",\n    formatter: function (value) {\n      return _date.default.getMonthNames()[value];\n    },\n    startValue: 0,\n    endValue: 11\n  },\n  hours: {\n    getter: \"getHours\",\n    setter: \"setHours\",\n    formatter: function (value) {\n      return _date.default.format(new Date(0, 0, 0, value), \"hour\");\n    },\n    startValue: 0,\n    endValue: 23\n  },\n  minutes: {\n    getter: \"getMinutes\",\n    setter: \"setMinutes\",\n    formatter: function (value) {\n      return _date.default.format(new Date(0, 0, 0, 0, value), \"minute\");\n    },\n    startValue: 0,\n    endValue: 59\n  },\n  seconds: {\n    getter: \"getSeconds\",\n    setter: \"setSeconds\",\n    formatter: function (value) {\n      return _date.default.format(new Date(0, 0, 0, 0, 0, value), \"second\");\n    },\n    startValue: 0,\n    endValue: 59\n  },\n  milliseconds: {\n    getter: \"getMilliseconds\",\n    setter: \"setMilliseconds\",\n    formatter: function (value) {\n      return _date.default.format(new Date(0, 0, 0, 0, 0, 0, value), \"millisecond\");\n    },\n    startValue: 0,\n    endValue: 999\n  }\n};\nvar _default = dateUtils;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/node_modules/devextreme/ui/date_box/ui.date_utils.js"],"names":["exports","default","_renderer","_interopRequireDefault","require","_date_serialization","_type","_iterator","_date","obj","__esModule","_typeof","Symbol","iterator","constructor","prototype","dateComponents","ONE_MINUTE","ONE_DAY","ONE_YEAR","getStringFormat","format","formatType","type","dateUtils","SUPPORTED_FORMATS","DATE_COMPONENT_TEXT_FORMATTER","value","name","$container","addClass","text","appendTo","MIN_DATEVIEW_DEFAULT_DATE","Date","MAX_DATEVIEW_DEFAULT_DATE","newDate","getFullYear","getMonth","getDate","FORMATS_INFO","date","getStandardPattern","components","time","datetime","standardPattern","androidFormatPattern","testDateString","$input","attr","val","concat","FORMATS_MAP","SUBMIT_FORMATS_MAP","toStandardDateFormat","pattern","serializeDate","fromStandardDateFormat","dateParser","isDate","getMaxMonthDay","year","month","mergeDates","oldValue","newValue","isNaN","getTime","now","result","valueOf","formatInfo","each","componentInfo","DATE_COMPONENTS_INFO","setter","getter","getLongestCaptionIndex","captionArray","longestIndex","longestCaptionLength","i","length","formatUsesMonthName","formatUsesDayName","getLongestDate","monthNames","dayNames","stringFormat","longestDate","getDay","setDate","normalizeTime","setSeconds","setMilliseconds","formatter","formatDate","setFullYear","startValue","endValue","day","getMonthNames","hours","minutes","seconds","milliseconds","_default","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/date_box/ui.date_utils.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _date_serialization = _interopRequireDefault(require(\"../../core/utils/date_serialization\"));\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _date = _interopRequireDefault(require(\"../../localization/date\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\n\r\nfunction _typeof(obj) {\r\n    \"@babel/helpers - typeof\";\r\n    if (\"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator) {\r\n        _typeof = function(obj) {\r\n            return typeof obj\r\n        }\r\n    } else {\r\n        _typeof = function(obj) {\r\n            return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n        }\r\n    }\r\n    return _typeof(obj)\r\n}\r\nvar dateComponents = function() {\r\n    return [\"year\", \"day\", \"month\", \"day\"]\r\n};\r\nvar ONE_MINUTE = 6e4;\r\nvar ONE_DAY = 60 * ONE_MINUTE * 24;\r\nvar ONE_YEAR = 365 * ONE_DAY;\r\nvar getStringFormat = function(format) {\r\n    var formatType = _typeof(format);\r\n    if (\"string\" === formatType) {\r\n        return \"format\"\r\n    }\r\n    if (\"object\" === formatType && void 0 !== format.type) {\r\n        return format.type\r\n    }\r\n    return null\r\n};\r\nvar dateUtils = {\r\n    SUPPORTED_FORMATS: [\"date\", \"time\", \"datetime\"],\r\n    DATE_COMPONENT_TEXT_FORMATTER: function(value, name) {\r\n        var $container = (0, _renderer.default)(\"<div>\").addClass(\"dx-dateview-formatter-container\");\r\n        (0, _renderer.default)(\"<span>\").text(value).addClass(\"dx-dateview-value-formatter\").appendTo($container);\r\n        (0, _renderer.default)(\"<span>\").text(name).addClass(\"dx-dateview-name-formatter\").appendTo($container);\r\n        return $container\r\n    },\r\n    ONE_MINUTE: ONE_MINUTE,\r\n    ONE_DAY: ONE_DAY,\r\n    ONE_YEAR: ONE_YEAR,\r\n    MIN_DATEVIEW_DEFAULT_DATE: new Date(1900, 0, 1),\r\n    MAX_DATEVIEW_DEFAULT_DATE: function() {\r\n        var newDate = new Date;\r\n        return new Date(newDate.getFullYear() + 50, newDate.getMonth(), newDate.getDate(), 23, 59, 59)\r\n    }(),\r\n    FORMATS_INFO: {\r\n        date: {\r\n            getStandardPattern: function() {\r\n                return \"yyyy-MM-dd\"\r\n            },\r\n            components: dateComponents()\r\n        },\r\n        time: {\r\n            getStandardPattern: function() {\r\n                return \"HH:mm\"\r\n            },\r\n            components: [\"hours\", \"minutes\", \"seconds\", \"milliseconds\"]\r\n        },\r\n        datetime: {\r\n            getStandardPattern: function() {\r\n                var standardPattern;\r\n                ! function() {\r\n                    var androidFormatPattern = \"yyyy-MM-ddTHH:mmZ\";\r\n                    var testDateString = \"2000-01-01T01:01Z\";\r\n                    var $input = (0, _renderer.default)(\"<input>\").attr(\"type\", \"datetime\");\r\n                    $input.val(testDateString);\r\n                    if ($input.val()) {\r\n                        standardPattern = androidFormatPattern\r\n                    }\r\n                }();\r\n                if (!standardPattern) {\r\n                    standardPattern = \"yyyy-MM-ddTHH:mm:ssZ\"\r\n                }\r\n                dateUtils.FORMATS_INFO.datetime.getStandardPattern = function() {\r\n                    return standardPattern\r\n                };\r\n                return standardPattern\r\n            },\r\n            components: dateComponents().concat([\"hours\", \"minutes\", \"seconds\", \"milliseconds\"])\r\n        },\r\n        \"datetime-local\": {\r\n            getStandardPattern: function() {\r\n                return \"yyyy-MM-ddTHH:mm:ss\"\r\n            },\r\n            components: dateComponents().concat([\"hours\", \"minutes\", \"seconds\"])\r\n        }\r\n    },\r\n    FORMATS_MAP: {\r\n        date: \"shortdate\",\r\n        time: \"shorttime\",\r\n        datetime: \"shortdateshorttime\"\r\n    },\r\n    SUBMIT_FORMATS_MAP: {\r\n        date: \"date\",\r\n        time: \"time\",\r\n        datetime: \"datetime-local\"\r\n    },\r\n    toStandardDateFormat: function(date, type) {\r\n        var pattern = dateUtils.FORMATS_INFO[type].getStandardPattern();\r\n        return _date_serialization.default.serializeDate(date, pattern)\r\n    },\r\n    fromStandardDateFormat: function(text) {\r\n        var date = _date_serialization.default.dateParser(text);\r\n        return (0, _type.isDate)(date) ? date : void 0\r\n    },\r\n    getMaxMonthDay: function(year, month) {\r\n        return new Date(year, month + 1, 0).getDate()\r\n    },\r\n    mergeDates: function(oldValue, newValue, format) {\r\n        if (!newValue) {\r\n            return newValue || null\r\n        }\r\n        if (!oldValue || isNaN(oldValue.getTime())) {\r\n            var now = new Date(null);\r\n            oldValue = new Date(now.getFullYear(), now.getMonth(), now.getDate())\r\n        }\r\n        var result = new Date(oldValue.valueOf());\r\n        var formatInfo = dateUtils.FORMATS_INFO[format];\r\n        (0, _iterator.each)(formatInfo.components, function() {\r\n            var componentInfo = dateUtils.DATE_COMPONENTS_INFO[this];\r\n            result[componentInfo.setter](newValue[componentInfo.getter]())\r\n        });\r\n        return result\r\n    },\r\n    getLongestCaptionIndex: function(captionArray) {\r\n        var longestIndex = 0;\r\n        var longestCaptionLength = 0;\r\n        var i;\r\n        for (i = 0; i < captionArray.length; ++i) {\r\n            if (captionArray[i].length > longestCaptionLength) {\r\n                longestIndex = i;\r\n                longestCaptionLength = captionArray[i].length\r\n            }\r\n        }\r\n        return longestIndex\r\n    },\r\n    formatUsesMonthName: function(format) {\r\n        return _date.default.formatUsesMonthName(format)\r\n    },\r\n    formatUsesDayName: function(format) {\r\n        return _date.default.formatUsesDayName(format)\r\n    },\r\n    getLongestDate: function(format, monthNames, dayNames) {\r\n        var stringFormat = getStringFormat(format);\r\n        var month = 9;\r\n        if (!stringFormat || dateUtils.formatUsesMonthName(stringFormat)) {\r\n            month = dateUtils.getLongestCaptionIndex(monthNames)\r\n        }\r\n        var longestDate = new Date(1888, month, 21, 23, 59, 59, 999);\r\n        if (!stringFormat || dateUtils.formatUsesDayName(stringFormat)) {\r\n            var date = longestDate.getDate() - longestDate.getDay() + dateUtils.getLongestCaptionIndex(dayNames);\r\n            longestDate.setDate(date)\r\n        }\r\n        return longestDate\r\n    },\r\n    normalizeTime: function(date) {\r\n        date.setSeconds(0);\r\n        date.setMilliseconds(0)\r\n    }\r\n};\r\ndateUtils.DATE_COMPONENTS_INFO = {\r\n    year: {\r\n        getter: \"getFullYear\",\r\n        setter: \"setFullYear\",\r\n        formatter: function(value, date) {\r\n            var formatDate = new Date(date.getTime());\r\n            formatDate.setFullYear(value);\r\n            return _date.default.format(formatDate, \"yyyy\")\r\n        },\r\n        startValue: void 0,\r\n        endValue: void 0\r\n    },\r\n    day: {\r\n        getter: \"getDate\",\r\n        setter: \"setDate\",\r\n        formatter: function(value, date) {\r\n            var formatDate = new Date(date.getTime());\r\n            formatDate.setDate(value);\r\n            return _date.default.format(formatDate, \"d\")\r\n        },\r\n        startValue: 1,\r\n        endValue: void 0\r\n    },\r\n    month: {\r\n        getter: \"getMonth\",\r\n        setter: \"setMonth\",\r\n        formatter: function(value) {\r\n            return _date.default.getMonthNames()[value]\r\n        },\r\n        startValue: 0,\r\n        endValue: 11\r\n    },\r\n    hours: {\r\n        getter: \"getHours\",\r\n        setter: \"setHours\",\r\n        formatter: function(value) {\r\n            return _date.default.format(new Date(0, 0, 0, value), \"hour\")\r\n        },\r\n        startValue: 0,\r\n        endValue: 23\r\n    },\r\n    minutes: {\r\n        getter: \"getMinutes\",\r\n        setter: \"setMinutes\",\r\n        formatter: function(value) {\r\n            return _date.default.format(new Date(0, 0, 0, 0, value), \"minute\")\r\n        },\r\n        startValue: 0,\r\n        endValue: 59\r\n    },\r\n    seconds: {\r\n        getter: \"getSeconds\",\r\n        setter: \"setSeconds\",\r\n        formatter: function(value) {\r\n            return _date.default.format(new Date(0, 0, 0, 0, 0, value), \"second\")\r\n        },\r\n        startValue: 0,\r\n        endValue: 59\r\n    },\r\n    milliseconds: {\r\n        getter: \"getMilliseconds\",\r\n        setter: \"setMilliseconds\",\r\n        formatter: function(value) {\r\n            return _date.default.format(new Date(0, 0, 0, 0, 0, 0, value), \"millisecond\")\r\n        },\r\n        startValue: 0,\r\n        endValue: 999\r\n    }\r\n};\r\nvar _default = dateUtils;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}