{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CapiniaC\\\\Desktop\\\\Collection\\\\Work\\\\project\\\\security\\\\AdminApp\\\\src\\\\components\\\\pages\\\\viprpit\\\\Vipr-Pit.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Grid, Paper, makeStyles, TableBody, TableRow, Toolbar, InputAdornment, TableCell } from '@material-ui/core';\nimport useTable from \"../../controls/useTable\";\nimport IntTbl from \"./IntTbl\";\nimport Controls from \"../../controls/Controls\";\nimport { Search } from \"@material-ui/icons\";\nimport AddIcon from '@material-ui/icons/Add';\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport ViprTablesViewService from '../../../services/ViprTablesViewService';\nconst useStyles = makeStyles(theme => ({\n  elnotTbl: {\n    margin: theme.spacing(5),\n    padding: theme.spacing(3),\n    width: '25%'\n  },\n  searchInput: {\n    width: '75%'\n  },\n  newButton: {\n    position: 'absolute',\n    right: '10px'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  tableRow: {\n    \"&.Mui-selected, &.Mui-selected:hover\": {\n      backgroundColor: \"red\",\n      \"& > .MuiTableCell-root\": {\n        color: \"black\"\n      }\n    }\n  }\n}));\nconst elnotHead = [{\n  id: 'elnot',\n  label: 'Elnot',\n  width: 50\n}, {\n  label: 'Validation Status',\n  width: 40\n}, {\n  label: 'Validate',\n  width: 40,\n  disableSorting: true\n}];\nconst intHead = [{\n  id: 'elnot',\n  label: 'Elnot',\n  width: 50\n}, {\n  id: 'op_mode_id',\n  label: 'Mode',\n  width: 50\n}, {\n  id: 'rf_mode',\n  label: 'RF Min',\n  width: 50\n}, {\n  id: 'rf_mode',\n  label: 'RF Max',\n  width: 50\n}, {\n  id: 'mode_type',\n  label: 'Mode Type',\n  width: 50\n}, {\n  id: 'pri_seq',\n  label: 'Pri Min',\n  width: 50\n}, {\n  id: 'pri_seq',\n  label: 'Pri Max',\n  width: 50\n}, {\n  id: 'pd_mode',\n  label: 'PD Min',\n  width: 50\n}, {\n  id: 'pd_mode',\n  label: 'PD Max',\n  width: 50\n}, {\n  id: 'sp_mode',\n  label: 'SP Min',\n  width: 50\n}, {\n  id: 'sp_mode',\n  label: 'SP Max',\n  width: 50\n}, {\n  id: 'scan_type',\n  label: 'Scan Type',\n  width: 50\n}];\nexport default function ViprPitComponent() {\n  const classes = useStyles();\n  const [viprView, setViprView] = useState([]);\n  const [recordForEdit, setRecordForEdit] = useState(null);\n  const [openPopup, setOpenPopup] = useState(false);\n  const [filterFn, setFilterFn] = useState({\n    fn: items => {\n      return items;\n    }\n  });\n  const [selectedID, setSelectedID] = useState(null);\n  useEffect(() => {\n    ViprTablesViewService.getViprTablesView().then(response => {\n      setViprView(response.data);\n    });\n  }, []);\n  const {\n    TblContainer,\n    TblHead,\n    TblPagination,\n    recordsAfterPagingAndSorting\n  } = useTable(viprView, elnotHead, filterFn);\n  const {\n    IntContainer,\n    IntHead,\n    IntPagination,\n    intsAfterPagingAndSorting\n  } = IntTbl(viprView, intHead, filterFn);\n\n  const handleSearch = e => {\n    let target = e.target;\n    setFilterFn({\n      fn: items => {\n        if (target.value === \"\") return items;else return items.filter(x => x.elnot.toLowerCase().includes(target.value));\n      }\n    });\n  };\n\n  const openInPopup = item => {\n    setRecordForEdit(item);\n    setOpenPopup(true);\n  };\n\n  const conditionalRowStyles = [{\n    when: item => item.elnot === \"3\",\n    style: {\n      backgroundColor: \"red\"\n    }\n  }];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    xs: 12,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Controls.Input, {\n    label: \"Search Elnot\",\n    className: classes.searchInput,\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 54\n        }\n      }, /*#__PURE__*/React.createElement(Search, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 41\n        }\n      }))\n    },\n    onChange: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Controls.Button, {\n    text: \"Add New\",\n    variant: \"outlined\",\n    startIcon: /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 44\n      }\n    }),\n    className: classes.newButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(TblContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TblHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 33\n    }\n  }, recordsAfterPagingAndSorting(viprView).map(item => /*#__PURE__*/React.createElement(TableRow, {\n    key: item.elnot,\n    hover: true,\n    onClick: () => {\n      setSelectedID(item.elnot);\n    },\n    selected: selectedID === item.elnot,\n    classes: {\n      selected: classes.selected\n    },\n    className: classes.tableRow,\n    conditionalRowStyles: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 46\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    conditionalRowStyles: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 49\n    }\n  }, item.elnot), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Controls.ActionButton, {\n    color: \"primary\",\n    onClick: () => {\n      openInPopup(item);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(EditOutlinedIcon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 57\n    }\n  }))))))), /*#__PURE__*/React.createElement(TblPagination, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(IntContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(IntHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 37\n    }\n  }, intsAfterPagingAndSorting(viprView).map(item => /*#__PURE__*/React.createElement(TableRow, {\n    key: item.elnot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 50\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 53\n    }\n  }, item.elnot), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 53\n    }\n  }, item.op_mode_id), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 53\n    }\n  }, item.rf_mode), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 53\n    }\n  }, item.rf_mode), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 53\n    }\n  }, item.mode_type), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 53\n    }\n  }, item.pri_seq), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 53\n    }\n  }, item.pri_seq), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 53\n    }\n  }, item.pd_mode), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 53\n    }\n  }, item.pd_mode), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 53\n    }\n  }, item.sp_mode), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 53\n    }\n  }, item.sp_mode), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 53\n    }\n  }, item.scan_type))))), /*#__PURE__*/React.createElement(IntPagination, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 33\n    }\n  })))))));\n}","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/AdminApp/src/components/pages/viprpit/Vipr-Pit.js"],"names":["React","useState","useEffect","Grid","Paper","makeStyles","TableBody","TableRow","Toolbar","InputAdornment","TableCell","useTable","IntTbl","Controls","Search","AddIcon","EditOutlinedIcon","ViprTablesViewService","useStyles","theme","elnotTbl","margin","spacing","padding","width","searchInput","newButton","position","right","paper","textAlign","color","palette","text","secondary","tableRow","backgroundColor","elnotHead","id","label","disableSorting","intHead","ViprPitComponent","classes","viprView","setViprView","recordForEdit","setRecordForEdit","openPopup","setOpenPopup","filterFn","setFilterFn","fn","items","selectedID","setSelectedID","getViprTablesView","then","response","data","TblContainer","TblHead","TblPagination","recordsAfterPagingAndSorting","IntContainer","IntHead","IntPagination","intsAfterPagingAndSorting","handleSearch","e","target","value","filter","x","elnot","toLowerCase","includes","openInPopup","item","conditionalRowStyles","when","style","startAdornment","map","selected","op_mode_id","rf_mode","mode_type","pri_seq","pd_mode","sp_mode","scan_type"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {\r\n    Grid, Paper, makeStyles, TableBody, TableRow,\r\n    Toolbar, InputAdornment, TableCell\r\n} from '@material-ui/core';\r\nimport useTable from \"../../controls/useTable\";\r\nimport IntTbl from \"./IntTbl\";\r\nimport Controls from \"../../controls/Controls\";\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\n\r\nimport ViprTablesViewService from '../../../services/ViprTablesViewService';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    elnotTbl: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3),\r\n        width: '25%'\r\n    },\r\n    searchInput: {\r\n        width: '75%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    tableRow: {\r\n        \"&.Mui-selected, &.Mui-selected:hover\": {\r\n                backgroundColor: \"red\",\r\n                \"& > .MuiTableCell-root\": {\r\n                color: \"black\"\r\n            }\r\n        }\r\n    },\r\n}))\r\n\r\nconst elnotHead = [\r\n    { id: 'elnot', label: 'Elnot', width: 50 },\r\n    { label: 'Validation Status', width: 40 },\r\n    { label: 'Validate', width: 40, disableSorting: true },\r\n]\r\n\r\nconst intHead = [\r\n    { id: 'elnot', label: 'Elnot', width: 50 },\r\n    { id: 'op_mode_id', label: 'Mode', width: 50 },\r\n    { id: 'rf_mode', label: 'RF Min', width: 50 },\r\n    { id: 'rf_mode', label: 'RF Max', width: 50 },\r\n    { id: 'mode_type', label: 'Mode Type', width: 50 },\r\n    { id: 'pri_seq', label: 'Pri Min', width: 50 },\r\n    { id: 'pri_seq', label: 'Pri Max', width: 50 },\r\n    { id: 'pd_mode', label: 'PD Min', width: 50 },\r\n    { id: 'pd_mode', label: 'PD Max', width: 50 },\r\n    { id: 'sp_mode', label: 'SP Min', width: 50 },\r\n    { id: 'sp_mode', label: 'SP Max', width: 50 },\r\n    { id: 'scan_type', label: 'Scan Type', width: 50 },\r\n]\r\n\r\n\r\nexport default function ViprPitComponent() {\r\n\r\n    const classes = useStyles();\r\n    const [viprView, setViprView] = useState([])\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    const [selectedID, setSelectedID] = useState(null);\r\n    \r\n    useEffect(() => {\r\n        ViprTablesViewService.getViprTablesView()\r\n        .then(response => {\r\n            setViprView(response.data);\r\n        })\r\n    }, []);\r\n\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    } = useTable(viprView, elnotHead, filterFn);\r\n\r\n    const {\r\n        IntContainer,\r\n        IntHead,\r\n        IntPagination,\r\n        intsAfterPagingAndSorting\r\n    } = IntTbl(viprView, intHead, filterFn);\r\n    \r\n    const handleSearch = e => {\r\n        let target = e.target;\r\n        setFilterFn({\r\n            fn: items => {\r\n                if (target.value === \"\")\r\n                    return items;\r\n                else\r\n                    return items.filter(x => x.elnot.toLowerCase().includes(target.value))\r\n            }\r\n        })\r\n    }\r\n\r\n    const openInPopup = item => {\r\n        setRecordForEdit(item)\r\n        setOpenPopup(true)\r\n    }\r\n\r\n    const conditionalRowStyles = [\r\n        {\r\n          when: item => item.elnot === \"3\",\r\n          style: {\r\n            backgroundColor: \"red\"\r\n          }\r\n        }\r\n    ]\r\n    \r\n    return (\r\n        <>\r\n            <Grid container spacing={3} direction=\"column\">\r\n                <Grid container xs={12} spacing={1}>\r\n                    <Grid item xs={4}>\r\n                        <Paper className={classes.paper}>\r\n                            <Toolbar>\r\n                            <Controls.Input\r\n                                label=\"Search Elnot\"\r\n                                className={classes.searchInput}\r\n                                InputProps={{\r\n                                    startAdornment: (<InputAdornment position=\"start\">\r\n                                        <Search />\r\n                                    </InputAdornment>)\r\n                                }}\r\n                                onChange={handleSearch}\r\n                            />\r\n                            <Controls.Button\r\n                                text=\"Add New\"\r\n                                variant=\"outlined\"\r\n                                startIcon={<AddIcon />}\r\n                                className={classes.newButton}\r\n                            />\r\n                            </Toolbar>\r\n                            <TblContainer>\r\n                                <TblHead />\r\n                                <TableBody>\r\n                                    {\r\n                                        recordsAfterPagingAndSorting(viprView).map(item =>\r\n                                            (<TableRow key={item.elnot}\r\n                                                hover\r\n                                                onClick={() => {\r\n                                                  setSelectedID(item.elnot);\r\n                                                }}\r\n                                                selected={selectedID === item.elnot}\r\n                                                classes={{ selected: classes.selected }}\r\n                                                className={classes.tableRow}\r\n                                                conditionalRowStyles={item}>\r\n                                                <TableCell\r\n                                                    conditionalRowStyles={item}>\r\n                                                    {item.elnot}\r\n                                                </TableCell>\r\n                                                <TableCell></TableCell>\r\n                                                <TableCell>\r\n                                                    <Controls.ActionButton\r\n                                                        color=\"primary\"\r\n                                                        onClick={() => { openInPopup(item) }}>\r\n                                                        <EditOutlinedIcon fontSize=\"small\" />\r\n                                                    </Controls.ActionButton>\r\n                                                </TableCell>\r\n                                            </TableRow>)\r\n                                        )\r\n                                    }\r\n                                </TableBody>\r\n                            </TblContainer>\r\n                            <TblPagination />\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={8}>\r\n                        <Grid item xs={12}>\r\n                            <Paper className={classes.paper}>\r\n                                <IntContainer>\r\n                                    <IntHead />\r\n                                    <TableBody>\r\n                                        {\r\n                                            intsAfterPagingAndSorting(viprView).map(item =>\r\n                                                (<TableRow \r\n                                                    key={item.elnot}\r\n                                                >\r\n                                                    <TableCell>{item.elnot}</TableCell>\r\n                                                    <TableCell>{item.op_mode_id}</TableCell>\r\n                                                    <TableCell>{item.rf_mode}</TableCell>\r\n                                                    <TableCell>{item.rf_mode}</TableCell>\r\n                                                    <TableCell>{item.mode_type}</TableCell>\r\n                                                    <TableCell>{item.pri_seq}</TableCell>\r\n                                                    <TableCell>{item.pri_seq}</TableCell>\r\n                                                    <TableCell>{item.pd_mode}</TableCell>\r\n                                                    <TableCell>{item.pd_mode}</TableCell>\r\n                                                    <TableCell>{item.sp_mode}</TableCell>\r\n                                                    <TableCell>{item.sp_mode}</TableCell>\r\n                                                    <TableCell>{item.scan_type}</TableCell>\r\n                                                </TableRow>)\r\n                                            )\r\n                                        }\r\n                                    </TableBody>\r\n                                </IntContainer>\r\n                                <IntPagination/>\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>    \r\n            </Grid>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}