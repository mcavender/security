{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CapiniaC\\\\Desktop\\\\Collection\\\\Work\\\\project\\\\security\\\\AdminApp\\\\src\\\\components\\\\pages\\\\ListInterceptDataloadRule.js\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport EditInterceptDataloadRule from \"./EditInterceptDataloadDetails\";\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst ListInterceptDataloadRule = () => {\n  const [InterceptDataloadRule, setInterceptDataloadRule] = useState([]); //delete rule\n\n  const deleteInterceptDataloadRule = async id => {\n    try {\n      const deleteInterceptDataloadRule = await fetch(`http://localhost:5000/intercept_dataload_rules/${id}`, {\n        method: \"DELETE\"\n      });\n      console.log(deleteInterceptDataloadRule);\n      setInterceptDataloadRule(InterceptDataloadRule.filter(InterceptDataloadRule => InterceptDataloadRule.intercept_dataload_rule_id !== id));\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const getInterceptDataloadRule = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/intercept_dataload_rules\");\n      const jsonData = await response.json();\n      setInterceptDataloadRule(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getInterceptDataloadRule();\n  }, []);\n  console.log(InterceptDataloadRule);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table mt-5 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, \"Intercept Dataload Rule ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, \"Type\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, \"Comment Value\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, \"RE ID Elnot\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, \"ST Conf\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, \"SP Conf\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, \"IR Conf\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, \"PD Conf\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, \"MT Conf\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, \"MT Conf New MT\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, \"Last Updated By\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, \"Creator\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, \"Created Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }, \"Last Edited\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, \"Hreadcount\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, \"Hreadcount Threshold\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, \"Functions\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, InterceptDataloadRule.map(InterceptDataloadRule => /*#__PURE__*/React.createElement(\"tr\", {\n    key: InterceptDataloadRule.intercept_dataload_rule_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }, InterceptDataloadRule.intercept_dataload_rule_id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }, InterceptDataloadRule.type), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, InterceptDataloadRule.comment_val), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }, InterceptDataloadRule.status), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  }, InterceptDataloadRule.re_id_elnot), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  }, InterceptDataloadRule.st_conf), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }, InterceptDataloadRule.sp_conf), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }, InterceptDataloadRule.ir_conf), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  }, InterceptDataloadRule.pd_conf), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }, InterceptDataloadRule.mt_conf), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, InterceptDataloadRule.mt_conf_new_mt), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  }, InterceptDataloadRule.last_updated_by), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, InterceptDataloadRule.creator), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }, InterceptDataloadRule.created_date), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }, InterceptDataloadRule.last_edited), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }, InterceptDataloadRule.heardcount), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  }, InterceptDataloadRule.heardcount_threshold), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ButtonGroup, {\n    orientation: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(EditInterceptDataloadRule, {\n    InterceptDataloadRule: InterceptDataloadRule,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => deleteInterceptDataloadRule(InterceptDataloadRule.intercept_dataload_rule_id),\n    startIcon: /*#__PURE__*/React.createElement(DeleteIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 52\n      }\n    }),\n    variant: \"contained\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 37\n    }\n  }, \"Delete\"))))))));\n};\n\nexport default ListInterceptDataloadRule;","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/AdminApp/src/components/pages/ListInterceptDataloadRule.js"],"names":["React","Fragment","useEffect","useState","EditInterceptDataloadRule","ButtonGroup","Button","DeleteIcon","ListInterceptDataloadRule","InterceptDataloadRule","setInterceptDataloadRule","deleteInterceptDataloadRule","id","fetch","method","console","log","filter","intercept_dataload_rule_id","err","error","message","getInterceptDataloadRule","response","jsonData","json","map","type","comment_val","status","re_id_elnot","st_conf","sp_conf","ir_conf","pd_conf","mt_conf","mt_conf_new_mt","last_updated_by","creator","created_date","last_edited","heardcount","heardcount_threshold"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\r\nimport EditInterceptDataloadRule from \"./EditInterceptDataloadDetails\";\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst ListInterceptDataloadRule = () => {\r\n\r\n    const [InterceptDataloadRule, setInterceptDataloadRule] = useState([]);\r\n\r\n    //delete rule\r\n\r\n    const deleteInterceptDataloadRule = async id => {\r\n        try {\r\n            const deleteInterceptDataloadRule = await fetch(`http://localhost:5000/intercept_dataload_rules/${id}`, {\r\n                method: \"DELETE\"\r\n            });\r\n\r\n            console.log(deleteInterceptDataloadRule);\r\n            setInterceptDataloadRule(InterceptDataloadRule.filter(InterceptDataloadRule => InterceptDataloadRule.intercept_dataload_rule_id !== id));\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    }\r\n\r\n    const getInterceptDataloadRule = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/intercept_dataload_rules\");\r\n            const jsonData = await response.json();\r\n\r\n            setInterceptDataloadRule(jsonData);\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getInterceptDataloadRule();\r\n    }, []);\r\n\r\n    console.log(InterceptDataloadRule);\r\n    return (\r\n        <Fragment>\r\n            {\" \"}\r\n            <table className=\"table mt-5 text-center\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Intercept Dataload Rule ID</th>\r\n                        <th>Type</th>\r\n                        <th>Comment Value</th>\r\n                        <th>Status</th>\r\n                        <th>RE ID Elnot</th>\r\n                        <th>ST Conf</th>\r\n                        <th>SP Conf</th>\r\n                        <th>IR Conf</th>\r\n                        <th>PD Conf</th>\r\n                        <th>MT Conf</th>\r\n                        <th>MT Conf New MT</th>\r\n                        <th>Last Updated By</th>\r\n                        <th>Creator</th>\r\n                        <th>Created Date</th>\r\n                        <th>Last Edited</th>\r\n                        <th>Hreadcount</th>\r\n                        <th>Hreadcount Threshold</th>\r\n                        <th>Functions</th> \r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {/*\r\n                        <button\r\n                                    className=\"btn btn-danger\"\r\n                                    onClick={() => deleteInterceptDataloadRule(InterceptDataloadRule.intercept_dataload_rule_id)}>\r\n                                    Delete\r\n                        </button>\r\n                    */}\r\n                    {InterceptDataloadRule.map(InterceptDataloadRule => (\r\n                        <tr key={InterceptDataloadRule.intercept_dataload_rule_id}>\r\n                            <td>{InterceptDataloadRule.intercept_dataload_rule_id}</td>\r\n                            <td>{InterceptDataloadRule.type}</td>\r\n                            <td>{InterceptDataloadRule.comment_val}</td>\r\n                            <td>{InterceptDataloadRule.status}</td>\r\n                            <td>{InterceptDataloadRule.re_id_elnot}</td>\r\n                            <td>{InterceptDataloadRule.st_conf}</td>\r\n                            <td>{InterceptDataloadRule.sp_conf}</td>\r\n                            <td>{InterceptDataloadRule.ir_conf}</td>\r\n                            <td>{InterceptDataloadRule.pd_conf}</td>\r\n                            <td>{InterceptDataloadRule.mt_conf}</td>\r\n                            <td>{InterceptDataloadRule.mt_conf_new_mt}</td>\r\n                            <td>{InterceptDataloadRule.last_updated_by}</td>\r\n                            <td>{InterceptDataloadRule.creator}</td>\r\n                            <td>{InterceptDataloadRule.created_date}</td>\r\n                            <td>{InterceptDataloadRule.last_edited}</td>\r\n                            <td>{InterceptDataloadRule.heardcount}</td>\r\n                            <td>{InterceptDataloadRule.heardcount_threshold}</td>\r\n                            <td>\r\n                                <ButtonGroup\r\n                                    orientation=\"vertical\">\r\n                                    <EditInterceptDataloadRule InterceptDataloadRule={InterceptDataloadRule}/>\r\n                                    <Button\r\n                                        onClick={() => deleteInterceptDataloadRule(InterceptDataloadRule.intercept_dataload_rule_id)}\r\n                                        startIcon={<DeleteIcon />}\r\n                                        variant=\"contained\"\r\n                                        color=\"secondary\">\r\n                                        Delete\r\n                                    </Button>\r\n                                </ButtonGroup>                                \r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ListInterceptDataloadRule;"]},"metadata":{},"sourceType":"module"}