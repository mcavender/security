{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CapiniaC\\\\Desktop\\\\Collection\\\\Work\\\\project\\\\security\\\\AdminApp\\\\src\\\\components\\\\login.js\";\nimport React from 'react';\nimport axios from 'axios';\nexport default class Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const data = {\n        username: this.username,\n        password: this.password\n      };\n      console.log(data);\n      axios.post('users', data).then(res => {\n        localStorage.setItem('token', res.token);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n  }\n\n  render() {\n    Popup.create({\n      title: null,\n      content: 'This popup uses the create method directly to get more control. This popup demonstrates custom buttons.',\n      buttons: {\n        left: [{\n          text: 'Cancel',\n          className: 'danger',\n          action: function () {\n            Popup.alert('You pressed the Cancel btn');\n            /** Close this popup. Close will always close the current visible one, if one is visible */\n\n            Popup.close();\n          }\n        }],\n        right: [{\n          text: 'Alt',\n          key: 'ctrl+enter',\n          action: function () {\n            // Passing true as the second argument to the create method\n            // displays it directly, without interupting the queue.\n            Popup.create({\n              title: null,\n              content: 'I was configured to display right away, without affecting the queue. Closing this will display the previously visible popup.',\n              buttons: {\n                left: ['cancel'],\n                right: []\n              }\n            }, true);\n          }\n        }, {\n          text: 'Save',\n          className: 'success',\n          action: function () {\n            Popup.alert('You pressed the Save btn');\n            /** Close this popup. Close will always close the current visible one, if one is visible */\n\n            Popup.close();\n          }\n        }]\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-register-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nav-buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }, \"Login\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      id: \"loginform\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, \"USERNAME\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"username\",\n      onChange: e => this.username = e.target.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, \"PASSWORD\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      onChange: e => this.password = e.target.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, \"Submit\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/AdminApp/src/components/login.js"],"names":["React","axios","Login","Component","handleSubmit","e","preventDefault","data","username","password","console","log","post","then","res","localStorage","setItem","token","catch","err","render","Popup","create","title","content","buttons","left","text","className","action","alert","close","right","key","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default class Login extends React.Component {\r\n    \r\n    handleSubmit = e => {\r\n      e.preventDefault();\r\n  \r\n      const data = {\r\n        username: this.username,\r\n        password: this.password\r\n        }\r\n\r\n        console.log(data);\r\n        \r\n      axios.post('users', data)\r\n        .then(res => {\r\n          localStorage.setItem('token', res.token);\r\n        })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n    };\r\n\r\n  render() {\r\n    Popup.create({\r\n      title: null,\r\n      content: 'This popup uses the create method directly to get more control. This popup demonstrates custom buttons.',\r\n      buttons: {\r\n          left: [{\r\n              text: 'Cancel',\r\n              className: 'danger',\r\n              action: function () {\r\n                  Popup.alert('You pressed the Cancel btn');\r\n  \r\n                  /** Close this popup. Close will always close the current visible one, if one is visible */\r\n                  Popup.close();\r\n              }\r\n          }],\r\n          right: [{\r\n              text: 'Alt',\r\n              key: 'ctrl+enter',\r\n              action: function () {\r\n                  // Passing true as the second argument to the create method\r\n                  // displays it directly, without interupting the queue.\r\n                  Popup.create({\r\n                      title: null,\r\n                      content: 'I was configured to display right away, without affecting the queue. Closing this will display the previously visible popup.',\r\n                      buttons: {\r\n                          left: ['cancel'],\r\n                          right: []\r\n                      }\r\n                  }, true);\r\n              }\r\n          }, {\r\n              text: 'Save',\r\n              className: 'success',\r\n              action: function () {\r\n                  Popup.alert('You pressed the Save btn');\r\n  \r\n                  /** Close this popup. Close will always close the current visible one, if one is visible */\r\n                  Popup.close();\r\n              }\r\n          }]\r\n      }\r\n  });\r\n        return (\r\n          <div className=\"login-register-wrapper\">\r\n            <div className=\"nav-buttons\">\r\n              <button>Login\r\n              </button>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <form id=\"loginform\" onSubmit={ this.handleSubmit }>\r\n                <label htmlFor=\"username\">USERNAME</label>\r\n                    <input type=\"text\" id=\"username\"\r\n                        onChange={e => this.username = e.target.value}/>\r\n                <label htmlFor=\"password\">PASSWORD</label>\r\n                    <input type=\"password\" id=\"password\"\r\n                        onChange={e => this.password = e.target.value}/>\r\n                <button type=\"submit\" className=\"submit\">Submit</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}