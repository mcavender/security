{"ast":null,"code":"/**\r\n * DevExtreme (ui/editor/editor.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\n\nvar _element_data = require(\"../../core/element_data\");\n\nvar _callbacks = _interopRequireDefault(require(\"../../core/utils/callbacks\"));\n\nvar _window = require(\"../../core/utils/window\");\n\nvar _index = require(\"../../events/utils/index\");\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _ui = _interopRequireDefault(require(\"../widget/ui.widget\"));\n\nvar _validation_engine = _interopRequireDefault(require(\"../validation_engine\"));\n\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\n\nvar _validation_message = _interopRequireDefault(require(\"../validation_message\"));\n\nvar _guid = _interopRequireDefault(require(\"../../core/guid\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar INVALID_MESSAGE_AUTO = \"dx-invalid-message-auto\";\nvar READONLY_STATE_CLASS = \"dx-state-readonly\";\nvar INVALID_CLASS = \"dx-invalid\";\nvar DX_INVALID_BADGE_CLASS = \"dx-show-invalid-badge\";\nvar VALIDATION_TARGET = \"dx-validation-target\";\nvar VALIDATION_STATUS_VALID = \"valid\";\nvar VALIDATION_STATUS_INVALID = \"invalid\";\nvar READONLY_NAMESPACE = \"editorReadOnly\";\nvar VALIDATION_MESSAGE_KEYS_MAP = {\n  validationMessageMode: \"mode\",\n  validationMessageOffset: \"offset\",\n  validationBoundary: \"boundary\"\n};\n\nvar Editor = _ui.default.inherit({\n  ctor: function () {\n    this.showValidationMessageTimeout = null;\n    this.validationRequest = (0, _callbacks.default)();\n    this.callBase.apply(this, arguments);\n  },\n  _createElement: function (element) {\n    this.callBase(element);\n    var $element = this.$element();\n\n    if ($element) {\n      (0, _element_data.data)($element[0], VALIDATION_TARGET, this);\n    }\n  },\n  _initOptions: function (options) {\n    this.callBase.apply(this, arguments);\n    this.option(_validation_engine.default.initValidationOptions(options));\n  },\n  _init: function () {\n    this.callBase();\n\n    this._options.cache(\"validationTooltipOptions\", this.option(\"validationTooltipOptions\"));\n\n    var $element = this.$element();\n    $element.addClass(DX_INVALID_BADGE_CLASS);\n  },\n  _getDefaultOptions: function () {\n    return (0, _extend.extend)(this.callBase(), {\n      value: null,\n      name: \"\",\n      onValueChanged: null,\n      readOnly: false,\n      isValid: true,\n      validationError: null,\n      validationErrors: null,\n      validationStatus: VALIDATION_STATUS_VALID,\n      validationMessageMode: \"auto\",\n      validationBoundary: void 0,\n      validationMessageOffset: {\n        h: 0,\n        v: 0\n      },\n      validationTooltipOptions: {}\n    });\n  },\n  _attachKeyboardEvents: function () {\n    if (!this.option(\"readOnly\")) {\n      this.callBase();\n    }\n  },\n  _setOptionsByReference: function () {\n    this.callBase();\n    (0, _extend.extend)(this._optionsByReference, {\n      validationError: true\n    });\n  },\n  _createValueChangeAction: function () {\n    this._valueChangeAction = this._createActionByOption(\"onValueChanged\", {\n      excludeValidators: [\"disabled\", \"readOnly\"]\n    });\n  },\n  _suppressValueChangeAction: function () {\n    this._valueChangeActionSuppressed = true;\n  },\n  _resumeValueChangeAction: function () {\n    this._valueChangeActionSuppressed = false;\n  },\n  _initMarkup: function () {\n    this._toggleReadOnlyState();\n\n    this._setSubmitElementName(this.option(\"name\"));\n\n    this.callBase();\n\n    this._renderValidationState();\n  },\n  _raiseValueChangeAction: function (value, previousValue) {\n    if (!this._valueChangeAction) {\n      this._createValueChangeAction();\n    }\n\n    this._valueChangeAction(this._valueChangeArgs(value, previousValue));\n  },\n  _valueChangeArgs: function (value, previousValue) {\n    return {\n      value: value,\n      previousValue: previousValue,\n      event: this._valueChangeEventInstance\n    };\n  },\n  _saveValueChangeEvent: function (e) {\n    this._valueChangeEventInstance = e;\n  },\n  _focusInHandler: function (e) {\n    var isValidationMessageShownOnFocus = \"auto\" === this.option(\"validationMessageMode\");\n\n    if (this._canValueBeChangedByClick() && isValidationMessageShownOnFocus) {\n      var _this$_validationMess;\n\n      var $validationMessageWrapper = null === (_this$_validationMess = this._validationMessage) || void 0 === _this$_validationMess ? void 0 : _this$_validationMess._wrapper();\n      null === $validationMessageWrapper || void 0 === $validationMessageWrapper ? void 0 : $validationMessageWrapper.removeClass(INVALID_MESSAGE_AUTO);\n      clearTimeout(this.showValidationMessageTimeout);\n      this.showValidationMessageTimeout = setTimeout(function () {\n        return null === $validationMessageWrapper || void 0 === $validationMessageWrapper ? void 0 : $validationMessageWrapper.addClass(INVALID_MESSAGE_AUTO);\n      }, 150);\n    }\n\n    return this.callBase(e);\n  },\n  _canValueBeChangedByClick: function () {\n    return false;\n  },\n  _getValidationErrors: function () {\n    var validationErrors = this.option(\"validationErrors\");\n\n    if (!validationErrors && this.option(\"validationError\")) {\n      validationErrors = [this.option(\"validationError\")];\n    }\n\n    return validationErrors;\n  },\n  _disposeValidationMessage: function () {\n    if (this._$validationMessage) {\n      this._$validationMessage.remove();\n\n      this.setAria(\"describedby\", null);\n      this._$validationMessage = null;\n    }\n  },\n  _toggleValidationClasses: function (isInvalid) {\n    this.$element().toggleClass(INVALID_CLASS, isInvalid);\n    this.setAria(VALIDATION_STATUS_INVALID, isInvalid || void 0);\n  },\n  _renderValidationState: function () {\n    var isValid = this.option(\"isValid\") && this.option(\"validationStatus\") !== VALIDATION_STATUS_INVALID;\n\n    var validationErrors = this._getValidationErrors();\n\n    var $element = this.$element();\n\n    this._toggleValidationClasses(!isValid);\n\n    if (!(0, _window.hasWindow)()) {\n      return;\n    }\n\n    this._disposeValidationMessage();\n\n    if (!isValid && validationErrors) {\n      var _this$option = this.option(),\n          validationMessageMode = _this$option.validationMessageMode,\n          validationMessageOffset = _this$option.validationMessageOffset,\n          validationBoundary = _this$option.validationBoundary,\n          rtlEnabled = _this$option.rtlEnabled;\n\n      this._$validationMessage = (0, _renderer.default)(\"<div>\").appendTo($element);\n      this.setAria(\"describedby\", \"dx-\" + new _guid.default());\n      this._validationMessage = new _validation_message.default(this._$validationMessage, (0, _extend.extend)({\n        validationErrors: validationErrors,\n        rtlEnabled: rtlEnabled,\n        target: this._getValidationMessageTarget(),\n        container: $element,\n        mode: validationMessageMode,\n        positionRequest: \"below\",\n        offset: validationMessageOffset,\n        boundary: validationBoundary,\n        describedElement: this._focusTarget()\n      }, this._options.cache(\"validationTooltipOptions\")));\n\n      this._bindInnerWidgetOptions(this._validationMessage, \"validationTooltipOptions\");\n    }\n  },\n  _getValidationMessageTarget: function () {\n    return this.$element();\n  },\n  _toggleReadOnlyState: function () {\n    var readOnly = this.option(\"readOnly\");\n\n    this._toggleBackspaceHandler(readOnly);\n\n    this.$element().toggleClass(READONLY_STATE_CLASS, !!readOnly);\n    this.setAria(\"readonly\", readOnly || void 0);\n  },\n  _toggleBackspaceHandler: function (isReadOnly) {\n    var $eventTarget = this._keyboardEventBindingTarget();\n\n    var eventName = (0, _index.addNamespace)(\"keydown\", READONLY_NAMESPACE);\n\n    _events_engine.default.off($eventTarget, eventName);\n\n    if (isReadOnly) {\n      _events_engine.default.on($eventTarget, eventName, function (e) {\n        if (\"backspace\" === (0, _index.normalizeKeyName)(e)) {\n          e.preventDefault();\n        }\n      });\n    }\n  },\n  _dispose: function () {\n    var element = this.$element()[0];\n    (0, _element_data.data)(element, VALIDATION_TARGET, null);\n    clearTimeout(this.showValidationMessageTimeout);\n    this.callBase();\n  },\n  _setSubmitElementName: function (name) {\n    var $submitElement = this._getSubmitElement();\n\n    if (!$submitElement) {\n      return;\n    }\n\n    if (name.length > 0) {\n      $submitElement.attr(\"name\", name);\n    } else {\n      $submitElement.removeAttr(\"name\");\n    }\n  },\n  _getSubmitElement: function () {\n    return null;\n  },\n  _setValidationMessageOption: function (_ref) {\n    var _this$_validationMess2;\n\n    var name = _ref.name,\n        value = _ref.value;\n    var optionKey = VALIDATION_MESSAGE_KEYS_MAP[name] ? VALIDATION_MESSAGE_KEYS_MAP[name] : name;\n    null === (_this$_validationMess2 = this._validationMessage) || void 0 === _this$_validationMess2 ? void 0 : _this$_validationMess2.option(optionKey, value);\n  },\n  _optionChanged: function (args) {\n    var _this$_validationMess3;\n\n    switch (args.name) {\n      case \"onValueChanged\":\n        this._createValueChangeAction();\n\n        break;\n\n      case \"readOnly\":\n        this._toggleReadOnlyState();\n\n        this._refreshFocusState();\n\n        break;\n\n      case \"value\":\n        if (args.value != args.previousValue) {\n          this.validationRequest.fire({\n            value: args.value,\n            editor: this\n          });\n        }\n\n        if (!this._valueChangeActionSuppressed) {\n          this._raiseValueChangeAction(args.value, args.previousValue);\n\n          this._saveValueChangeEvent(void 0);\n        }\n\n        break;\n\n      case \"width\":\n        this.callBase(args);\n        null === (_this$_validationMess3 = this._validationMessage) || void 0 === _this$_validationMess3 ? void 0 : _this$_validationMess3.updateMaxWidth();\n        break;\n\n      case \"name\":\n        this._setSubmitElementName(args.value);\n\n        break;\n\n      case \"isValid\":\n      case \"validationError\":\n      case \"validationErrors\":\n      case \"validationStatus\":\n        this.option(_validation_engine.default.synchronizeValidationOptions(args, this.option()));\n\n        this._renderValidationState();\n\n        break;\n\n      case \"validationBoundary\":\n      case \"validationMessageMode\":\n      case \"validationMessageOffset\":\n        this._setValidationMessageOption(args);\n\n        break;\n\n      case \"rtlEnabled\":\n        this._setValidationMessageOption(args);\n\n        this.callBase(args);\n        break;\n\n      case \"validationTooltipOptions\":\n        this._innerWidgetOptionChanged(this._validationMessage, args);\n\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  reset: function () {\n    var defaultOptions = this._getDefaultOptions();\n\n    this.option(\"value\", defaultOptions.value);\n  }\n});\n\nvar _default = Editor;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/node_modules/devextreme/ui/editor/editor.js"],"names":["exports","default","_renderer","_interopRequireDefault","require","_element_data","_callbacks","_window","_index","_extend","_ui","_validation_engine","_events_engine","_validation_message","_guid","obj","__esModule","INVALID_MESSAGE_AUTO","READONLY_STATE_CLASS","INVALID_CLASS","DX_INVALID_BADGE_CLASS","VALIDATION_TARGET","VALIDATION_STATUS_VALID","VALIDATION_STATUS_INVALID","READONLY_NAMESPACE","VALIDATION_MESSAGE_KEYS_MAP","validationMessageMode","validationMessageOffset","validationBoundary","Editor","inherit","ctor","showValidationMessageTimeout","validationRequest","callBase","apply","arguments","_createElement","element","$element","data","_initOptions","options","option","initValidationOptions","_init","_options","cache","addClass","_getDefaultOptions","extend","value","name","onValueChanged","readOnly","isValid","validationError","validationErrors","validationStatus","h","v","validationTooltipOptions","_attachKeyboardEvents","_setOptionsByReference","_optionsByReference","_createValueChangeAction","_valueChangeAction","_createActionByOption","excludeValidators","_suppressValueChangeAction","_valueChangeActionSuppressed","_resumeValueChangeAction","_initMarkup","_toggleReadOnlyState","_setSubmitElementName","_renderValidationState","_raiseValueChangeAction","previousValue","_valueChangeArgs","event","_valueChangeEventInstance","_saveValueChangeEvent","e","_focusInHandler","isValidationMessageShownOnFocus","_canValueBeChangedByClick","_this$_validationMess","$validationMessageWrapper","_validationMessage","_wrapper","removeClass","clearTimeout","setTimeout","_getValidationErrors","_disposeValidationMessage","_$validationMessage","remove","setAria","_toggleValidationClasses","isInvalid","toggleClass","hasWindow","_this$option","rtlEnabled","appendTo","target","_getValidationMessageTarget","container","mode","positionRequest","offset","boundary","describedElement","_focusTarget","_bindInnerWidgetOptions","_toggleBackspaceHandler","isReadOnly","$eventTarget","_keyboardEventBindingTarget","eventName","addNamespace","off","on","normalizeKeyName","preventDefault","_dispose","$submitElement","_getSubmitElement","length","attr","removeAttr","_setValidationMessageOption","_ref","_this$_validationMess2","optionKey","_optionChanged","args","_this$_validationMess3","_refreshFocusState","fire","editor","updateMaxWidth","synchronizeValidationOptions","_innerWidgetOptionChanged","reset","defaultOptions","_default","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/editor/editor.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _element_data = require(\"../../core/element_data\");\r\nvar _callbacks = _interopRequireDefault(require(\"../../core/utils/callbacks\"));\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _index = require(\"../../events/utils/index\");\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _ui = _interopRequireDefault(require(\"../widget/ui.widget\"));\r\nvar _validation_engine = _interopRequireDefault(require(\"../validation_engine\"));\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _validation_message = _interopRequireDefault(require(\"../validation_message\"));\r\nvar _guid = _interopRequireDefault(require(\"../../core/guid\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar INVALID_MESSAGE_AUTO = \"dx-invalid-message-auto\";\r\nvar READONLY_STATE_CLASS = \"dx-state-readonly\";\r\nvar INVALID_CLASS = \"dx-invalid\";\r\nvar DX_INVALID_BADGE_CLASS = \"dx-show-invalid-badge\";\r\nvar VALIDATION_TARGET = \"dx-validation-target\";\r\nvar VALIDATION_STATUS_VALID = \"valid\";\r\nvar VALIDATION_STATUS_INVALID = \"invalid\";\r\nvar READONLY_NAMESPACE = \"editorReadOnly\";\r\nvar VALIDATION_MESSAGE_KEYS_MAP = {\r\n    validationMessageMode: \"mode\",\r\n    validationMessageOffset: \"offset\",\r\n    validationBoundary: \"boundary\"\r\n};\r\nvar Editor = _ui.default.inherit({\r\n    ctor: function() {\r\n        this.showValidationMessageTimeout = null;\r\n        this.validationRequest = (0, _callbacks.default)();\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _createElement: function(element) {\r\n        this.callBase(element);\r\n        var $element = this.$element();\r\n        if ($element) {\r\n            (0, _element_data.data)($element[0], VALIDATION_TARGET, this)\r\n        }\r\n    },\r\n    _initOptions: function(options) {\r\n        this.callBase.apply(this, arguments);\r\n        this.option(_validation_engine.default.initValidationOptions(options))\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._options.cache(\"validationTooltipOptions\", this.option(\"validationTooltipOptions\"));\r\n        var $element = this.$element();\r\n        $element.addClass(DX_INVALID_BADGE_CLASS)\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            value: null,\r\n            name: \"\",\r\n            onValueChanged: null,\r\n            readOnly: false,\r\n            isValid: true,\r\n            validationError: null,\r\n            validationErrors: null,\r\n            validationStatus: VALIDATION_STATUS_VALID,\r\n            validationMessageMode: \"auto\",\r\n            validationBoundary: void 0,\r\n            validationMessageOffset: {\r\n                h: 0,\r\n                v: 0\r\n            },\r\n            validationTooltipOptions: {}\r\n        })\r\n    },\r\n    _attachKeyboardEvents: function() {\r\n        if (!this.option(\"readOnly\")) {\r\n            this.callBase()\r\n        }\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        (0, _extend.extend)(this._optionsByReference, {\r\n            validationError: true\r\n        })\r\n    },\r\n    _createValueChangeAction: function() {\r\n        this._valueChangeAction = this._createActionByOption(\"onValueChanged\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    },\r\n    _suppressValueChangeAction: function() {\r\n        this._valueChangeActionSuppressed = true\r\n    },\r\n    _resumeValueChangeAction: function() {\r\n        this._valueChangeActionSuppressed = false\r\n    },\r\n    _initMarkup: function() {\r\n        this._toggleReadOnlyState();\r\n        this._setSubmitElementName(this.option(\"name\"));\r\n        this.callBase();\r\n        this._renderValidationState()\r\n    },\r\n    _raiseValueChangeAction: function(value, previousValue) {\r\n        if (!this._valueChangeAction) {\r\n            this._createValueChangeAction()\r\n        }\r\n        this._valueChangeAction(this._valueChangeArgs(value, previousValue))\r\n    },\r\n    _valueChangeArgs: function(value, previousValue) {\r\n        return {\r\n            value: value,\r\n            previousValue: previousValue,\r\n            event: this._valueChangeEventInstance\r\n        }\r\n    },\r\n    _saveValueChangeEvent: function(e) {\r\n        this._valueChangeEventInstance = e\r\n    },\r\n    _focusInHandler: function(e) {\r\n        var isValidationMessageShownOnFocus = \"auto\" === this.option(\"validationMessageMode\");\r\n        if (this._canValueBeChangedByClick() && isValidationMessageShownOnFocus) {\r\n            var _this$_validationMess;\r\n            var $validationMessageWrapper = null === (_this$_validationMess = this._validationMessage) || void 0 === _this$_validationMess ? void 0 : _this$_validationMess._wrapper();\r\n            null === $validationMessageWrapper || void 0 === $validationMessageWrapper ? void 0 : $validationMessageWrapper.removeClass(INVALID_MESSAGE_AUTO);\r\n            clearTimeout(this.showValidationMessageTimeout);\r\n            this.showValidationMessageTimeout = setTimeout(function() {\r\n                return null === $validationMessageWrapper || void 0 === $validationMessageWrapper ? void 0 : $validationMessageWrapper.addClass(INVALID_MESSAGE_AUTO)\r\n            }, 150)\r\n        }\r\n        return this.callBase(e)\r\n    },\r\n    _canValueBeChangedByClick: function() {\r\n        return false\r\n    },\r\n    _getValidationErrors: function() {\r\n        var validationErrors = this.option(\"validationErrors\");\r\n        if (!validationErrors && this.option(\"validationError\")) {\r\n            validationErrors = [this.option(\"validationError\")]\r\n        }\r\n        return validationErrors\r\n    },\r\n    _disposeValidationMessage: function() {\r\n        if (this._$validationMessage) {\r\n            this._$validationMessage.remove();\r\n            this.setAria(\"describedby\", null);\r\n            this._$validationMessage = null\r\n        }\r\n    },\r\n    _toggleValidationClasses: function(isInvalid) {\r\n        this.$element().toggleClass(INVALID_CLASS, isInvalid);\r\n        this.setAria(VALIDATION_STATUS_INVALID, isInvalid || void 0)\r\n    },\r\n    _renderValidationState: function() {\r\n        var isValid = this.option(\"isValid\") && this.option(\"validationStatus\") !== VALIDATION_STATUS_INVALID;\r\n        var validationErrors = this._getValidationErrors();\r\n        var $element = this.$element();\r\n        this._toggleValidationClasses(!isValid);\r\n        if (!(0, _window.hasWindow)()) {\r\n            return\r\n        }\r\n        this._disposeValidationMessage();\r\n        if (!isValid && validationErrors) {\r\n            var _this$option = this.option(),\r\n                validationMessageMode = _this$option.validationMessageMode,\r\n                validationMessageOffset = _this$option.validationMessageOffset,\r\n                validationBoundary = _this$option.validationBoundary,\r\n                rtlEnabled = _this$option.rtlEnabled;\r\n            this._$validationMessage = (0, _renderer.default)(\"<div>\").appendTo($element);\r\n            this.setAria(\"describedby\", \"dx-\" + new _guid.default);\r\n            this._validationMessage = new _validation_message.default(this._$validationMessage, (0, _extend.extend)({\r\n                validationErrors: validationErrors,\r\n                rtlEnabled: rtlEnabled,\r\n                target: this._getValidationMessageTarget(),\r\n                container: $element,\r\n                mode: validationMessageMode,\r\n                positionRequest: \"below\",\r\n                offset: validationMessageOffset,\r\n                boundary: validationBoundary,\r\n                describedElement: this._focusTarget()\r\n            }, this._options.cache(\"validationTooltipOptions\")));\r\n            this._bindInnerWidgetOptions(this._validationMessage, \"validationTooltipOptions\")\r\n        }\r\n    },\r\n    _getValidationMessageTarget: function() {\r\n        return this.$element()\r\n    },\r\n    _toggleReadOnlyState: function() {\r\n        var readOnly = this.option(\"readOnly\");\r\n        this._toggleBackspaceHandler(readOnly);\r\n        this.$element().toggleClass(READONLY_STATE_CLASS, !!readOnly);\r\n        this.setAria(\"readonly\", readOnly || void 0)\r\n    },\r\n    _toggleBackspaceHandler: function(isReadOnly) {\r\n        var $eventTarget = this._keyboardEventBindingTarget();\r\n        var eventName = (0, _index.addNamespace)(\"keydown\", READONLY_NAMESPACE);\r\n        _events_engine.default.off($eventTarget, eventName);\r\n        if (isReadOnly) {\r\n            _events_engine.default.on($eventTarget, eventName, function(e) {\r\n                if (\"backspace\" === (0, _index.normalizeKeyName)(e)) {\r\n                    e.preventDefault()\r\n                }\r\n            })\r\n        }\r\n    },\r\n    _dispose: function() {\r\n        var element = this.$element()[0];\r\n        (0, _element_data.data)(element, VALIDATION_TARGET, null);\r\n        clearTimeout(this.showValidationMessageTimeout);\r\n        this.callBase()\r\n    },\r\n    _setSubmitElementName: function(name) {\r\n        var $submitElement = this._getSubmitElement();\r\n        if (!$submitElement) {\r\n            return\r\n        }\r\n        if (name.length > 0) {\r\n            $submitElement.attr(\"name\", name)\r\n        } else {\r\n            $submitElement.removeAttr(\"name\")\r\n        }\r\n    },\r\n    _getSubmitElement: function() {\r\n        return null\r\n    },\r\n    _setValidationMessageOption: function(_ref) {\r\n        var _this$_validationMess2;\r\n        var name = _ref.name,\r\n            value = _ref.value;\r\n        var optionKey = VALIDATION_MESSAGE_KEYS_MAP[name] ? VALIDATION_MESSAGE_KEYS_MAP[name] : name;\r\n        null === (_this$_validationMess2 = this._validationMessage) || void 0 === _this$_validationMess2 ? void 0 : _this$_validationMess2.option(optionKey, value)\r\n    },\r\n    _optionChanged: function(args) {\r\n        var _this$_validationMess3;\r\n        switch (args.name) {\r\n            case \"onValueChanged\":\r\n                this._createValueChangeAction();\r\n                break;\r\n            case \"readOnly\":\r\n                this._toggleReadOnlyState();\r\n                this._refreshFocusState();\r\n                break;\r\n            case \"value\":\r\n                if (args.value != args.previousValue) {\r\n                    this.validationRequest.fire({\r\n                        value: args.value,\r\n                        editor: this\r\n                    })\r\n                }\r\n                if (!this._valueChangeActionSuppressed) {\r\n                    this._raiseValueChangeAction(args.value, args.previousValue);\r\n                    this._saveValueChangeEvent(void 0)\r\n                }\r\n                break;\r\n            case \"width\":\r\n                this.callBase(args);\r\n                null === (_this$_validationMess3 = this._validationMessage) || void 0 === _this$_validationMess3 ? void 0 : _this$_validationMess3.updateMaxWidth();\r\n                break;\r\n            case \"name\":\r\n                this._setSubmitElementName(args.value);\r\n                break;\r\n            case \"isValid\":\r\n            case \"validationError\":\r\n            case \"validationErrors\":\r\n            case \"validationStatus\":\r\n                this.option(_validation_engine.default.synchronizeValidationOptions(args, this.option()));\r\n                this._renderValidationState();\r\n                break;\r\n            case \"validationBoundary\":\r\n            case \"validationMessageMode\":\r\n            case \"validationMessageOffset\":\r\n                this._setValidationMessageOption(args);\r\n                break;\r\n            case \"rtlEnabled\":\r\n                this._setValidationMessageOption(args);\r\n                this.callBase(args);\r\n                break;\r\n            case \"validationTooltipOptions\":\r\n                this._innerWidgetOptionChanged(this._validationMessage, args);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    reset: function() {\r\n        var defaultOptions = this._getDefaultOptions();\r\n        this.option(\"value\", defaultOptions.value)\r\n    }\r\n});\r\nvar _default = Editor;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}