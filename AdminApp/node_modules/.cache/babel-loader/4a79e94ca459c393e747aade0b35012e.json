{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CapiniaC\\\\Desktop\\\\Collection\\\\Work\\\\project\\\\security\\\\AdminApp\\\\src\\\\components\\\\pages\\\\viprpit\\\\Vipr-Pit.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Grid, Paper, makeStyles, TableBody, TableRow, Toolbar, InputAdornment, TableCell, TableHead } from '@material-ui/core';\nimport useTable from \"../../controls/useTable\";\nimport Controls from \"../../controls/Controls\";\nimport Popup from \"../../controls/Popup\";\nimport { Search } from \"@material-ui/icons\";\nimport AddIcon from '@material-ui/icons/Add';\nimport InterceptsService from '../../../services/InterceptsService';\nconst useStyles = makeStyles(theme => ({\n  elnotTbl: {\n    margin: theme.spacing(5),\n    padding: theme.spacing(3),\n    width: '25%'\n  },\n  searchInput: {\n    width: '75%'\n  },\n  newButton: {\n    position: 'absolute',\n    right: '10px'\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }\n}));\nconst headCells = [{\n  id: 'elnot',\n  label: 'Elnot',\n  width: 50\n}];\nexport default function ViprPitComponent() {\n  const classes = useStyles();\n  const [recordForEdit, setRecordForEdit] = useState(null);\n  const [records, setRecords] = useState([]);\n  const [filterFn, setFilterFn] = useState({\n    fn: items => {\n      return items;\n    }\n  });\n  const [openPopup, setOpenPopup] = useState(false);\n  useEffect(() => {\n    InterceptsService.getIntercepts().then(response => {\n      setRecords(response.data);\n    });\n  }, []);\n  console.log(records);\n  const {\n    TblContainer,\n    TblHead,\n    TblPagination,\n    recordsAfterPagingAndSorting\n  } = useTable(records, headCells, filterFn);\n\n  const handleSearch = e => {\n    let target = e.target;\n    setFilterFn({\n      fn: items => {\n        if (target.value === \"\") return items;else return items.filter(x => x.elnot.toLowerCase().includes(target.value));\n      }\n    });\n  };\n\n  const addOrEdit = (intercepts, resetForm) => {\n    if (intercepts.elnot === 0) InterceptsService.addIntercepts(intercepts);else InterceptsService.updateIntercepts(intercepts);\n    resetForm();\n    setRecordForEdit(null);\n    setOpenPopup(false);\n    setRecords(InterceptsService.getIntercepts());\n  };\n\n  const openInPopup = item => {\n    setRecordForEdit(item);\n    setOpenPopup(true);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    xs: 12,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Controls.Input, {\n    label: \"Search Users\",\n    className: classes.searchInput,\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 54\n        }\n      }, /*#__PURE__*/React.createElement(Search, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 41\n        }\n      }))\n    },\n    onChange: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Controls.Button, {\n    text: \"Add New\",\n    variant: \"outlined\",\n    startIcon: /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 44\n      }\n    }),\n    className: classes.newButton,\n    onClick: () => {\n      setOpenPopup(true);\n      setRecordForEdit(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(TblContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TblHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 33\n    }\n  }, recordsAfterPagingAndSorting(records).map(item => /*#__PURE__*/React.createElement(TableRow, {\n    key: item.elnot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 46\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 49\n    }\n  }, item.elnot))))), /*#__PURE__*/React.createElement(TblPagination, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TblContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 45\n    }\n  }, \"Elnot\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 45\n    }\n  }, \"PD\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 45\n    }\n  }, \"Scan Type\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 37\n    }\n  }, recordsAfterPagingAndSorting(records).map(item => /*#__PURE__*/React.createElement(TableRow, {\n    key: item.elnot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 50\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 53\n    }\n  }, item.elnot), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 53\n    }\n  }, item.pd), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 53\n    }\n  }, item.scan_type), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 53\n    }\n  }, item.ir), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 53\n    }\n  }, item.scan_period), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 53\n    }\n  }, item.mod_type))))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    xs: 12,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TblContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TblHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 41\n    }\n  }, recordsAfterPagingAndSorting(records).map(item => /*#__PURE__*/React.createElement(TableRow, {\n    key: item.elnot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 54\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 57\n    }\n  }, item.pri1), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 57\n    }\n  }, item.pri2), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 57\n    }\n  }, item.pri3))))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TblContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TblHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 41\n    }\n  }, recordsAfterPagingAndSorting(records).map(item => /*#__PURE__*/React.createElement(TableRow, {\n    key: item.elnot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 54\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 57\n    }\n  }, item.rf1), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 57\n    }\n  }, item.rf2), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 57\n    }\n  }, item.rf3))))))))))), /*#__PURE__*/React.createElement(Popup, {\n    title: \"User Form\",\n    openPopup: openPopup,\n    setOpenPopup: setOpenPopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/AdminApp/src/components/pages/viprpit/Vipr-Pit.js"],"names":["React","useState","useEffect","Grid","Paper","makeStyles","TableBody","TableRow","Toolbar","InputAdornment","TableCell","TableHead","useTable","Controls","Popup","Search","AddIcon","InterceptsService","useStyles","theme","elnotTbl","margin","spacing","padding","width","searchInput","newButton","position","right","paper","textAlign","color","palette","text","secondary","headCells","id","label","ViprPitComponent","classes","recordForEdit","setRecordForEdit","records","setRecords","filterFn","setFilterFn","fn","items","openPopup","setOpenPopup","getIntercepts","then","response","data","console","log","TblContainer","TblHead","TblPagination","recordsAfterPagingAndSorting","handleSearch","e","target","value","filter","x","elnot","toLowerCase","includes","addOrEdit","intercepts","resetForm","addIntercepts","updateIntercepts","openInPopup","item","startAdornment","map","pd","scan_type","ir","scan_period","mod_type","pri1","pri2","pri3","rf1","rf2","rf3"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,UAAtB,EAAkCC,SAAlC,EAA6CC,QAA7C,EAAuDC,OAAvD,EAAgEC,cAAhE,EAAgFC,SAAhF,EAA2FC,SAA3F,QAA4G,mBAA5G;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AAEA,OAAOC,iBAAP,MAA8B,qCAA9B;AAEA,MAAMC,SAAS,GAAGb,UAAU,CAACc,KAAK,KAAK;AACnCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADF;AAENC,IAAAA,OAAO,EAAEJ,KAAK,CAACG,OAAN,CAAc,CAAd,CAFH;AAGNE,IAAAA,KAAK,EAAE;AAHD,GADyB;AAMnCC,EAAAA,WAAW,EAAE;AACTD,IAAAA,KAAK,EAAE;AADE,GANsB;AASnCE,EAAAA,SAAS,EAAE;AACPC,IAAAA,QAAQ,EAAE,UADH;AAEPC,IAAAA,KAAK,EAAE;AAFA,GATwB;AAanCC,EAAAA,KAAK,EAAE;AACLN,IAAAA,OAAO,EAAEJ,KAAK,CAACG,OAAN,CAAc,CAAd,CADJ;AAELQ,IAAAA,SAAS,EAAE,QAFN;AAGLC,IAAAA,KAAK,EAAEZ,KAAK,CAACa,OAAN,CAAcC,IAAd,CAAmBC;AAHrB;AAb4B,CAAL,CAAN,CAA5B;AAqBA,MAAMC,SAAS,GAAG,CACd;AAAEC,EAAAA,EAAE,EAAE,OAAN;AAAeC,EAAAA,KAAK,EAAE,OAAtB;AAA+Bb,EAAAA,KAAK,EAAE;AAAtC,CADc,CAAlB;AAIA,eAAe,SAASc,gBAAT,GAA4B;AAEvC,QAAMC,OAAO,GAAGrB,SAAS,EAAzB;AACA,QAAM,CAACsB,aAAD,EAAgBC,gBAAhB,IAAoCxC,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM,CAACyC,OAAD,EAAUC,UAAV,IAAwB1C,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAC2C,QAAD,EAAWC,WAAX,IAA0B5C,QAAQ,CAAC;AAAE6C,IAAAA,EAAE,EAAEC,KAAK,IAAI;AAAE,aAAOA,KAAP;AAAe;AAAhC,GAAD,CAAxC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BhD,QAAQ,CAAC,KAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,iBAAiB,CAACiC,aAAlB,GACCC,IADD,CACMC,QAAQ,IAAI;AACdT,MAAAA,UAAU,CAACS,QAAQ,CAACC,IAAV,CAAV;AACH,KAHD;AAIH,GALQ,EAKN,EALM,CAAT;AAOAC,EAAAA,OAAO,CAACC,GAAR,CAAYb,OAAZ;AAEA,QAAM;AACFc,IAAAA,YADE;AAEFC,IAAAA,OAFE;AAGFC,IAAAA,aAHE;AAIFC,IAAAA;AAJE,MAKF/C,QAAQ,CAAC8B,OAAD,EAAUP,SAAV,EAAqBS,QAArB,CALZ;;AAOA,QAAMgB,YAAY,GAAGC,CAAC,IAAI;AACtB,QAAIC,MAAM,GAAGD,CAAC,CAACC,MAAf;AACAjB,IAAAA,WAAW,CAAC;AACRC,MAAAA,EAAE,EAAEC,KAAK,IAAI;AACT,YAAIe,MAAM,CAACC,KAAP,KAAiB,EAArB,EACI,OAAOhB,KAAP,CADJ,KAGI,OAAOA,KAAK,CAACiB,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQC,WAAR,GAAsBC,QAAtB,CAA+BN,MAAM,CAACC,KAAtC,CAAlB,CAAP;AACP;AANO,KAAD,CAAX;AAQH,GAVD;;AAYA,QAAMM,SAAS,GAAG,CAACC,UAAD,EAAaC,SAAb,KAA2B;AACzC,QAAID,UAAU,CAACJ,KAAX,KAAqB,CAAzB,EACAjD,iBAAiB,CAACuD,aAAlB,CAAgCF,UAAhC,EADA,KAGArD,iBAAiB,CAACwD,gBAAlB,CAAmCH,UAAnC;AACAC,IAAAA,SAAS;AACT9B,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAQ,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAN,IAAAA,UAAU,CAAC1B,iBAAiB,CAACiC,aAAlB,EAAD,CAAV;AACH,GATD;;AAWA,QAAMwB,WAAW,GAAGC,IAAI,IAAI;AACxBlC,IAAAA,gBAAgB,CAACkC,IAAD,CAAhB;AACA1B,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAHD;;AAKA,sBACI,uDACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,SAAS,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,EAAE,EAAE,EAApB;AAAwB,IAAA,OAAO,EAAE,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEV,OAAO,CAACV,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,QAAD,CAAU,KAAV;AACI,IAAA,KAAK,EAAC,cADV;AAEI,IAAA,SAAS,EAAEU,OAAO,CAACd,WAFvB;AAGI,IAAA,UAAU,EAAE;AACRmD,MAAAA,cAAc,eAAG,oBAAC,cAAD;AAAgB,QAAA,QAAQ,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACb,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADa;AADT,KAHhB;AAQI,IAAA,QAAQ,EAAEhB,YARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAWA,oBAAC,QAAD,CAAU,MAAV;AACI,IAAA,IAAI,EAAC,SADT;AAEI,IAAA,OAAO,EAAC,UAFZ;AAGI,IAAA,SAAS,eAAE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHf;AAII,IAAA,SAAS,EAAErB,OAAO,CAACb,SAJvB;AAKI,IAAA,OAAO,EAAE,MAAM;AAAEuB,MAAAA,YAAY,CAAC,IAAD,CAAZ;AAAoBR,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AAAyB,KALlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXA,CADJ,eAoBI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQkB,4BAA4B,CAACjB,OAAD,CAA5B,CAAsCmC,GAAtC,CAA0CF,IAAI,iBACzC,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACT,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYS,IAAI,CAACT,KAAjB,CADH,CADL,CAFR,CAFJ,CApBJ,eAgCI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCJ,CADJ,CADJ,eAqCI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAE3B,OAAO,CAACV,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,eAGI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,CADJ,CADJ,eAQI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ8B,4BAA4B,CAACjB,OAAD,CAA5B,CAAsCmC,GAAtC,CAA0CF,IAAI,iBACzC,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACT,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYS,IAAI,CAACT,KAAjB,CADH,eAEG,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYS,IAAI,CAACG,EAAjB,CAFH,eAGG,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYH,IAAI,CAACI,SAAjB,CAHH,eAIG,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYJ,IAAI,CAACK,EAAjB,CAJH,eAKG,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYL,IAAI,CAACM,WAAjB,CALH,eAMG,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYN,IAAI,CAACO,QAAjB,CANH,CADL,CAFR,CARJ,CADJ,CADJ,CADJ,eA4BI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,EAAE,EAAE,EAApB;AAAwB,IAAA,SAAS,EAAC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAE3C,OAAO,CAACV,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ8B,4BAA4B,CAACjB,OAAD,CAA5B,CAAsCmC,GAAtC,CAA0CF,IAAI,iBACzC,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACT,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYS,IAAI,CAACQ,IAAjB,CADH,eAEG,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYR,IAAI,CAACS,IAAjB,CAFH,eAGG,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYT,IAAI,CAACU,IAAjB,CAHH,CADL,CAFR,CAFJ,CADJ,CADJ,CADJ,eAmBI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAE9C,OAAO,CAACV,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ8B,4BAA4B,CAACjB,OAAD,CAA5B,CAAsCmC,GAAtC,CAA0CF,IAAI,iBACzC,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACT,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYS,IAAI,CAACW,GAAjB,CADH,eAEG,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYX,IAAI,CAACY,GAAjB,CAFH,eAGG,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYZ,IAAI,CAACa,GAAjB,CAHH,CADL,CAFR,CAFJ,CADJ,CADJ,CAnBJ,CA5BJ,CArCJ,CADJ,CADJ,eA4GI,oBAAC,KAAD;AACI,IAAA,KAAK,EAAC,WADV;AAEI,IAAA,SAAS,EAAExC,SAFf;AAGI,IAAA,YAAY,EAAEC,YAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5GJ,CADJ;AAqHH","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Grid, Paper, makeStyles, TableBody, TableRow, Toolbar, InputAdornment, TableCell, TableHead } from '@material-ui/core';\r\nimport useTable from \"../../controls/useTable\";\r\nimport Controls from \"../../controls/Controls\";\r\nimport Popup from \"../../controls/Popup\";\r\nimport { Search } from \"@material-ui/icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport InterceptsService from '../../../services/InterceptsService';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    elnotTbl: {\r\n        margin: theme.spacing(5),\r\n        padding: theme.spacing(3),\r\n        width: '25%'\r\n    },\r\n    searchInput: {\r\n        width: '75%'\r\n    },\r\n    newButton: {\r\n        position: 'absolute',\r\n        right: '10px'\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n}))\r\n\r\n\r\nconst headCells = [\r\n    { id: 'elnot', label: 'Elnot', width: 50 },\r\n]\r\n\r\nexport default function ViprPitComponent() {\r\n\r\n    const classes = useStyles();\r\n    const [recordForEdit, setRecordForEdit] = useState(null)\r\n    const [records, setRecords] = useState([])\r\n    const [filterFn, setFilterFn] = useState({ fn: items => { return items; } })\r\n    const [openPopup, setOpenPopup] = useState(false)\r\n\r\n    useEffect(() => {\r\n        InterceptsService.getIntercepts()\r\n        .then(response => {\r\n            setRecords(response.data);\r\n        })\r\n    }, []);\r\n\r\n    console.log(records);\r\n\r\n    const {\r\n        TblContainer,\r\n        TblHead,\r\n        TblPagination,\r\n        recordsAfterPagingAndSorting\r\n    } = useTable(records, headCells, filterFn);\r\n\r\n    const handleSearch = e => {\r\n        let target = e.target;\r\n        setFilterFn({\r\n            fn: items => {\r\n                if (target.value === \"\")\r\n                    return items;\r\n                else\r\n                    return items.filter(x => x.elnot.toLowerCase().includes(target.value))\r\n            }\r\n        })\r\n    }\r\n    \r\n    const addOrEdit = (intercepts, resetForm) => {\r\n        if (intercepts.elnot === 0)\r\n        InterceptsService.addIntercepts(intercepts)\r\n        else\r\n        InterceptsService.updateIntercepts(intercepts)\r\n        resetForm()\r\n        setRecordForEdit(null)\r\n        setOpenPopup(false)\r\n        setRecords(InterceptsService.getIntercepts())\r\n    }\r\n\r\n    const openInPopup = item => {\r\n        setRecordForEdit(item)\r\n        setOpenPopup(true)\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Grid container spacing={3} direction=\"column\">\r\n                <Grid container xs={12} spacing={1}>\r\n                    <Grid item xs={3}>\r\n                        <Paper className={classes.paper}>\r\n                            <Toolbar>\r\n                            <Controls.Input\r\n                                label=\"Search Users\"\r\n                                className={classes.searchInput}\r\n                                InputProps={{\r\n                                    startAdornment: (<InputAdornment position=\"start\">\r\n                                        <Search />\r\n                                    </InputAdornment>)\r\n                                }}\r\n                                onChange={handleSearch}\r\n                            />\r\n                            <Controls.Button\r\n                                text=\"Add New\"\r\n                                variant=\"outlined\"\r\n                                startIcon={<AddIcon />}\r\n                                className={classes.newButton}\r\n                                onClick={() => { setOpenPopup(true); setRecordForEdit(null); }}\r\n                            />\r\n                            </Toolbar>\r\n                            <TblContainer>\r\n                                <TblHead />\r\n                                <TableBody>\r\n                                    {\r\n                                        recordsAfterPagingAndSorting(records).map(item =>\r\n                                            (<TableRow key={item.elnot}>\r\n                                                <TableCell>{item.elnot}</TableCell>\r\n                                            </TableRow>)\r\n                                        )\r\n                                    }\r\n                                </TableBody>\r\n                            </TblContainer>\r\n                            <TblPagination />\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={9}>\r\n                        <Grid item xs={12}>\r\n                            <Paper className={classes.paper}>\r\n                                <TblContainer>\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>Elnot</TableCell>\r\n                                            <TableCell>PD</TableCell>\r\n                                            <TableCell>Scan Type</TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {\r\n                                            recordsAfterPagingAndSorting(records).map(item =>\r\n                                                (<TableRow key={item.elnot}>\r\n                                                    <TableCell>{item.elnot}</TableCell>\r\n                                                    <TableCell>{item.pd}</TableCell>\r\n                                                    <TableCell>{item.scan_type}</TableCell>\r\n                                                    <TableCell>{item.ir}</TableCell>\r\n                                                    <TableCell>{item.scan_period}</TableCell>\r\n                                                    <TableCell>{item.mod_type}</TableCell>\r\n                                                </TableRow>)\r\n                                            )\r\n                                        }\r\n                                    </TableBody>\r\n                                </TblContainer>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid container xs={12} direction=\"row\">\r\n                            <Grid item xs={6}>\r\n                                <Paper className={classes.paper}>\r\n                                    <TblContainer>\r\n                                        <TblHead />\r\n                                        <TableBody>\r\n                                            {\r\n                                                recordsAfterPagingAndSorting(records).map(item =>\r\n                                                    (<TableRow key={item.elnot}>\r\n                                                        <TableCell>{item.pri1}</TableCell>\r\n                                                        <TableCell>{item.pri2}</TableCell>\r\n                                                        <TableCell>{item.pri3}</TableCell>\r\n                                                    </TableRow>)\r\n                                                )\r\n                                            }\r\n                                        </TableBody>\r\n                                    </TblContainer>\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Paper className={classes.paper}>\r\n                                    <TblContainer>\r\n                                        <TblHead />\r\n                                        <TableBody>\r\n                                            {\r\n                                                recordsAfterPagingAndSorting(records).map(item =>\r\n                                                    (<TableRow key={item.elnot}>\r\n                                                        <TableCell>{item.rf1}</TableCell>\r\n                                                        <TableCell>{item.rf2}</TableCell>\r\n                                                        <TableCell>{item.rf3}</TableCell>\r\n                                                    </TableRow>)\r\n                                                )\r\n                                            }\r\n                                        </TableBody>\r\n                                    </TblContainer>\r\n                                </Paper>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>    \r\n            </Grid>\r\n            <Popup\r\n                title=\"User Form\"\r\n                openPopup={openPopup}\r\n                setOpenPopup={setOpenPopup}\r\n            >\r\n            </Popup>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}