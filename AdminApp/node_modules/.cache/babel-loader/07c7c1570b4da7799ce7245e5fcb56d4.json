{"ast":null,"code":"/**\r\n * DevExtreme (ui/resizable.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _translator = require(\"../animation/translator\");\n\nvar _component_registrator = _interopRequireDefault(require(\"../core/component_registrator\"));\n\nvar _dom_component = _interopRequireDefault(require(\"../core/dom_component\"));\n\nvar _renderer = _interopRequireDefault(require(\"../core/renderer\"));\n\nvar _array = require(\"../core/utils/array\");\n\nvar _common = require(\"../core/utils/common\");\n\nvar _extend = require(\"../core/utils/extend\");\n\nvar _iterator = require(\"../core/utils/iterator\");\n\nvar _math = require(\"../core/utils/math\");\n\nvar _type = require(\"../core/utils/type\");\n\nvar _window = require(\"../core/utils/window\");\n\nvar _events_engine = _interopRequireDefault(require(\"../events/core/events_engine\"));\n\nvar _drag = require(\"../events/drag\");\n\nvar _position = require(\"../core/utils/position\");\n\nvar _index = require(\"../events/utils/index\");\n\nvar _visibility_change = require(\"../events/visibility_change\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar RESIZABLE = \"dxResizable\";\nvar RESIZABLE_CLASS = \"dx-resizable\";\nvar RESIZABLE_RESIZING_CLASS = \"dx-resizable-resizing\";\nvar RESIZABLE_HANDLE_CLASS = \"dx-resizable-handle\";\nvar RESIZABLE_HANDLE_TOP_CLASS = \"dx-resizable-handle-top\";\nvar RESIZABLE_HANDLE_BOTTOM_CLASS = \"dx-resizable-handle-bottom\";\nvar RESIZABLE_HANDLE_LEFT_CLASS = \"dx-resizable-handle-left\";\nvar RESIZABLE_HANDLE_RIGHT_CLASS = \"dx-resizable-handle-right\";\nvar RESIZABLE_HANDLE_CORNER_CLASS = \"dx-resizable-handle-corner\";\nvar DRAGSTART_START_EVENT_NAME = (0, _index.addNamespace)(_drag.start, RESIZABLE);\nvar DRAGSTART_EVENT_NAME = (0, _index.addNamespace)(_drag.move, RESIZABLE);\nvar DRAGSTART_END_EVENT_NAME = (0, _index.addNamespace)(_drag.end, RESIZABLE);\nvar SIDE_BORDER_WIDTH_STYLES = {\n  left: \"borderLeftWidth\",\n  top: \"borderTopWidth\",\n  right: \"borderRightWidth\",\n  bottom: \"borderBottomWidth\"\n};\n\nvar Resizable = _dom_component.default.inherit({\n  _getDefaultOptions: function () {\n    return (0, _extend.extend)(this.callBase(), {\n      handles: \"all\",\n      step: \"1\",\n      stepPrecision: \"simple\",\n      area: void 0,\n      minWidth: 30,\n      maxWidth: 1 / 0,\n      minHeight: 30,\n      maxHeight: 1 / 0,\n      onResizeStart: null,\n      onResize: null,\n      onResizeEnd: null,\n      roundStepValue: true\n    });\n  },\n  _init: function () {\n    this.callBase();\n    this.$element().addClass(RESIZABLE_CLASS);\n  },\n  _initMarkup: function () {\n    this.callBase();\n\n    this._renderHandles();\n  },\n  _render: function () {\n    this.callBase();\n\n    this._renderActions();\n  },\n  _renderActions: function () {\n    this._resizeStartAction = this._createActionByOption(\"onResizeStart\");\n    this._resizeEndAction = this._createActionByOption(\"onResizeEnd\");\n    this._resizeAction = this._createActionByOption(\"onResize\");\n  },\n  _renderHandles: function () {\n    var _this = this;\n\n    this._handles = [];\n    var handles = this.option(\"handles\");\n\n    if (\"none\" === handles) {\n      return;\n    }\n\n    var directions = \"all\" === handles ? [\"top\", \"bottom\", \"left\", \"right\"] : handles.split(\" \");\n    (0, _iterator.each)(directions, function (index, handleName) {\n      _this._renderHandle(handleName);\n    });\n    (0, _array.inArray)(\"bottom\", directions) + 1 && (0, _array.inArray)(\"right\", directions) + 1 && this._renderHandle(\"corner-bottom-right\");\n    (0, _array.inArray)(\"bottom\", directions) + 1 && (0, _array.inArray)(\"left\", directions) + 1 && this._renderHandle(\"corner-bottom-left\");\n    (0, _array.inArray)(\"top\", directions) + 1 && (0, _array.inArray)(\"right\", directions) + 1 && this._renderHandle(\"corner-top-right\");\n    (0, _array.inArray)(\"top\", directions) + 1 && (0, _array.inArray)(\"left\", directions) + 1 && this._renderHandle(\"corner-top-left\");\n\n    this._attachEventHandlers();\n  },\n  _renderHandle: function (handleName) {\n    var $handle = (0, _renderer.default)(\"<div>\").addClass(RESIZABLE_HANDLE_CLASS).addClass(RESIZABLE_HANDLE_CLASS + \"-\" + handleName).appendTo(this.$element());\n\n    this._handles.push($handle);\n  },\n  _attachEventHandlers: function () {\n    if (this.option(\"disabled\")) {\n      return;\n    }\n\n    var handlers = {};\n    handlers[DRAGSTART_START_EVENT_NAME] = this._dragStartHandler.bind(this);\n    handlers[DRAGSTART_EVENT_NAME] = this._dragHandler.bind(this);\n    handlers[DRAGSTART_END_EVENT_NAME] = this._dragEndHandler.bind(this);\n\n    this._handles.forEach(function (handleElement) {\n      _events_engine.default.on(handleElement, handlers, {\n        direction: \"both\",\n        immediate: true\n      });\n    });\n  },\n  _detachEventHandlers: function () {\n    this._handles.forEach(function (handleElement) {\n      _events_engine.default.off(handleElement);\n    });\n  },\n  _toggleEventHandlers: function (shouldAttachEvents) {\n    shouldAttachEvents ? this._attachEventHandlers() : this._detachEventHandlers();\n  },\n  _dragStartHandler: function (e) {\n    var $element = this.$element();\n\n    if ($element.is(\".dx-state-disabled, .dx-state-disabled *\")) {\n      e.cancel = true;\n      return;\n    }\n\n    this._toggleResizingClass(true);\n\n    this._movingSides = this._getMovingSides(e);\n    this._elementLocation = (0, _translator.locate)($element);\n    var elementRect = (0, _position.getBoundingRect)($element.get(0));\n    this._elementSize = {\n      width: elementRect.width,\n      height: elementRect.height\n    };\n\n    this._renderDragOffsets(e);\n\n    this._resizeStartAction({\n      event: e,\n      width: this._elementSize.width,\n      height: this._elementSize.height,\n      handles: this._movingSides\n    });\n\n    e.targetElements = null;\n  },\n  _toggleResizingClass: function (value) {\n    this.$element().toggleClass(RESIZABLE_RESIZING_CLASS, value);\n  },\n  _renderDragOffsets: function (e) {\n    var area = this._getArea();\n\n    if (!area) {\n      return;\n    }\n\n    var $handle = (0, _renderer.default)(e.target).closest(\".\" + RESIZABLE_HANDLE_CLASS);\n    var handleWidth = $handle.outerWidth();\n    var handleHeight = $handle.outerHeight();\n    var handleOffset = $handle.offset();\n    var areaOffset = area.offset;\n\n    var scrollOffset = this._getAreaScrollOffset();\n\n    e.maxLeftOffset = handleOffset.left - areaOffset.left - scrollOffset.scrollX;\n    e.maxRightOffset = areaOffset.left + area.width - handleOffset.left - handleWidth + scrollOffset.scrollX;\n    e.maxTopOffset = handleOffset.top - areaOffset.top - scrollOffset.scrollY;\n    e.maxBottomOffset = areaOffset.top + area.height - handleOffset.top - handleHeight + scrollOffset.scrollY;\n  },\n  _getBorderWidth: function ($element, direction) {\n    if ((0, _type.isWindow)($element.get(0))) {\n      return 0;\n    }\n\n    var borderWidth = $element.css(SIDE_BORDER_WIDTH_STYLES[direction]);\n    return parseInt(borderWidth) || 0;\n  },\n  _dragHandler: function (e) {\n    var $element = this.$element();\n    var sides = this._movingSides;\n    var location = this._elementLocation;\n    var size = this._elementSize;\n\n    var offset = this._getOffset(e);\n\n    var width = size.width + offset.x * (sides.left ? -1 : 1);\n    var height = size.height + offset.y * (sides.top ? -1 : 1);\n\n    if (offset.x || \"strict\" === this.option(\"stepPrecision\")) {\n      this._renderWidth(width);\n    }\n\n    if (offset.y || \"strict\" === this.option(\"stepPrecision\")) {\n      this._renderHeight(height);\n    }\n\n    var elementRect = (0, _position.getBoundingRect)($element.get(0));\n    var offsetTop = offset.y - ((elementRect.height || height) - height);\n    var offsetLeft = offset.x - ((elementRect.width || width) - width);\n    (0, _translator.move)($element, {\n      top: location.top + (sides.top ? offsetTop : 0),\n      left: location.left + (sides.left ? offsetLeft : 0)\n    });\n\n    this._resizeAction({\n      event: e,\n      width: this.option(\"width\") || width,\n      height: this.option(\"height\") || height,\n      handles: this._movingSides\n    });\n\n    (0, _visibility_change.triggerResizeEvent)($element);\n  },\n  _getOffset: function (e) {\n    var offset = e.offset;\n    var steps = (0, _common.pairToObject)(this.option(\"step\"), !this.option(\"roundStepValue\"));\n\n    var sides = this._getMovingSides(e);\n\n    var strictPrecision = \"strict\" === this.option(\"stepPrecision\");\n\n    if (!sides.left && !sides.right) {\n      offset.x = 0;\n    }\n\n    if (!sides.top && !sides.bottom) {\n      offset.y = 0;\n    }\n\n    return strictPrecision ? this._getStrictOffset(offset, steps, sides) : this._getSimpleOffset(offset, steps);\n  },\n  _getSimpleOffset: function (offset, steps) {\n    return {\n      x: offset.x - offset.x % steps.h,\n      y: offset.y - offset.y % steps.v\n    };\n  },\n  _getStrictOffset: function (offset, steps, sides) {\n    var location = this._elementLocation;\n    var size = this._elementSize;\n    var xPos = sides.left ? location.left : location.left + size.width;\n    var yPos = sides.top ? location.top : location.top + size.height;\n    var newXShift = (xPos + offset.x) % steps.h;\n    var newYShift = (yPos + offset.y) % steps.v;\n\n    var sign = Math.sign || function (x) {\n      x = +x;\n\n      if (0 === x || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n\n    var separatorOffset = function (steps, offset) {\n      return (1 + .2 * sign(offset)) % 1 * steps;\n    };\n\n    var isSmallOffset = function (offset, steps) {\n      return Math.abs(offset) < .2 * steps;\n    };\n\n    var newOffsetX = offset.x - newXShift;\n    var newOffsetY = offset.y - newYShift;\n\n    if (newXShift > separatorOffset(steps.h, offset.x)) {\n      newOffsetX += steps.h;\n    }\n\n    if (newYShift > separatorOffset(steps.v, offset.y)) {\n      newOffsetY += steps.v;\n    }\n\n    return {\n      x: (sides.left || sides.right) && !isSmallOffset(offset.x, steps.h) ? newOffsetX : 0,\n      y: (sides.top || sides.bottom) && !isSmallOffset(offset.y, steps.v) ? newOffsetY : 0\n    };\n  },\n  _getMovingSides: function (e) {\n    var $target = (0, _renderer.default)(e.target);\n    var hasCornerTopLeftClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-top-left\");\n    var hasCornerTopRightClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-top-right\");\n    var hasCornerBottomLeftClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-bottom-left\");\n    var hasCornerBottomRightClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-bottom-right\");\n    return {\n      top: $target.hasClass(RESIZABLE_HANDLE_TOP_CLASS) || hasCornerTopLeftClass || hasCornerTopRightClass,\n      left: $target.hasClass(RESIZABLE_HANDLE_LEFT_CLASS) || hasCornerTopLeftClass || hasCornerBottomLeftClass,\n      bottom: $target.hasClass(RESIZABLE_HANDLE_BOTTOM_CLASS) || hasCornerBottomLeftClass || hasCornerBottomRightClass,\n      right: $target.hasClass(RESIZABLE_HANDLE_RIGHT_CLASS) || hasCornerTopRightClass || hasCornerBottomRightClass\n    };\n  },\n  _getArea: function () {\n    var area = this.option(\"area\");\n\n    if ((0, _type.isFunction)(area)) {\n      area = area.call(this);\n    }\n\n    if ((0, _type.isPlainObject)(area)) {\n      return this._getAreaFromObject(area);\n    }\n\n    return this._getAreaFromElement(area);\n  },\n  _getAreaScrollOffset: function () {\n    var area = this.option(\"area\");\n    var isElement = !(0, _type.isFunction)(area) && !(0, _type.isPlainObject)(area);\n    var scrollOffset = {\n      scrollY: 0,\n      scrollX: 0\n    };\n\n    if (isElement) {\n      var areaElement = (0, _renderer.default)(area)[0];\n\n      if ((0, _type.isWindow)(areaElement)) {\n        scrollOffset.scrollX = areaElement.pageXOffset;\n        scrollOffset.scrollY = areaElement.pageYOffset;\n      }\n    }\n\n    return scrollOffset;\n  },\n  _getAreaFromObject: function (area) {\n    var result = {\n      width: area.right - area.left,\n      height: area.bottom - area.top,\n      offset: {\n        left: area.left,\n        top: area.top\n      }\n    };\n\n    this._correctAreaGeometry(result);\n\n    return result;\n  },\n  _getAreaFromElement: function (area) {\n    var $area = (0, _renderer.default)(area);\n    var result;\n\n    if ($area.length) {\n      result = {\n        width: $area.innerWidth(),\n        height: $area.innerHeight(),\n        offset: (0, _extend.extend)({\n          top: 0,\n          left: 0\n        }, (0, _type.isWindow)($area[0]) ? {} : $area.offset())\n      };\n\n      this._correctAreaGeometry(result, $area);\n    }\n\n    return result;\n  },\n  _correctAreaGeometry: function (result, $area) {\n    var areaBorderLeft = $area ? this._getBorderWidth($area, \"left\") : 0;\n    var areaBorderTop = $area ? this._getBorderWidth($area, \"top\") : 0;\n    result.offset.left += areaBorderLeft + this._getBorderWidth(this.$element(), \"left\");\n    result.offset.top += areaBorderTop + this._getBorderWidth(this.$element(), \"top\");\n    result.width -= this.$element().outerWidth() - this.$element().innerWidth();\n    result.height -= this.$element().outerHeight() - this.$element().innerHeight();\n  },\n  _dragEndHandler: function (e) {\n    var $element = this.$element();\n\n    this._resizeEndAction({\n      event: e,\n      width: $element.outerWidth(),\n      height: $element.outerHeight(),\n      handles: this._movingSides\n    });\n\n    this._toggleResizingClass(false);\n  },\n  _renderWidth: function (width) {\n    this.option(\"width\", (0, _math.fitIntoRange)(width, this.option(\"minWidth\"), this.option(\"maxWidth\")));\n  },\n  _renderHeight: function (height) {\n    this.option(\"height\", (0, _math.fitIntoRange)(height, this.option(\"minHeight\"), this.option(\"maxHeight\")));\n  },\n  _optionChanged: function (args) {\n    switch (args.name) {\n      case \"disabled\":\n        this._toggleEventHandlers(!args.value);\n\n        this.callBase(args);\n        break;\n\n      case \"handles\":\n        this._invalidate();\n\n        break;\n\n      case \"minWidth\":\n      case \"maxWidth\":\n        (0, _window.hasWindow)() && this._renderWidth(this.$element().outerWidth());\n        break;\n\n      case \"minHeight\":\n      case \"maxHeight\":\n        (0, _window.hasWindow)() && this._renderHeight(this.$element().outerHeight());\n        break;\n\n      case \"onResize\":\n      case \"onResizeStart\":\n      case \"onResizeEnd\":\n        this._renderActions();\n\n        break;\n\n      case \"area\":\n      case \"stepPrecision\":\n      case \"step\":\n      case \"roundStepValue\":\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _clean: function () {\n    this.$element().find(\".\" + RESIZABLE_HANDLE_CLASS).remove();\n  },\n  _useTemplates: function () {\n    return false;\n  }\n});\n\n(0, _component_registrator.default)(RESIZABLE, Resizable);\nvar _default = Resizable;\nexports.default = _default;\nmodule.exports = exports.default;\nmodule.exports.default = module.exports;","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/node_modules/devextreme/ui/resizable.js"],"names":["exports","default","_translator","require","_component_registrator","_interopRequireDefault","_dom_component","_renderer","_array","_common","_extend","_iterator","_math","_type","_window","_events_engine","_drag","_position","_index","_visibility_change","obj","__esModule","RESIZABLE","RESIZABLE_CLASS","RESIZABLE_RESIZING_CLASS","RESIZABLE_HANDLE_CLASS","RESIZABLE_HANDLE_TOP_CLASS","RESIZABLE_HANDLE_BOTTOM_CLASS","RESIZABLE_HANDLE_LEFT_CLASS","RESIZABLE_HANDLE_RIGHT_CLASS","RESIZABLE_HANDLE_CORNER_CLASS","DRAGSTART_START_EVENT_NAME","addNamespace","start","DRAGSTART_EVENT_NAME","move","DRAGSTART_END_EVENT_NAME","end","SIDE_BORDER_WIDTH_STYLES","left","top","right","bottom","Resizable","inherit","_getDefaultOptions","extend","callBase","handles","step","stepPrecision","area","minWidth","maxWidth","minHeight","maxHeight","onResizeStart","onResize","onResizeEnd","roundStepValue","_init","$element","addClass","_initMarkup","_renderHandles","_render","_renderActions","_resizeStartAction","_createActionByOption","_resizeEndAction","_resizeAction","_this","_handles","option","directions","split","each","index","handleName","_renderHandle","inArray","_attachEventHandlers","$handle","appendTo","push","handlers","_dragStartHandler","bind","_dragHandler","_dragEndHandler","forEach","handleElement","on","direction","immediate","_detachEventHandlers","off","_toggleEventHandlers","shouldAttachEvents","e","is","cancel","_toggleResizingClass","_movingSides","_getMovingSides","_elementLocation","locate","elementRect","getBoundingRect","get","_elementSize","width","height","_renderDragOffsets","event","targetElements","value","toggleClass","_getArea","target","closest","handleWidth","outerWidth","handleHeight","outerHeight","handleOffset","offset","areaOffset","scrollOffset","_getAreaScrollOffset","maxLeftOffset","scrollX","maxRightOffset","maxTopOffset","scrollY","maxBottomOffset","_getBorderWidth","isWindow","borderWidth","css","parseInt","sides","location","size","_getOffset","x","y","_renderWidth","_renderHeight","offsetTop","offsetLeft","triggerResizeEvent","steps","pairToObject","strictPrecision","_getStrictOffset","_getSimpleOffset","h","v","xPos","yPos","newXShift","newYShift","sign","Math","isNaN","separatorOffset","isSmallOffset","abs","newOffsetX","newOffsetY","$target","hasCornerTopLeftClass","hasClass","hasCornerTopRightClass","hasCornerBottomLeftClass","hasCornerBottomRightClass","isFunction","call","isPlainObject","_getAreaFromObject","_getAreaFromElement","isElement","areaElement","pageXOffset","pageYOffset","result","_correctAreaGeometry","$area","length","innerWidth","innerHeight","areaBorderLeft","areaBorderTop","fitIntoRange","_optionChanged","args","name","_invalidate","hasWindow","_clean","find","remove","_useTemplates","_default","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/resizable.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _translator = require(\"../animation/translator\");\r\nvar _component_registrator = _interopRequireDefault(require(\"../core/component_registrator\"));\r\nvar _dom_component = _interopRequireDefault(require(\"../core/dom_component\"));\r\nvar _renderer = _interopRequireDefault(require(\"../core/renderer\"));\r\nvar _array = require(\"../core/utils/array\");\r\nvar _common = require(\"../core/utils/common\");\r\nvar _extend = require(\"../core/utils/extend\");\r\nvar _iterator = require(\"../core/utils/iterator\");\r\nvar _math = require(\"../core/utils/math\");\r\nvar _type = require(\"../core/utils/type\");\r\nvar _window = require(\"../core/utils/window\");\r\nvar _events_engine = _interopRequireDefault(require(\"../events/core/events_engine\"));\r\nvar _drag = require(\"../events/drag\");\r\nvar _position = require(\"../core/utils/position\");\r\nvar _index = require(\"../events/utils/index\");\r\nvar _visibility_change = require(\"../events/visibility_change\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar RESIZABLE = \"dxResizable\";\r\nvar RESIZABLE_CLASS = \"dx-resizable\";\r\nvar RESIZABLE_RESIZING_CLASS = \"dx-resizable-resizing\";\r\nvar RESIZABLE_HANDLE_CLASS = \"dx-resizable-handle\";\r\nvar RESIZABLE_HANDLE_TOP_CLASS = \"dx-resizable-handle-top\";\r\nvar RESIZABLE_HANDLE_BOTTOM_CLASS = \"dx-resizable-handle-bottom\";\r\nvar RESIZABLE_HANDLE_LEFT_CLASS = \"dx-resizable-handle-left\";\r\nvar RESIZABLE_HANDLE_RIGHT_CLASS = \"dx-resizable-handle-right\";\r\nvar RESIZABLE_HANDLE_CORNER_CLASS = \"dx-resizable-handle-corner\";\r\nvar DRAGSTART_START_EVENT_NAME = (0, _index.addNamespace)(_drag.start, RESIZABLE);\r\nvar DRAGSTART_EVENT_NAME = (0, _index.addNamespace)(_drag.move, RESIZABLE);\r\nvar DRAGSTART_END_EVENT_NAME = (0, _index.addNamespace)(_drag.end, RESIZABLE);\r\nvar SIDE_BORDER_WIDTH_STYLES = {\r\n    left: \"borderLeftWidth\",\r\n    top: \"borderTopWidth\",\r\n    right: \"borderRightWidth\",\r\n    bottom: \"borderBottomWidth\"\r\n};\r\nvar Resizable = _dom_component.default.inherit({\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            handles: \"all\",\r\n            step: \"1\",\r\n            stepPrecision: \"simple\",\r\n            area: void 0,\r\n            minWidth: 30,\r\n            maxWidth: 1 / 0,\r\n            minHeight: 30,\r\n            maxHeight: 1 / 0,\r\n            onResizeStart: null,\r\n            onResize: null,\r\n            onResizeEnd: null,\r\n            roundStepValue: true\r\n        })\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this.$element().addClass(RESIZABLE_CLASS)\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this._renderHandles()\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._renderActions()\r\n    },\r\n    _renderActions: function() {\r\n        this._resizeStartAction = this._createActionByOption(\"onResizeStart\");\r\n        this._resizeEndAction = this._createActionByOption(\"onResizeEnd\");\r\n        this._resizeAction = this._createActionByOption(\"onResize\")\r\n    },\r\n    _renderHandles: function() {\r\n        var _this = this;\r\n        this._handles = [];\r\n        var handles = this.option(\"handles\");\r\n        if (\"none\" === handles) {\r\n            return\r\n        }\r\n        var directions = \"all\" === handles ? [\"top\", \"bottom\", \"left\", \"right\"] : handles.split(\" \");\r\n        (0, _iterator.each)(directions, function(index, handleName) {\r\n            _this._renderHandle(handleName)\r\n        });\r\n        (0, _array.inArray)(\"bottom\", directions) + 1 && (0, _array.inArray)(\"right\", directions) + 1 && this._renderHandle(\"corner-bottom-right\");\r\n        (0, _array.inArray)(\"bottom\", directions) + 1 && (0, _array.inArray)(\"left\", directions) + 1 && this._renderHandle(\"corner-bottom-left\");\r\n        (0, _array.inArray)(\"top\", directions) + 1 && (0, _array.inArray)(\"right\", directions) + 1 && this._renderHandle(\"corner-top-right\");\r\n        (0, _array.inArray)(\"top\", directions) + 1 && (0, _array.inArray)(\"left\", directions) + 1 && this._renderHandle(\"corner-top-left\");\r\n        this._attachEventHandlers()\r\n    },\r\n    _renderHandle: function(handleName) {\r\n        var $handle = (0, _renderer.default)(\"<div>\").addClass(RESIZABLE_HANDLE_CLASS).addClass(RESIZABLE_HANDLE_CLASS + \"-\" + handleName).appendTo(this.$element());\r\n        this._handles.push($handle)\r\n    },\r\n    _attachEventHandlers: function() {\r\n        if (this.option(\"disabled\")) {\r\n            return\r\n        }\r\n        var handlers = {};\r\n        handlers[DRAGSTART_START_EVENT_NAME] = this._dragStartHandler.bind(this);\r\n        handlers[DRAGSTART_EVENT_NAME] = this._dragHandler.bind(this);\r\n        handlers[DRAGSTART_END_EVENT_NAME] = this._dragEndHandler.bind(this);\r\n        this._handles.forEach(function(handleElement) {\r\n            _events_engine.default.on(handleElement, handlers, {\r\n                direction: \"both\",\r\n                immediate: true\r\n            })\r\n        })\r\n    },\r\n    _detachEventHandlers: function() {\r\n        this._handles.forEach(function(handleElement) {\r\n            _events_engine.default.off(handleElement)\r\n        })\r\n    },\r\n    _toggleEventHandlers: function(shouldAttachEvents) {\r\n        shouldAttachEvents ? this._attachEventHandlers() : this._detachEventHandlers()\r\n    },\r\n    _dragStartHandler: function(e) {\r\n        var $element = this.$element();\r\n        if ($element.is(\".dx-state-disabled, .dx-state-disabled *\")) {\r\n            e.cancel = true;\r\n            return\r\n        }\r\n        this._toggleResizingClass(true);\r\n        this._movingSides = this._getMovingSides(e);\r\n        this._elementLocation = (0, _translator.locate)($element);\r\n        var elementRect = (0, _position.getBoundingRect)($element.get(0));\r\n        this._elementSize = {\r\n            width: elementRect.width,\r\n            height: elementRect.height\r\n        };\r\n        this._renderDragOffsets(e);\r\n        this._resizeStartAction({\r\n            event: e,\r\n            width: this._elementSize.width,\r\n            height: this._elementSize.height,\r\n            handles: this._movingSides\r\n        });\r\n        e.targetElements = null\r\n    },\r\n    _toggleResizingClass: function(value) {\r\n        this.$element().toggleClass(RESIZABLE_RESIZING_CLASS, value)\r\n    },\r\n    _renderDragOffsets: function(e) {\r\n        var area = this._getArea();\r\n        if (!area) {\r\n            return\r\n        }\r\n        var $handle = (0, _renderer.default)(e.target).closest(\".\" + RESIZABLE_HANDLE_CLASS);\r\n        var handleWidth = $handle.outerWidth();\r\n        var handleHeight = $handle.outerHeight();\r\n        var handleOffset = $handle.offset();\r\n        var areaOffset = area.offset;\r\n        var scrollOffset = this._getAreaScrollOffset();\r\n        e.maxLeftOffset = handleOffset.left - areaOffset.left - scrollOffset.scrollX;\r\n        e.maxRightOffset = areaOffset.left + area.width - handleOffset.left - handleWidth + scrollOffset.scrollX;\r\n        e.maxTopOffset = handleOffset.top - areaOffset.top - scrollOffset.scrollY;\r\n        e.maxBottomOffset = areaOffset.top + area.height - handleOffset.top - handleHeight + scrollOffset.scrollY\r\n    },\r\n    _getBorderWidth: function($element, direction) {\r\n        if ((0, _type.isWindow)($element.get(0))) {\r\n            return 0\r\n        }\r\n        var borderWidth = $element.css(SIDE_BORDER_WIDTH_STYLES[direction]);\r\n        return parseInt(borderWidth) || 0\r\n    },\r\n    _dragHandler: function(e) {\r\n        var $element = this.$element();\r\n        var sides = this._movingSides;\r\n        var location = this._elementLocation;\r\n        var size = this._elementSize;\r\n        var offset = this._getOffset(e);\r\n        var width = size.width + offset.x * (sides.left ? -1 : 1);\r\n        var height = size.height + offset.y * (sides.top ? -1 : 1);\r\n        if (offset.x || \"strict\" === this.option(\"stepPrecision\")) {\r\n            this._renderWidth(width)\r\n        }\r\n        if (offset.y || \"strict\" === this.option(\"stepPrecision\")) {\r\n            this._renderHeight(height)\r\n        }\r\n        var elementRect = (0, _position.getBoundingRect)($element.get(0));\r\n        var offsetTop = offset.y - ((elementRect.height || height) - height);\r\n        var offsetLeft = offset.x - ((elementRect.width || width) - width);\r\n        (0, _translator.move)($element, {\r\n            top: location.top + (sides.top ? offsetTop : 0),\r\n            left: location.left + (sides.left ? offsetLeft : 0)\r\n        });\r\n        this._resizeAction({\r\n            event: e,\r\n            width: this.option(\"width\") || width,\r\n            height: this.option(\"height\") || height,\r\n            handles: this._movingSides\r\n        });\r\n        (0, _visibility_change.triggerResizeEvent)($element)\r\n    },\r\n    _getOffset: function(e) {\r\n        var offset = e.offset;\r\n        var steps = (0, _common.pairToObject)(this.option(\"step\"), !this.option(\"roundStepValue\"));\r\n        var sides = this._getMovingSides(e);\r\n        var strictPrecision = \"strict\" === this.option(\"stepPrecision\");\r\n        if (!sides.left && !sides.right) {\r\n            offset.x = 0\r\n        }\r\n        if (!sides.top && !sides.bottom) {\r\n            offset.y = 0\r\n        }\r\n        return strictPrecision ? this._getStrictOffset(offset, steps, sides) : this._getSimpleOffset(offset, steps)\r\n    },\r\n    _getSimpleOffset: function(offset, steps) {\r\n        return {\r\n            x: offset.x - offset.x % steps.h,\r\n            y: offset.y - offset.y % steps.v\r\n        }\r\n    },\r\n    _getStrictOffset: function(offset, steps, sides) {\r\n        var location = this._elementLocation;\r\n        var size = this._elementSize;\r\n        var xPos = sides.left ? location.left : location.left + size.width;\r\n        var yPos = sides.top ? location.top : location.top + size.height;\r\n        var newXShift = (xPos + offset.x) % steps.h;\r\n        var newYShift = (yPos + offset.y) % steps.v;\r\n        var sign = Math.sign || function(x) {\r\n            x = +x;\r\n            if (0 === x || isNaN(x)) {\r\n                return x\r\n            }\r\n            return x > 0 ? 1 : -1\r\n        };\r\n        var separatorOffset = function(steps, offset) {\r\n            return (1 + .2 * sign(offset)) % 1 * steps\r\n        };\r\n        var isSmallOffset = function(offset, steps) {\r\n            return Math.abs(offset) < .2 * steps\r\n        };\r\n        var newOffsetX = offset.x - newXShift;\r\n        var newOffsetY = offset.y - newYShift;\r\n        if (newXShift > separatorOffset(steps.h, offset.x)) {\r\n            newOffsetX += steps.h\r\n        }\r\n        if (newYShift > separatorOffset(steps.v, offset.y)) {\r\n            newOffsetY += steps.v\r\n        }\r\n        return {\r\n            x: (sides.left || sides.right) && !isSmallOffset(offset.x, steps.h) ? newOffsetX : 0,\r\n            y: (sides.top || sides.bottom) && !isSmallOffset(offset.y, steps.v) ? newOffsetY : 0\r\n        }\r\n    },\r\n    _getMovingSides: function(e) {\r\n        var $target = (0, _renderer.default)(e.target);\r\n        var hasCornerTopLeftClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-top-left\");\r\n        var hasCornerTopRightClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-top-right\");\r\n        var hasCornerBottomLeftClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-bottom-left\");\r\n        var hasCornerBottomRightClass = $target.hasClass(RESIZABLE_HANDLE_CORNER_CLASS + \"-bottom-right\");\r\n        return {\r\n            top: $target.hasClass(RESIZABLE_HANDLE_TOP_CLASS) || hasCornerTopLeftClass || hasCornerTopRightClass,\r\n            left: $target.hasClass(RESIZABLE_HANDLE_LEFT_CLASS) || hasCornerTopLeftClass || hasCornerBottomLeftClass,\r\n            bottom: $target.hasClass(RESIZABLE_HANDLE_BOTTOM_CLASS) || hasCornerBottomLeftClass || hasCornerBottomRightClass,\r\n            right: $target.hasClass(RESIZABLE_HANDLE_RIGHT_CLASS) || hasCornerTopRightClass || hasCornerBottomRightClass\r\n        }\r\n    },\r\n    _getArea: function() {\r\n        var area = this.option(\"area\");\r\n        if ((0, _type.isFunction)(area)) {\r\n            area = area.call(this)\r\n        }\r\n        if ((0, _type.isPlainObject)(area)) {\r\n            return this._getAreaFromObject(area)\r\n        }\r\n        return this._getAreaFromElement(area)\r\n    },\r\n    _getAreaScrollOffset: function() {\r\n        var area = this.option(\"area\");\r\n        var isElement = !(0, _type.isFunction)(area) && !(0, _type.isPlainObject)(area);\r\n        var scrollOffset = {\r\n            scrollY: 0,\r\n            scrollX: 0\r\n        };\r\n        if (isElement) {\r\n            var areaElement = (0, _renderer.default)(area)[0];\r\n            if ((0, _type.isWindow)(areaElement)) {\r\n                scrollOffset.scrollX = areaElement.pageXOffset;\r\n                scrollOffset.scrollY = areaElement.pageYOffset\r\n            }\r\n        }\r\n        return scrollOffset\r\n    },\r\n    _getAreaFromObject: function(area) {\r\n        var result = {\r\n            width: area.right - area.left,\r\n            height: area.bottom - area.top,\r\n            offset: {\r\n                left: area.left,\r\n                top: area.top\r\n            }\r\n        };\r\n        this._correctAreaGeometry(result);\r\n        return result\r\n    },\r\n    _getAreaFromElement: function(area) {\r\n        var $area = (0, _renderer.default)(area);\r\n        var result;\r\n        if ($area.length) {\r\n            result = {\r\n                width: $area.innerWidth(),\r\n                height: $area.innerHeight(),\r\n                offset: (0, _extend.extend)({\r\n                    top: 0,\r\n                    left: 0\r\n                }, (0, _type.isWindow)($area[0]) ? {} : $area.offset())\r\n            };\r\n            this._correctAreaGeometry(result, $area)\r\n        }\r\n        return result\r\n    },\r\n    _correctAreaGeometry: function(result, $area) {\r\n        var areaBorderLeft = $area ? this._getBorderWidth($area, \"left\") : 0;\r\n        var areaBorderTop = $area ? this._getBorderWidth($area, \"top\") : 0;\r\n        result.offset.left += areaBorderLeft + this._getBorderWidth(this.$element(), \"left\");\r\n        result.offset.top += areaBorderTop + this._getBorderWidth(this.$element(), \"top\");\r\n        result.width -= this.$element().outerWidth() - this.$element().innerWidth();\r\n        result.height -= this.$element().outerHeight() - this.$element().innerHeight()\r\n    },\r\n    _dragEndHandler: function(e) {\r\n        var $element = this.$element();\r\n        this._resizeEndAction({\r\n            event: e,\r\n            width: $element.outerWidth(),\r\n            height: $element.outerHeight(),\r\n            handles: this._movingSides\r\n        });\r\n        this._toggleResizingClass(false)\r\n    },\r\n    _renderWidth: function(width) {\r\n        this.option(\"width\", (0, _math.fitIntoRange)(width, this.option(\"minWidth\"), this.option(\"maxWidth\")))\r\n    },\r\n    _renderHeight: function(height) {\r\n        this.option(\"height\", (0, _math.fitIntoRange)(height, this.option(\"minHeight\"), this.option(\"maxHeight\")))\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"disabled\":\r\n                this._toggleEventHandlers(!args.value);\r\n                this.callBase(args);\r\n                break;\r\n            case \"handles\":\r\n                this._invalidate();\r\n                break;\r\n            case \"minWidth\":\r\n            case \"maxWidth\":\r\n                (0, _window.hasWindow)() && this._renderWidth(this.$element().outerWidth());\r\n                break;\r\n            case \"minHeight\":\r\n            case \"maxHeight\":\r\n                (0, _window.hasWindow)() && this._renderHeight(this.$element().outerHeight());\r\n                break;\r\n            case \"onResize\":\r\n            case \"onResizeStart\":\r\n            case \"onResizeEnd\":\r\n                this._renderActions();\r\n                break;\r\n            case \"area\":\r\n            case \"stepPrecision\":\r\n            case \"step\":\r\n            case \"roundStepValue\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _clean: function() {\r\n        this.$element().find(\".\" + RESIZABLE_HANDLE_CLASS).remove()\r\n    },\r\n    _useTemplates: function() {\r\n        return false\r\n    }\r\n});\r\n(0, _component_registrator.default)(RESIZABLE, Resizable);\r\nvar _default = Resizable;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\nmodule.exports.default = module.exports;\r\n"]},"metadata":{},"sourceType":"script"}