{"ast":null,"code":"/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.virtual_scrolling_core.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.getContentHeightLimit = getContentHeightLimit;\nexports.subscribeToExternalScrollers = subscribeToExternalScrollers;\nexports.VirtualScrollController = exports.getPixelRatio = void 0;\n\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\n\nvar _window = require(\"../../core/utils/window\");\n\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\n\nvar _browser = _interopRequireDefault(require(\"../../core/utils/browser\"));\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _position = _interopRequireDefault(require(\"../../animation/position\"));\n\nvar _iterator = require(\"../../core/utils/iterator\");\n\nvar _class = _interopRequireDefault(require(\"../../core/class\"));\n\nvar _deferred = require(\"../../core/utils/deferred\");\n\nvar _callbacks = _interopRequireDefault(require(\"../../core/utils/callbacks\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar SCROLLING_MODE_INFINITE = \"infinite\";\nvar SCROLLING_MODE_VIRTUAL = \"virtual\";\n\nvar isVirtualMode = function (that) {\n  return that.option(\"scrolling.mode\") === SCROLLING_MODE_VIRTUAL || that._isVirtual;\n};\n\nvar isAppendMode = function (that) {\n  return that.option(\"scrolling.mode\") === SCROLLING_MODE_INFINITE && !that._isVirtual;\n};\n\nvar needTwoPagesLoading = function (that) {\n  return that.option(\"scrolling.loadTwoPagesOnStart\") || that._isVirtual || that._viewportItemIndex > 0;\n};\n\nvar getPixelRatio = function (window) {\n  return window.devicePixelRatio || 1;\n};\n\nexports.getPixelRatio = getPixelRatio;\n\nfunction getContentHeightLimit(browser) {\n  if (browser.msie) {\n    return 4e6;\n  } else {\n    if (browser.mozilla) {\n      return 8e6;\n    }\n  }\n\n  return 15e6 / getPixelRatio((0, _window.getWindow)());\n}\n\nfunction subscribeToExternalScrollers($element, scrollChangedHandler, $targetElement) {\n  var $scrollElement;\n  var scrollableArray = [];\n  var scrollToArray = [];\n  var disposeArray = [];\n  $targetElement = $targetElement || $element;\n\n  function getElementOffset(scrollable) {\n    var $scrollableElement = scrollable.element ? scrollable.$element() : scrollable;\n\n    var scrollableOffset = _position.default.offset($scrollableElement);\n\n    if (!scrollableOffset) {\n      return $element.offset().top;\n    }\n\n    return scrollable.scrollTop() - (scrollableOffset.top - $element.offset().top);\n  }\n\n  function createWindowScrollHandler(scrollable) {\n    return function () {\n      var scrollTop = scrollable.scrollTop() - getElementOffset(scrollable);\n      scrollTop = scrollTop > 0 ? scrollTop : 0;\n      scrollChangedHandler(scrollTop);\n    };\n  }\n\n  var widgetScrollStrategy = {\n    on: function (scrollable, eventName, handler) {\n      scrollable.on(\"scroll\", handler);\n    },\n    off: function (scrollable, eventName, handler) {\n      scrollable.off(\"scroll\", handler);\n    }\n  };\n\n  function subscribeToScrollEvents($scrollElement) {\n    var isDocument = \"#document\" === $scrollElement.get(0).nodeName;\n    var scrollable = $scrollElement.data(\"dxScrollable\");\n    var eventsStrategy = widgetScrollStrategy;\n\n    if (!scrollable) {\n      scrollable = isDocument && (0, _renderer.default)((0, _window.getWindow)()) || \"auto\" === $scrollElement.css(\"overflowY\") && $scrollElement;\n      eventsStrategy = _events_engine.default;\n\n      if (!scrollable) {\n        return;\n      }\n    }\n\n    var handler = createWindowScrollHandler(scrollable);\n    eventsStrategy.on(scrollable, \"scroll\", handler);\n    scrollToArray.push(function (pos) {\n      var topOffset = getElementOffset(scrollable);\n      var scrollMethod = scrollable.scrollTo ? \"scrollTo\" : \"scrollTop\";\n\n      if (pos - topOffset >= 0) {\n        scrollable[scrollMethod](pos + topOffset);\n      }\n    });\n    scrollableArray.push(scrollable);\n    disposeArray.push(function () {\n      eventsStrategy.off(scrollable, \"scroll\", handler);\n    });\n  }\n\n  for ($scrollElement = $targetElement.parent(); $scrollElement.length; $scrollElement = $scrollElement.parent()) {\n    subscribeToScrollEvents($scrollElement);\n  }\n\n  return {\n    scrollTo: function (pos) {\n      (0, _iterator.each)(scrollToArray, function (_, scrollTo) {\n        scrollTo(pos);\n      });\n    },\n    dispose: function () {\n      (0, _iterator.each)(disposeArray, function (_, dispose) {\n        dispose();\n      });\n    }\n  };\n}\n\nvar VirtualScrollController = _class.default.inherit(function () {\n  var getViewportPageCount = function (that) {\n    var pageSize = that._dataSource.pageSize();\n\n    var preventPreload = that.option(\"scrolling.preventPreload\");\n\n    if (preventPreload) {\n      return 0;\n    }\n\n    var realViewportSize = that._viewportSize;\n\n    if (isVirtualMode(that) && !that.option(\"legacyRendering\") && that.option(\"scrolling.removeInvisiblePages\")) {\n      realViewportSize = 0;\n      var viewportSize = that._viewportSize * that._viewportItemSize;\n      var offset = that.getContentOffset();\n      var position = that._position || 0;\n      var virtualItemsCount = that.virtualItemsCount();\n\n      var totalItemsCount = that._dataSource.totalItemsCount();\n\n      for (var itemIndex = virtualItemsCount.begin; itemIndex < totalItemsCount; itemIndex++) {\n        if (offset >= position + viewportSize) {\n          break;\n        }\n\n        var itemSize = that._itemSizes[itemIndex] || that._viewportItemSize;\n        offset += itemSize;\n\n        if (offset >= position) {\n          realViewportSize++;\n        }\n      }\n    }\n\n    return pageSize && realViewportSize > 0 ? Math.ceil(realViewportSize / pageSize) : 1;\n  };\n\n  var getPreloadPageCount = function (that, previous) {\n    var preloadEnabled = that.option(\"scrolling.preloadEnabled\");\n    var pageCount = getViewportPageCount(that);\n\n    if (pageCount) {\n      if (previous) {\n        pageCount = preloadEnabled ? 1 : 0;\n      } else {\n        if (preloadEnabled) {\n          pageCount++;\n        }\n\n        if (isAppendMode(that) || !needTwoPagesLoading(that)) {\n          pageCount--;\n        }\n      }\n    }\n\n    return pageCount;\n  };\n\n  var getPageIndexForLoad = function (that) {\n    var result = -1;\n    var beginPageIndex = getBeginPageIndex(that);\n    var dataSource = that._dataSource;\n\n    if (beginPageIndex < 0) {\n      result = that._pageIndex;\n    } else {\n      if (!that._cache[that._pageIndex - beginPageIndex]) {\n        result = that._pageIndex;\n      } else {\n        if (beginPageIndex >= 0 && that._viewportSize >= 0) {\n          if (beginPageIndex > 0) {\n            var needToLoadPageBeforeLast = getEndPageIndex(that) + 1 === dataSource.pageCount() && that._cache.length < getPreloadPageCount(that) + 1;\n            var needToLoadPrevPage = needToLoadPageBeforeLast || that._pageIndex === beginPageIndex && getPreloadPageCount(that, true);\n\n            if (needToLoadPrevPage) {\n              result = beginPageIndex - 1;\n            }\n          }\n\n          if (result < 0) {\n            var needToLoadNextPage = beginPageIndex + that._cache.length <= that._pageIndex + getPreloadPageCount(that);\n\n            if (needToLoadNextPage) {\n              result = beginPageIndex + that._cache.length;\n            }\n          }\n        }\n      }\n    }\n\n    if (that._loadingPageIndexes[result]) {\n      result = -1;\n    }\n\n    return result;\n  };\n\n  function getBeginPageIndex(that) {\n    return that._cache.length ? that._cache[0].pageIndex : -1;\n  }\n\n  function getEndPageIndex(that) {\n    return that._cache.length ? that._cache[that._cache.length - 1].pageIndex : -1;\n  }\n\n  var fireChanged = function (that, changed, args) {\n    that._isChangedFiring = true;\n    changed(args);\n    that._isChangedFiring = false;\n  };\n\n  var processDelayChanged = function (that, changed, args) {\n    if (that._isDelayChanged) {\n      that._isDelayChanged = false;\n      fireChanged(that, changed, args);\n      return true;\n    }\n  };\n\n  var processChanged = function (that, changed, changeType, isDelayChanged, removeCacheItem) {\n    var dataSource = that._dataSource;\n    var items = dataSource.items().slice();\n    var change = (0, _type.isObject)(changeType) ? changeType : void 0;\n    var isPrepend = \"prepend\" === changeType;\n    var viewportItems = dataSource.viewportItems();\n\n    if (changeType && (0, _type.isString)(changeType) && !that._isDelayChanged) {\n      change = {\n        changeType: changeType,\n        items: items\n      };\n\n      if (removeCacheItem) {\n        change.removeCount = removeCacheItem.itemsCount;\n\n        if (change.removeCount && dataSource.correctCount) {\n          change.removeCount = dataSource.correctCount(viewportItems, change.removeCount, isPrepend);\n        }\n      }\n    }\n\n    var removeItemCount = removeCacheItem ? removeCacheItem.itemsLength : 0;\n\n    if (removeItemCount && dataSource.correctCount) {\n      removeItemCount = dataSource.correctCount(viewportItems, removeItemCount, isPrepend);\n    }\n\n    if (\"append\" === changeType) {\n      viewportItems.push.apply(viewportItems, items);\n\n      if (removeCacheItem) {\n        viewportItems.splice(0, removeItemCount);\n      }\n    } else {\n      if (isPrepend) {\n        viewportItems.unshift.apply(viewportItems, items);\n\n        if (removeCacheItem) {\n          viewportItems.splice(-removeItemCount);\n        }\n      } else {\n        that._dataSource.viewportItems(items);\n      }\n    }\n\n    dataSource.updateLoading();\n    that._lastPageIndex = that.pageIndex();\n    that._isDelayChanged = isDelayChanged;\n\n    if (!isDelayChanged) {\n      fireChanged(that, changed, change);\n    }\n  };\n\n  var loadCore = function (that, pageIndex) {\n    var dataSource = that._dataSource;\n\n    if (pageIndex === that.pageIndex() || !dataSource.isLoading() && pageIndex < dataSource.pageCount() || !dataSource.hasKnownLastPage() && pageIndex === dataSource.pageCount()) {\n      dataSource.pageIndex(pageIndex);\n      that._loadingPageIndexes[pageIndex] = true;\n      return (0, _deferred.when)(dataSource.load()).always(function () {\n        that._loadingPageIndexes[pageIndex] = false;\n      });\n    }\n  };\n\n  return {\n    ctor: function (component, dataSource, isVirtual) {\n      var that = this;\n      that._dataSource = dataSource;\n      that.component = component;\n      that._pageIndex = that._lastPageIndex = dataSource.pageIndex();\n      that._viewportSize = 0;\n      that._viewportItemSize = 20;\n      that._viewportItemIndex = -1;\n      that._itemSizes = {};\n      that._sizeRatio = 1;\n      that._items = [];\n      that._cache = [];\n      that._isVirtual = isVirtual;\n      that._loadingPageIndexes = {};\n      that.positionChanged = (0, _callbacks.default)();\n    },\n    getItemSizes: function () {\n      return this._itemSizes;\n    },\n    option: function () {\n      return this.component.option.apply(this.component, arguments);\n    },\n    virtualItemsCount: function () {\n      var that = this;\n      var pageIndex;\n      var itemsCount = 0;\n\n      if (isVirtualMode(that)) {\n        pageIndex = getBeginPageIndex(that);\n\n        if (pageIndex < 0) {\n          pageIndex = that._dataSource.pageIndex();\n        }\n\n        var beginItemsCount = pageIndex * that._dataSource.pageSize();\n\n        itemsCount = that._cache.length * that._dataSource.pageSize();\n        var endItemsCount = Math.max(0, that._dataSource.totalItemsCount() - itemsCount - beginItemsCount);\n        return {\n          begin: beginItemsCount,\n          end: endItemsCount\n        };\n      }\n    },\n    setViewportPosition: function (position) {\n      var that = this;\n      var result = new _deferred.Deferred();\n      var scrollingTimeout = Math.min(that.option(\"scrolling.timeout\") || 0, that._dataSource.changingDuration());\n\n      if (scrollingTimeout < that.option(\"scrolling.renderingThreshold\")) {\n        scrollingTimeout = that.option(\"scrolling.minTimeout\") || 0;\n      }\n\n      clearTimeout(that._scrollTimeoutID);\n\n      if (scrollingTimeout > 0) {\n        that._scrollTimeoutID = setTimeout(function () {\n          that._setViewportPositionCore(position);\n\n          result.resolve();\n        }, scrollingTimeout);\n      } else {\n        that._setViewportPositionCore(position);\n\n        result.resolve();\n      }\n\n      return result.promise();\n    },\n    getViewportPosition: function () {\n      return this._position || 0;\n    },\n    getItemIndexByPosition: function () {\n      var that = this;\n      var position = that._position;\n      var defaultItemSize = that.getItemSize();\n      var offset = 0;\n      var itemOffset = 0;\n      var itemOffsetsWithSize = Object.keys(that._itemSizes).concat(-1);\n\n      for (var i = 0; i < itemOffsetsWithSize.length && offset < position; i++) {\n        var itemOffsetWithSize = parseInt(itemOffsetsWithSize[i]);\n        var itemOffsetDiff = (position - offset) / defaultItemSize;\n\n        if (itemOffsetWithSize < 0 || itemOffset + itemOffsetDiff < itemOffsetWithSize) {\n          itemOffset += itemOffsetDiff;\n          break;\n        } else {\n          itemOffsetDiff = itemOffsetWithSize - itemOffset;\n          offset += itemOffsetDiff * defaultItemSize;\n          itemOffset += itemOffsetDiff;\n        }\n\n        var itemSize = that._itemSizes[itemOffsetWithSize];\n        offset += itemSize;\n        itemOffset += offset < position ? 1 : (position - offset + itemSize) / itemSize;\n      }\n\n      return Math.round(50 * itemOffset) / 50;\n    },\n    _setViewportPositionCore: function (position) {\n      this._position = position;\n      var itemIndex = this.getItemIndexByPosition();\n      var result = this.setViewportItemIndex(itemIndex);\n      this.positionChanged.fire();\n      return result;\n    },\n    setContentSize: function (size) {\n      var that = this;\n      var sizes = Array.isArray(size) && size;\n      var virtualItemsCount = that.virtualItemsCount();\n\n      if (sizes) {\n        size = sizes.reduce(function (a, b) {\n          return a + b;\n        }, 0);\n      }\n\n      that._contentSize = size;\n\n      if (virtualItemsCount) {\n        if (sizes) {\n          sizes.forEach(function (size, index) {\n            that._itemSizes[virtualItemsCount.begin + index] = size;\n          });\n        }\n\n        var virtualContentSize = (virtualItemsCount.begin + virtualItemsCount.end + that.itemsCount()) * that._viewportItemSize;\n\n        var contentHeightLimit = getContentHeightLimit(_browser.default);\n\n        if (virtualContentSize > contentHeightLimit) {\n          that._sizeRatio = contentHeightLimit / virtualContentSize;\n        } else {\n          that._sizeRatio = 1;\n        }\n      }\n    },\n    getItemSize: function () {\n      return this._viewportItemSize * this._sizeRatio;\n    },\n    getItemOffset: function (itemIndex, isEnd) {\n      var that = this;\n      var virtualItemsCount = that.virtualItemsCount();\n      var itemCount = itemIndex;\n\n      if (!virtualItemsCount) {\n        return 0;\n      }\n\n      var offset = 0;\n\n      var totalItemsCount = that._dataSource.totalItemsCount();\n\n      Object.keys(that._itemSizes).forEach(function (currentItemIndex) {\n        if (!itemCount) {\n          return;\n        }\n\n        if (isEnd ? currentItemIndex >= totalItemsCount - itemIndex : currentItemIndex < itemIndex) {\n          offset += that._itemSizes[currentItemIndex];\n          itemCount--;\n        }\n      });\n      return Math.floor(offset + itemCount * that._viewportItemSize * that._sizeRatio);\n    },\n    getContentOffset: function (type) {\n      var isEnd = \"end\" === type;\n      var virtualItemsCount = this.virtualItemsCount();\n\n      if (!virtualItemsCount) {\n        return 0;\n      }\n\n      return this.getItemOffset(isEnd ? virtualItemsCount.end : virtualItemsCount.begin, isEnd);\n    },\n    getVirtualContentSize: function () {\n      var that = this;\n      var virtualItemsCount = that.virtualItemsCount();\n      return virtualItemsCount ? that.getContentOffset(\"begin\") + that.getContentOffset(\"end\") + that._contentSize : 0;\n    },\n    getViewportItemIndex: function () {\n      return this._viewportItemIndex;\n    },\n    setViewportItemIndex: function (itemIndex) {\n      var that = this;\n\n      var pageSize = that._dataSource.pageSize();\n\n      var pageCount = that._dataSource.pageCount();\n\n      var virtualMode = isVirtualMode(that);\n      var appendMode = isAppendMode(that);\n\n      var totalItemsCount = that._dataSource.totalItemsCount();\n\n      var newPageIndex;\n      that._viewportItemIndex = itemIndex;\n\n      if (pageSize && (virtualMode || appendMode) && totalItemsCount >= 0) {\n        if (that._viewportSize && itemIndex + that._viewportSize >= totalItemsCount && !that._isVirtual) {\n          if (that._dataSource.hasKnownLastPage()) {\n            newPageIndex = pageCount - 1;\n            var lastPageSize = totalItemsCount % pageSize;\n\n            if (newPageIndex > 0 && lastPageSize > 0 && lastPageSize < that._viewportSize) {\n              newPageIndex--;\n            }\n          } else {\n            newPageIndex = pageCount;\n          }\n        } else {\n          newPageIndex = Math.floor(itemIndex / pageSize);\n          var maxPageIndex = pageCount - 1;\n          newPageIndex = Math.max(newPageIndex, 0);\n          newPageIndex = Math.min(newPageIndex, maxPageIndex);\n        }\n\n        that.pageIndex(newPageIndex);\n        return that.load();\n      }\n    },\n    viewportItemSize: function (size) {\n      if (void 0 !== size) {\n        this._viewportItemSize = size;\n      }\n\n      return this._viewportItemSize;\n    },\n    viewportSize: function (size) {\n      if (void 0 !== size) {\n        this._viewportSize = size;\n      }\n\n      return this._viewportSize;\n    },\n    pageIndex: function (_pageIndex) {\n      if (isVirtualMode(this) || isAppendMode(this)) {\n        if (void 0 !== _pageIndex) {\n          this._pageIndex = _pageIndex;\n        }\n\n        return this._pageIndex;\n      } else {\n        return this._dataSource.pageIndex(_pageIndex);\n      }\n    },\n    beginPageIndex: function beginPageIndex(defaultPageIndex) {\n      var beginPageIndex = getBeginPageIndex(this);\n\n      if (beginPageIndex < 0) {\n        beginPageIndex = void 0 !== defaultPageIndex ? defaultPageIndex : this.pageIndex();\n      }\n\n      return beginPageIndex;\n    },\n    endPageIndex: function endPageIndex() {\n      var endPageIndex = getEndPageIndex(this);\n      return endPageIndex > 0 ? endPageIndex : this._lastPageIndex;\n    },\n    pageSize: function () {\n      return this._dataSource.pageSize();\n    },\n    load: function () {\n      var that = this;\n      var dataSource = that._dataSource;\n      var result;\n\n      if (isVirtualMode(that) || isAppendMode(that)) {\n        var pageIndexForLoad = getPageIndexForLoad(that);\n\n        if (pageIndexForLoad >= 0) {\n          var loadResult = loadCore(that, pageIndexForLoad);\n\n          if (loadResult) {\n            result = new _deferred.Deferred();\n            loadResult.done(function () {\n              var delayDeferred = that._delayDeferred;\n\n              if (delayDeferred) {\n                delayDeferred.done(result.resolve).fail(result.reject);\n              } else {\n                result.resolve();\n              }\n            }).fail(result.reject);\n            dataSource.updateLoading();\n          }\n        }\n      } else {\n        result = dataSource.load();\n      }\n\n      if (!result && that._lastPageIndex !== that.pageIndex()) {\n        that._dataSource.onChanged({\n          changeType: \"pageIndex\"\n        });\n      }\n\n      return result || new _deferred.Deferred().resolve();\n    },\n    loadIfNeed: function () {\n      var that = this;\n\n      if ((isVirtualMode(that) || isAppendMode(that)) && !that._dataSource.isLoading() && (!that._isChangedFiring || that._isVirtual)) {\n        var position = that.getViewportPosition();\n\n        if (position > 0) {\n          that._setViewportPositionCore(position);\n        } else {\n          that.load();\n        }\n      }\n    },\n    handleDataChanged: function (callBase, e) {\n      var that = this;\n      var dataSource = that._dataSource;\n      var lastCacheLength = that._cache.length;\n      var changeType;\n      var removeInvisiblePages;\n\n      if (e && e.changes) {\n        fireChanged(that, callBase, e);\n      } else {\n        if (isVirtualMode(that) || isAppendMode(that)) {\n          var beginPageIndex = getBeginPageIndex(that);\n\n          if (beginPageIndex >= 0) {\n            if (isVirtualMode(that) && beginPageIndex + that._cache.length !== dataSource.pageIndex() && beginPageIndex - 1 !== dataSource.pageIndex()) {\n              lastCacheLength = 0;\n              that._cache = [];\n            }\n\n            if (isAppendMode(that)) {\n              if (0 === dataSource.pageIndex()) {\n                that._cache = [];\n              } else {\n                if (dataSource.pageIndex() < getEndPageIndex(that)) {\n                  fireChanged(that, callBase, {\n                    changeType: \"append\",\n                    items: []\n                  });\n                  return;\n                }\n              }\n            }\n          }\n\n          var cacheItem = {\n            pageIndex: dataSource.pageIndex(),\n            itemsLength: dataSource.items(true).length,\n            itemsCount: that.itemsCount(true)\n          };\n\n          if (!that.option(\"legacyRendering\") && that.option(\"scrolling.removeInvisiblePages\") && isVirtualMode(that)) {\n            removeInvisiblePages = that._cache.length > Math.max(getPreloadPageCount(this) + (that.option(\"scrolling.preloadEnabled\") ? 1 : 0), 2);\n          } else {\n            processDelayChanged(that, callBase, {\n              isDelayed: true\n            });\n          }\n\n          var removeCacheItem;\n\n          if (beginPageIndex === dataSource.pageIndex() + 1) {\n            if (removeInvisiblePages) {\n              removeCacheItem = that._cache.pop();\n            }\n\n            changeType = \"prepend\";\n\n            that._cache.unshift(cacheItem);\n          } else {\n            if (removeInvisiblePages) {\n              removeCacheItem = that._cache.shift();\n            }\n\n            changeType = \"append\";\n\n            that._cache.push(cacheItem);\n          }\n\n          var isDelayChanged = isVirtualMode(that) && 0 === lastCacheLength && needTwoPagesLoading(that);\n          processChanged(that, callBase, that._cache.length > 1 ? changeType : void 0, isDelayChanged, removeCacheItem);\n          that._delayDeferred = that.load().done(function () {\n            if (processDelayChanged(that, callBase)) {\n              that.load();\n            }\n          });\n        } else {\n          processChanged(that, callBase, e);\n        }\n      }\n    },\n    itemsCount: function itemsCount(isBase) {\n      var itemsCount = 0;\n\n      if (!isBase && isVirtualMode(this)) {\n        (0, _iterator.each)(this._cache, function () {\n          itemsCount += this.itemsCount;\n        });\n      } else {\n        itemsCount = this._dataSource.itemsCount();\n      }\n\n      return itemsCount;\n    },\n    reset: function (isRefresh) {\n      this._loadingPageIndexes = {};\n      this._cache = [];\n\n      if (!isRefresh) {\n        this._itemSizes = {};\n      }\n    },\n    subscribeToWindowScrollEvents: function ($element) {\n      var that = this;\n      that._windowScroll = that._windowScroll || subscribeToExternalScrollers($element, function (scrollTop) {\n        if (that.viewportItemSize()) {\n          that.setViewportPosition(scrollTop);\n        }\n      });\n    },\n    dispose: function () {\n      clearTimeout(this._scrollTimeoutID);\n      this._windowScroll && this._windowScroll.dispose();\n      this._windowScroll = null;\n    },\n    scrollTo: function (pos) {\n      this._windowScroll && this._windowScroll.scrollTo(pos);\n    }\n  };\n}());\n\nexports.VirtualScrollController = VirtualScrollController;","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/node_modules/devextreme/ui/grid_core/ui.grid_core.virtual_scrolling_core.js"],"names":["exports","getContentHeightLimit","subscribeToExternalScrollers","VirtualScrollController","getPixelRatio","_renderer","_interopRequireDefault","require","_window","_events_engine","_browser","_type","_position","_iterator","_class","_deferred","_callbacks","obj","__esModule","SCROLLING_MODE_INFINITE","SCROLLING_MODE_VIRTUAL","isVirtualMode","that","option","_isVirtual","isAppendMode","needTwoPagesLoading","_viewportItemIndex","window","devicePixelRatio","browser","msie","mozilla","getWindow","$element","scrollChangedHandler","$targetElement","$scrollElement","scrollableArray","scrollToArray","disposeArray","getElementOffset","scrollable","$scrollableElement","element","scrollableOffset","default","offset","top","scrollTop","createWindowScrollHandler","widgetScrollStrategy","on","eventName","handler","off","subscribeToScrollEvents","isDocument","get","nodeName","data","eventsStrategy","css","push","pos","topOffset","scrollMethod","scrollTo","parent","length","each","_","dispose","inherit","getViewportPageCount","pageSize","_dataSource","preventPreload","realViewportSize","_viewportSize","viewportSize","_viewportItemSize","getContentOffset","position","virtualItemsCount","totalItemsCount","itemIndex","begin","itemSize","_itemSizes","Math","ceil","getPreloadPageCount","previous","preloadEnabled","pageCount","getPageIndexForLoad","result","beginPageIndex","getBeginPageIndex","dataSource","_pageIndex","_cache","needToLoadPageBeforeLast","getEndPageIndex","needToLoadPrevPage","needToLoadNextPage","_loadingPageIndexes","pageIndex","fireChanged","changed","args","_isChangedFiring","processDelayChanged","_isDelayChanged","processChanged","changeType","isDelayChanged","removeCacheItem","items","slice","change","isObject","isPrepend","viewportItems","isString","removeCount","itemsCount","correctCount","removeItemCount","itemsLength","apply","splice","unshift","updateLoading","_lastPageIndex","loadCore","isLoading","hasKnownLastPage","when","load","always","ctor","component","isVirtual","_sizeRatio","_items","positionChanged","getItemSizes","arguments","beginItemsCount","endItemsCount","max","end","setViewportPosition","Deferred","scrollingTimeout","min","changingDuration","clearTimeout","_scrollTimeoutID","setTimeout","_setViewportPositionCore","resolve","promise","getViewportPosition","getItemIndexByPosition","defaultItemSize","getItemSize","itemOffset","itemOffsetsWithSize","Object","keys","concat","i","itemOffsetWithSize","parseInt","itemOffsetDiff","round","setViewportItemIndex","fire","setContentSize","size","sizes","Array","isArray","reduce","a","b","_contentSize","forEach","index","virtualContentSize","contentHeightLimit","getItemOffset","isEnd","itemCount","currentItemIndex","floor","type","getVirtualContentSize","getViewportItemIndex","virtualMode","appendMode","newPageIndex","lastPageSize","maxPageIndex","viewportItemSize","defaultPageIndex","endPageIndex","pageIndexForLoad","loadResult","done","delayDeferred","_delayDeferred","fail","reject","onChanged","loadIfNeed","handleDataChanged","callBase","e","lastCacheLength","removeInvisiblePages","changes","cacheItem","isDelayed","pop","shift","isBase","reset","isRefresh","subscribeToWindowScrollEvents","_windowScroll"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/grid_core/ui.grid_core.virtual_scrolling_core.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.getContentHeightLimit = getContentHeightLimit;\r\nexports.subscribeToExternalScrollers = subscribeToExternalScrollers;\r\nexports.VirtualScrollController = exports.getPixelRatio = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _window = require(\"../../core/utils/window\");\r\nvar _events_engine = _interopRequireDefault(require(\"../../events/core/events_engine\"));\r\nvar _browser = _interopRequireDefault(require(\"../../core/utils/browser\"));\r\nvar _type = require(\"../../core/utils/type\");\r\nvar _position = _interopRequireDefault(require(\"../../animation/position\"));\r\nvar _iterator = require(\"../../core/utils/iterator\");\r\nvar _class = _interopRequireDefault(require(\"../../core/class\"));\r\nvar _deferred = require(\"../../core/utils/deferred\");\r\nvar _callbacks = _interopRequireDefault(require(\"../../core/utils/callbacks\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar SCROLLING_MODE_INFINITE = \"infinite\";\r\nvar SCROLLING_MODE_VIRTUAL = \"virtual\";\r\nvar isVirtualMode = function(that) {\r\n    return that.option(\"scrolling.mode\") === SCROLLING_MODE_VIRTUAL || that._isVirtual\r\n};\r\nvar isAppendMode = function(that) {\r\n    return that.option(\"scrolling.mode\") === SCROLLING_MODE_INFINITE && !that._isVirtual\r\n};\r\nvar needTwoPagesLoading = function(that) {\r\n    return that.option(\"scrolling.loadTwoPagesOnStart\") || that._isVirtual || that._viewportItemIndex > 0\r\n};\r\nvar getPixelRatio = function(window) {\r\n    return window.devicePixelRatio || 1\r\n};\r\nexports.getPixelRatio = getPixelRatio;\r\n\r\nfunction getContentHeightLimit(browser) {\r\n    if (browser.msie) {\r\n        return 4e6\r\n    } else {\r\n        if (browser.mozilla) {\r\n            return 8e6\r\n        }\r\n    }\r\n    return 15e6 / getPixelRatio((0, _window.getWindow)())\r\n}\r\n\r\nfunction subscribeToExternalScrollers($element, scrollChangedHandler, $targetElement) {\r\n    var $scrollElement;\r\n    var scrollableArray = [];\r\n    var scrollToArray = [];\r\n    var disposeArray = [];\r\n    $targetElement = $targetElement || $element;\r\n\r\n    function getElementOffset(scrollable) {\r\n        var $scrollableElement = scrollable.element ? scrollable.$element() : scrollable;\r\n        var scrollableOffset = _position.default.offset($scrollableElement);\r\n        if (!scrollableOffset) {\r\n            return $element.offset().top\r\n        }\r\n        return scrollable.scrollTop() - (scrollableOffset.top - $element.offset().top)\r\n    }\r\n\r\n    function createWindowScrollHandler(scrollable) {\r\n        return function() {\r\n            var scrollTop = scrollable.scrollTop() - getElementOffset(scrollable);\r\n            scrollTop = scrollTop > 0 ? scrollTop : 0;\r\n            scrollChangedHandler(scrollTop)\r\n        }\r\n    }\r\n    var widgetScrollStrategy = {\r\n        on: function(scrollable, eventName, handler) {\r\n            scrollable.on(\"scroll\", handler)\r\n        },\r\n        off: function(scrollable, eventName, handler) {\r\n            scrollable.off(\"scroll\", handler)\r\n        }\r\n    };\r\n\r\n    function subscribeToScrollEvents($scrollElement) {\r\n        var isDocument = \"#document\" === $scrollElement.get(0).nodeName;\r\n        var scrollable = $scrollElement.data(\"dxScrollable\");\r\n        var eventsStrategy = widgetScrollStrategy;\r\n        if (!scrollable) {\r\n            scrollable = isDocument && (0, _renderer.default)((0, _window.getWindow)()) || \"auto\" === $scrollElement.css(\"overflowY\") && $scrollElement;\r\n            eventsStrategy = _events_engine.default;\r\n            if (!scrollable) {\r\n                return\r\n            }\r\n        }\r\n        var handler = createWindowScrollHandler(scrollable);\r\n        eventsStrategy.on(scrollable, \"scroll\", handler);\r\n        scrollToArray.push(function(pos) {\r\n            var topOffset = getElementOffset(scrollable);\r\n            var scrollMethod = scrollable.scrollTo ? \"scrollTo\" : \"scrollTop\";\r\n            if (pos - topOffset >= 0) {\r\n                scrollable[scrollMethod](pos + topOffset)\r\n            }\r\n        });\r\n        scrollableArray.push(scrollable);\r\n        disposeArray.push(function() {\r\n            eventsStrategy.off(scrollable, \"scroll\", handler)\r\n        })\r\n    }\r\n    for ($scrollElement = $targetElement.parent(); $scrollElement.length; $scrollElement = $scrollElement.parent()) {\r\n        subscribeToScrollEvents($scrollElement)\r\n    }\r\n    return {\r\n        scrollTo: function(pos) {\r\n            (0, _iterator.each)(scrollToArray, function(_, scrollTo) {\r\n                scrollTo(pos)\r\n            })\r\n        },\r\n        dispose: function() {\r\n            (0, _iterator.each)(disposeArray, function(_, dispose) {\r\n                dispose()\r\n            })\r\n        }\r\n    }\r\n}\r\nvar VirtualScrollController = _class.default.inherit(function() {\r\n    var getViewportPageCount = function(that) {\r\n        var pageSize = that._dataSource.pageSize();\r\n        var preventPreload = that.option(\"scrolling.preventPreload\");\r\n        if (preventPreload) {\r\n            return 0\r\n        }\r\n        var realViewportSize = that._viewportSize;\r\n        if (isVirtualMode(that) && !that.option(\"legacyRendering\") && that.option(\"scrolling.removeInvisiblePages\")) {\r\n            realViewportSize = 0;\r\n            var viewportSize = that._viewportSize * that._viewportItemSize;\r\n            var offset = that.getContentOffset();\r\n            var position = that._position || 0;\r\n            var virtualItemsCount = that.virtualItemsCount();\r\n            var totalItemsCount = that._dataSource.totalItemsCount();\r\n            for (var itemIndex = virtualItemsCount.begin; itemIndex < totalItemsCount; itemIndex++) {\r\n                if (offset >= position + viewportSize) {\r\n                    break\r\n                }\r\n                var itemSize = that._itemSizes[itemIndex] || that._viewportItemSize;\r\n                offset += itemSize;\r\n                if (offset >= position) {\r\n                    realViewportSize++\r\n                }\r\n            }\r\n        }\r\n        return pageSize && realViewportSize > 0 ? Math.ceil(realViewportSize / pageSize) : 1\r\n    };\r\n    var getPreloadPageCount = function(that, previous) {\r\n        var preloadEnabled = that.option(\"scrolling.preloadEnabled\");\r\n        var pageCount = getViewportPageCount(that);\r\n        if (pageCount) {\r\n            if (previous) {\r\n                pageCount = preloadEnabled ? 1 : 0\r\n            } else {\r\n                if (preloadEnabled) {\r\n                    pageCount++\r\n                }\r\n                if (isAppendMode(that) || !needTwoPagesLoading(that)) {\r\n                    pageCount--\r\n                }\r\n            }\r\n        }\r\n        return pageCount\r\n    };\r\n    var getPageIndexForLoad = function(that) {\r\n        var result = -1;\r\n        var beginPageIndex = getBeginPageIndex(that);\r\n        var dataSource = that._dataSource;\r\n        if (beginPageIndex < 0) {\r\n            result = that._pageIndex\r\n        } else {\r\n            if (!that._cache[that._pageIndex - beginPageIndex]) {\r\n                result = that._pageIndex\r\n            } else {\r\n                if (beginPageIndex >= 0 && that._viewportSize >= 0) {\r\n                    if (beginPageIndex > 0) {\r\n                        var needToLoadPageBeforeLast = getEndPageIndex(that) + 1 === dataSource.pageCount() && that._cache.length < getPreloadPageCount(that) + 1;\r\n                        var needToLoadPrevPage = needToLoadPageBeforeLast || that._pageIndex === beginPageIndex && getPreloadPageCount(that, true);\r\n                        if (needToLoadPrevPage) {\r\n                            result = beginPageIndex - 1\r\n                        }\r\n                    }\r\n                    if (result < 0) {\r\n                        var needToLoadNextPage = beginPageIndex + that._cache.length <= that._pageIndex + getPreloadPageCount(that);\r\n                        if (needToLoadNextPage) {\r\n                            result = beginPageIndex + that._cache.length\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (that._loadingPageIndexes[result]) {\r\n            result = -1\r\n        }\r\n        return result\r\n    };\r\n\r\n    function getBeginPageIndex(that) {\r\n        return that._cache.length ? that._cache[0].pageIndex : -1\r\n    }\r\n\r\n    function getEndPageIndex(that) {\r\n        return that._cache.length ? that._cache[that._cache.length - 1].pageIndex : -1\r\n    }\r\n    var fireChanged = function(that, changed, args) {\r\n        that._isChangedFiring = true;\r\n        changed(args);\r\n        that._isChangedFiring = false\r\n    };\r\n    var processDelayChanged = function(that, changed, args) {\r\n        if (that._isDelayChanged) {\r\n            that._isDelayChanged = false;\r\n            fireChanged(that, changed, args);\r\n            return true\r\n        }\r\n    };\r\n    var processChanged = function(that, changed, changeType, isDelayChanged, removeCacheItem) {\r\n        var dataSource = that._dataSource;\r\n        var items = dataSource.items().slice();\r\n        var change = (0, _type.isObject)(changeType) ? changeType : void 0;\r\n        var isPrepend = \"prepend\" === changeType;\r\n        var viewportItems = dataSource.viewportItems();\r\n        if (changeType && (0, _type.isString)(changeType) && !that._isDelayChanged) {\r\n            change = {\r\n                changeType: changeType,\r\n                items: items\r\n            };\r\n            if (removeCacheItem) {\r\n                change.removeCount = removeCacheItem.itemsCount;\r\n                if (change.removeCount && dataSource.correctCount) {\r\n                    change.removeCount = dataSource.correctCount(viewportItems, change.removeCount, isPrepend)\r\n                }\r\n            }\r\n        }\r\n        var removeItemCount = removeCacheItem ? removeCacheItem.itemsLength : 0;\r\n        if (removeItemCount && dataSource.correctCount) {\r\n            removeItemCount = dataSource.correctCount(viewportItems, removeItemCount, isPrepend)\r\n        }\r\n        if (\"append\" === changeType) {\r\n            viewportItems.push.apply(viewportItems, items);\r\n            if (removeCacheItem) {\r\n                viewportItems.splice(0, removeItemCount)\r\n            }\r\n        } else {\r\n            if (isPrepend) {\r\n                viewportItems.unshift.apply(viewportItems, items);\r\n                if (removeCacheItem) {\r\n                    viewportItems.splice(-removeItemCount)\r\n                }\r\n            } else {\r\n                that._dataSource.viewportItems(items)\r\n            }\r\n        }\r\n        dataSource.updateLoading();\r\n        that._lastPageIndex = that.pageIndex();\r\n        that._isDelayChanged = isDelayChanged;\r\n        if (!isDelayChanged) {\r\n            fireChanged(that, changed, change)\r\n        }\r\n    };\r\n    var loadCore = function(that, pageIndex) {\r\n        var dataSource = that._dataSource;\r\n        if (pageIndex === that.pageIndex() || !dataSource.isLoading() && pageIndex < dataSource.pageCount() || !dataSource.hasKnownLastPage() && pageIndex === dataSource.pageCount()) {\r\n            dataSource.pageIndex(pageIndex);\r\n            that._loadingPageIndexes[pageIndex] = true;\r\n            return (0, _deferred.when)(dataSource.load()).always(function() {\r\n                that._loadingPageIndexes[pageIndex] = false\r\n            })\r\n        }\r\n    };\r\n    return {\r\n        ctor: function(component, dataSource, isVirtual) {\r\n            var that = this;\r\n            that._dataSource = dataSource;\r\n            that.component = component;\r\n            that._pageIndex = that._lastPageIndex = dataSource.pageIndex();\r\n            that._viewportSize = 0;\r\n            that._viewportItemSize = 20;\r\n            that._viewportItemIndex = -1;\r\n            that._itemSizes = {};\r\n            that._sizeRatio = 1;\r\n            that._items = [];\r\n            that._cache = [];\r\n            that._isVirtual = isVirtual;\r\n            that._loadingPageIndexes = {};\r\n            that.positionChanged = (0, _callbacks.default)()\r\n        },\r\n        getItemSizes: function() {\r\n            return this._itemSizes\r\n        },\r\n        option: function() {\r\n            return this.component.option.apply(this.component, arguments)\r\n        },\r\n        virtualItemsCount: function() {\r\n            var that = this;\r\n            var pageIndex;\r\n            var itemsCount = 0;\r\n            if (isVirtualMode(that)) {\r\n                pageIndex = getBeginPageIndex(that);\r\n                if (pageIndex < 0) {\r\n                    pageIndex = that._dataSource.pageIndex()\r\n                }\r\n                var beginItemsCount = pageIndex * that._dataSource.pageSize();\r\n                itemsCount = that._cache.length * that._dataSource.pageSize();\r\n                var endItemsCount = Math.max(0, that._dataSource.totalItemsCount() - itemsCount - beginItemsCount);\r\n                return {\r\n                    begin: beginItemsCount,\r\n                    end: endItemsCount\r\n                }\r\n            }\r\n        },\r\n        setViewportPosition: function(position) {\r\n            var that = this;\r\n            var result = new _deferred.Deferred;\r\n            var scrollingTimeout = Math.min(that.option(\"scrolling.timeout\") || 0, that._dataSource.changingDuration());\r\n            if (scrollingTimeout < that.option(\"scrolling.renderingThreshold\")) {\r\n                scrollingTimeout = that.option(\"scrolling.minTimeout\") || 0\r\n            }\r\n            clearTimeout(that._scrollTimeoutID);\r\n            if (scrollingTimeout > 0) {\r\n                that._scrollTimeoutID = setTimeout(function() {\r\n                    that._setViewportPositionCore(position);\r\n                    result.resolve()\r\n                }, scrollingTimeout)\r\n            } else {\r\n                that._setViewportPositionCore(position);\r\n                result.resolve()\r\n            }\r\n            return result.promise()\r\n        },\r\n        getViewportPosition: function() {\r\n            return this._position || 0\r\n        },\r\n        getItemIndexByPosition: function() {\r\n            var that = this;\r\n            var position = that._position;\r\n            var defaultItemSize = that.getItemSize();\r\n            var offset = 0;\r\n            var itemOffset = 0;\r\n            var itemOffsetsWithSize = Object.keys(that._itemSizes).concat(-1);\r\n            for (var i = 0; i < itemOffsetsWithSize.length && offset < position; i++) {\r\n                var itemOffsetWithSize = parseInt(itemOffsetsWithSize[i]);\r\n                var itemOffsetDiff = (position - offset) / defaultItemSize;\r\n                if (itemOffsetWithSize < 0 || itemOffset + itemOffsetDiff < itemOffsetWithSize) {\r\n                    itemOffset += itemOffsetDiff;\r\n                    break\r\n                } else {\r\n                    itemOffsetDiff = itemOffsetWithSize - itemOffset;\r\n                    offset += itemOffsetDiff * defaultItemSize;\r\n                    itemOffset += itemOffsetDiff\r\n                }\r\n                var itemSize = that._itemSizes[itemOffsetWithSize];\r\n                offset += itemSize;\r\n                itemOffset += offset < position ? 1 : (position - offset + itemSize) / itemSize\r\n            }\r\n            return Math.round(50 * itemOffset) / 50\r\n        },\r\n        _setViewportPositionCore: function(position) {\r\n            this._position = position;\r\n            var itemIndex = this.getItemIndexByPosition();\r\n            var result = this.setViewportItemIndex(itemIndex);\r\n            this.positionChanged.fire();\r\n            return result\r\n        },\r\n        setContentSize: function(size) {\r\n            var that = this;\r\n            var sizes = Array.isArray(size) && size;\r\n            var virtualItemsCount = that.virtualItemsCount();\r\n            if (sizes) {\r\n                size = sizes.reduce(function(a, b) {\r\n                    return a + b\r\n                }, 0)\r\n            }\r\n            that._contentSize = size;\r\n            if (virtualItemsCount) {\r\n                if (sizes) {\r\n                    sizes.forEach(function(size, index) {\r\n                        that._itemSizes[virtualItemsCount.begin + index] = size\r\n                    })\r\n                }\r\n                var virtualContentSize = (virtualItemsCount.begin + virtualItemsCount.end + that.itemsCount()) * that._viewportItemSize;\r\n                var contentHeightLimit = getContentHeightLimit(_browser.default);\r\n                if (virtualContentSize > contentHeightLimit) {\r\n                    that._sizeRatio = contentHeightLimit / virtualContentSize\r\n                } else {\r\n                    that._sizeRatio = 1\r\n                }\r\n            }\r\n        },\r\n        getItemSize: function() {\r\n            return this._viewportItemSize * this._sizeRatio\r\n        },\r\n        getItemOffset: function(itemIndex, isEnd) {\r\n            var that = this;\r\n            var virtualItemsCount = that.virtualItemsCount();\r\n            var itemCount = itemIndex;\r\n            if (!virtualItemsCount) {\r\n                return 0\r\n            }\r\n            var offset = 0;\r\n            var totalItemsCount = that._dataSource.totalItemsCount();\r\n            Object.keys(that._itemSizes).forEach(function(currentItemIndex) {\r\n                if (!itemCount) {\r\n                    return\r\n                }\r\n                if (isEnd ? currentItemIndex >= totalItemsCount - itemIndex : currentItemIndex < itemIndex) {\r\n                    offset += that._itemSizes[currentItemIndex];\r\n                    itemCount--\r\n                }\r\n            });\r\n            return Math.floor(offset + itemCount * that._viewportItemSize * that._sizeRatio)\r\n        },\r\n        getContentOffset: function(type) {\r\n            var isEnd = \"end\" === type;\r\n            var virtualItemsCount = this.virtualItemsCount();\r\n            if (!virtualItemsCount) {\r\n                return 0\r\n            }\r\n            return this.getItemOffset(isEnd ? virtualItemsCount.end : virtualItemsCount.begin, isEnd)\r\n        },\r\n        getVirtualContentSize: function() {\r\n            var that = this;\r\n            var virtualItemsCount = that.virtualItemsCount();\r\n            return virtualItemsCount ? that.getContentOffset(\"begin\") + that.getContentOffset(\"end\") + that._contentSize : 0\r\n        },\r\n        getViewportItemIndex: function() {\r\n            return this._viewportItemIndex\r\n        },\r\n        setViewportItemIndex: function(itemIndex) {\r\n            var that = this;\r\n            var pageSize = that._dataSource.pageSize();\r\n            var pageCount = that._dataSource.pageCount();\r\n            var virtualMode = isVirtualMode(that);\r\n            var appendMode = isAppendMode(that);\r\n            var totalItemsCount = that._dataSource.totalItemsCount();\r\n            var newPageIndex;\r\n            that._viewportItemIndex = itemIndex;\r\n            if (pageSize && (virtualMode || appendMode) && totalItemsCount >= 0) {\r\n                if (that._viewportSize && itemIndex + that._viewportSize >= totalItemsCount && !that._isVirtual) {\r\n                    if (that._dataSource.hasKnownLastPage()) {\r\n                        newPageIndex = pageCount - 1;\r\n                        var lastPageSize = totalItemsCount % pageSize;\r\n                        if (newPageIndex > 0 && lastPageSize > 0 && lastPageSize < that._viewportSize) {\r\n                            newPageIndex--\r\n                        }\r\n                    } else {\r\n                        newPageIndex = pageCount\r\n                    }\r\n                } else {\r\n                    newPageIndex = Math.floor(itemIndex / pageSize);\r\n                    var maxPageIndex = pageCount - 1;\r\n                    newPageIndex = Math.max(newPageIndex, 0);\r\n                    newPageIndex = Math.min(newPageIndex, maxPageIndex)\r\n                }\r\n                that.pageIndex(newPageIndex);\r\n                return that.load()\r\n            }\r\n        },\r\n        viewportItemSize: function(size) {\r\n            if (void 0 !== size) {\r\n                this._viewportItemSize = size\r\n            }\r\n            return this._viewportItemSize\r\n        },\r\n        viewportSize: function(size) {\r\n            if (void 0 !== size) {\r\n                this._viewportSize = size\r\n            }\r\n            return this._viewportSize\r\n        },\r\n        pageIndex: function(_pageIndex) {\r\n            if (isVirtualMode(this) || isAppendMode(this)) {\r\n                if (void 0 !== _pageIndex) {\r\n                    this._pageIndex = _pageIndex\r\n                }\r\n                return this._pageIndex\r\n            } else {\r\n                return this._dataSource.pageIndex(_pageIndex)\r\n            }\r\n        },\r\n        beginPageIndex: function beginPageIndex(defaultPageIndex) {\r\n            var beginPageIndex = getBeginPageIndex(this);\r\n            if (beginPageIndex < 0) {\r\n                beginPageIndex = void 0 !== defaultPageIndex ? defaultPageIndex : this.pageIndex()\r\n            }\r\n            return beginPageIndex\r\n        },\r\n        endPageIndex: function endPageIndex() {\r\n            var endPageIndex = getEndPageIndex(this);\r\n            return endPageIndex > 0 ? endPageIndex : this._lastPageIndex\r\n        },\r\n        pageSize: function() {\r\n            return this._dataSource.pageSize()\r\n        },\r\n        load: function() {\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            var result;\r\n            if (isVirtualMode(that) || isAppendMode(that)) {\r\n                var pageIndexForLoad = getPageIndexForLoad(that);\r\n                if (pageIndexForLoad >= 0) {\r\n                    var loadResult = loadCore(that, pageIndexForLoad);\r\n                    if (loadResult) {\r\n                        result = new _deferred.Deferred;\r\n                        loadResult.done(function() {\r\n                            var delayDeferred = that._delayDeferred;\r\n                            if (delayDeferred) {\r\n                                delayDeferred.done(result.resolve).fail(result.reject)\r\n                            } else {\r\n                                result.resolve()\r\n                            }\r\n                        }).fail(result.reject);\r\n                        dataSource.updateLoading()\r\n                    }\r\n                }\r\n            } else {\r\n                result = dataSource.load()\r\n            }\r\n            if (!result && that._lastPageIndex !== that.pageIndex()) {\r\n                that._dataSource.onChanged({\r\n                    changeType: \"pageIndex\"\r\n                })\r\n            }\r\n            return result || (new _deferred.Deferred).resolve()\r\n        },\r\n        loadIfNeed: function() {\r\n            var that = this;\r\n            if ((isVirtualMode(that) || isAppendMode(that)) && !that._dataSource.isLoading() && (!that._isChangedFiring || that._isVirtual)) {\r\n                var position = that.getViewportPosition();\r\n                if (position > 0) {\r\n                    that._setViewportPositionCore(position)\r\n                } else {\r\n                    that.load()\r\n                }\r\n            }\r\n        },\r\n        handleDataChanged: function(callBase, e) {\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            var lastCacheLength = that._cache.length;\r\n            var changeType;\r\n            var removeInvisiblePages;\r\n            if (e && e.changes) {\r\n                fireChanged(that, callBase, e)\r\n            } else {\r\n                if (isVirtualMode(that) || isAppendMode(that)) {\r\n                    var beginPageIndex = getBeginPageIndex(that);\r\n                    if (beginPageIndex >= 0) {\r\n                        if (isVirtualMode(that) && beginPageIndex + that._cache.length !== dataSource.pageIndex() && beginPageIndex - 1 !== dataSource.pageIndex()) {\r\n                            lastCacheLength = 0;\r\n                            that._cache = []\r\n                        }\r\n                        if (isAppendMode(that)) {\r\n                            if (0 === dataSource.pageIndex()) {\r\n                                that._cache = []\r\n                            } else {\r\n                                if (dataSource.pageIndex() < getEndPageIndex(that)) {\r\n                                    fireChanged(that, callBase, {\r\n                                        changeType: \"append\",\r\n                                        items: []\r\n                                    });\r\n                                    return\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    var cacheItem = {\r\n                        pageIndex: dataSource.pageIndex(),\r\n                        itemsLength: dataSource.items(true).length,\r\n                        itemsCount: that.itemsCount(true)\r\n                    };\r\n                    if (!that.option(\"legacyRendering\") && that.option(\"scrolling.removeInvisiblePages\") && isVirtualMode(that)) {\r\n                        removeInvisiblePages = that._cache.length > Math.max(getPreloadPageCount(this) + (that.option(\"scrolling.preloadEnabled\") ? 1 : 0), 2)\r\n                    } else {\r\n                        processDelayChanged(that, callBase, {\r\n                            isDelayed: true\r\n                        })\r\n                    }\r\n                    var removeCacheItem;\r\n                    if (beginPageIndex === dataSource.pageIndex() + 1) {\r\n                        if (removeInvisiblePages) {\r\n                            removeCacheItem = that._cache.pop()\r\n                        }\r\n                        changeType = \"prepend\";\r\n                        that._cache.unshift(cacheItem)\r\n                    } else {\r\n                        if (removeInvisiblePages) {\r\n                            removeCacheItem = that._cache.shift()\r\n                        }\r\n                        changeType = \"append\";\r\n                        that._cache.push(cacheItem)\r\n                    }\r\n                    var isDelayChanged = isVirtualMode(that) && 0 === lastCacheLength && needTwoPagesLoading(that);\r\n                    processChanged(that, callBase, that._cache.length > 1 ? changeType : void 0, isDelayChanged, removeCacheItem);\r\n                    that._delayDeferred = that.load().done(function() {\r\n                        if (processDelayChanged(that, callBase)) {\r\n                            that.load()\r\n                        }\r\n                    })\r\n                } else {\r\n                    processChanged(that, callBase, e)\r\n                }\r\n            }\r\n        },\r\n        itemsCount: function itemsCount(isBase) {\r\n            var itemsCount = 0;\r\n            if (!isBase && isVirtualMode(this)) {\r\n                (0, _iterator.each)(this._cache, function() {\r\n                    itemsCount += this.itemsCount\r\n                })\r\n            } else {\r\n                itemsCount = this._dataSource.itemsCount()\r\n            }\r\n            return itemsCount\r\n        },\r\n        reset: function(isRefresh) {\r\n            this._loadingPageIndexes = {};\r\n            this._cache = [];\r\n            if (!isRefresh) {\r\n                this._itemSizes = {}\r\n            }\r\n        },\r\n        subscribeToWindowScrollEvents: function($element) {\r\n            var that = this;\r\n            that._windowScroll = that._windowScroll || subscribeToExternalScrollers($element, function(scrollTop) {\r\n                if (that.viewportItemSize()) {\r\n                    that.setViewportPosition(scrollTop)\r\n                }\r\n            })\r\n        },\r\n        dispose: function() {\r\n            clearTimeout(this._scrollTimeoutID);\r\n            this._windowScroll && this._windowScroll.dispose();\r\n            this._windowScroll = null\r\n        },\r\n        scrollTo: function(pos) {\r\n            this._windowScroll && this._windowScroll.scrollTo(pos)\r\n        }\r\n    }\r\n}());\r\nexports.VirtualScrollController = VirtualScrollController;\r\n"]},"metadata":{},"sourceType":"script"}