{"ast":null,"code":"/**\r\n * DevExtreme (ui/date_box/ui.time_view.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nexports.default = void 0;\n\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\n\nvar _editor = _interopRequireDefault(require(\"../editor/editor\"));\n\nvar _number_box = _interopRequireDefault(require(\"../number_box\"));\n\nvar _select_box = _interopRequireDefault(require(\"../select_box\"));\n\nvar _box = _interopRequireDefault(require(\"../box\"));\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\n\nvar _date = _interopRequireDefault(require(\"../../localization/date\"));\n\nvar _ui = _interopRequireDefault(require(\"./ui.date_utils\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar TIMEVIEW_CLASS = \"dx-timeview\";\nvar TIMEVIEW_CLOCK_CLASS = \"dx-timeview-clock\";\nvar TIMEVIEW_FIELD_CLASS = \"dx-timeview-field\";\nvar TIMEVIEW_HOURARROW_CLASS = \"dx-timeview-hourarrow\";\nvar TIMEVIEW_TIME_SEPARATOR_CLASS = \"dx-timeview-time-separator\";\nvar TIMEVIEW_FORMAT12_CLASS = \"dx-timeview-format12\";\nvar TIMEVIEW_FORMAT12_AM = -1;\nvar TIMEVIEW_FORMAT12_PM = 1;\nvar TIMEVIEW_MINUTEARROW_CLASS = \"dx-timeview-minutearrow\";\n\nvar rotateArrow = function ($arrow, angle, offset) {\n  cssRotate($arrow, angle, offset);\n};\n\nvar cssRotate = function ($arrow, angle, offset) {\n  $arrow.css(\"transform\", \"rotate(\" + angle + \"deg) translate(0,\" + offset + \"px)\");\n};\n\nvar TimeView = _editor.default.inherit({\n  _getDefaultOptions: function () {\n    return (0, _extend.extend)(this.callBase(), {\n      value: new Date(Date.now()),\n      use24HourFormat: true,\n      _showClock: true,\n      _arrowOffset: 0,\n      stylingMode: void 0\n    });\n  },\n  _defaultOptionsRules: function () {\n    return this.callBase().concat([{\n      device: {\n        platform: \"android\"\n      },\n      options: {\n        _arrowOffset: 15\n      }\n    }, {\n      device: {\n        platform: \"generic\"\n      },\n      options: {\n        _arrowOffset: 5\n      }\n    }]);\n  },\n  _getValue: function () {\n    return this.option(\"value\") || new Date();\n  },\n  _init: function () {\n    this.callBase();\n    this.$element().addClass(TIMEVIEW_CLASS);\n  },\n  _render: function () {\n    this.callBase();\n\n    this._renderBox();\n\n    this._updateTime();\n  },\n  _renderBox: function () {\n    var $box = (0, _renderer.default)(\"<div>\").appendTo(this.$element());\n    var items = [];\n\n    if (this.option(\"_showClock\")) {\n      items.push({\n        ratio: 1,\n        shrink: 0,\n        baseSize: \"auto\",\n        template: this._renderClock.bind(this)\n      });\n    }\n\n    items.push({\n      ratio: 0,\n      shrink: 0,\n      baseSize: 50,\n      template: this._renderField.bind(this)\n    });\n\n    this._createComponent($box, _box.default, {\n      height: \"100%\",\n      width: \"100%\",\n      direction: \"col\",\n      items: items\n    });\n  },\n  _renderClock: function (_, __, container) {\n    this._$hourArrow = (0, _renderer.default)(\"<div>\").addClass(TIMEVIEW_HOURARROW_CLASS);\n    this._$minuteArrow = (0, _renderer.default)(\"<div>\").addClass(TIMEVIEW_MINUTEARROW_CLASS);\n    var $container = (0, _renderer.default)(container);\n    $container.addClass(TIMEVIEW_CLOCK_CLASS).append(this._$hourArrow).append(this._$minuteArrow);\n    this.setAria(\"role\", \"presentation\", $container);\n  },\n  _updateClock: function () {\n    var time = this._getValue();\n\n    var hourArrowAngle = time.getHours() / 12 * 360 + time.getMinutes() / 60 * 30;\n    var minuteArrowAngle = time.getMinutes() / 60 * 360;\n    rotateArrow(this._$hourArrow, hourArrowAngle, this.option(\"_arrowOffset\"));\n    rotateArrow(this._$minuteArrow, minuteArrowAngle, this.option(\"_arrowOffset\"));\n  },\n  _getBoxItems: function (is12HourFormat) {\n    var _this = this;\n\n    var items = [{\n      ratio: 0,\n      shrink: 0,\n      baseSize: \"auto\",\n      template: function () {\n        return _this._hourBox.$element();\n      }\n    }, {\n      ratio: 0,\n      shrink: 0,\n      baseSize: \"auto\",\n      template: (0, _renderer.default)(\"<div>\").addClass(TIMEVIEW_TIME_SEPARATOR_CLASS).text(_date.default.getTimeSeparator())\n    }, {\n      ratio: 0,\n      shrink: 0,\n      baseSize: \"auto\",\n      template: function () {\n        return _this._minuteBox.$element();\n      }\n    }];\n\n    if (is12HourFormat) {\n      items.push({\n        ratio: 0,\n        shrink: 0,\n        baseSize: \"auto\",\n        template: function () {\n          return _this._format12.$element();\n        }\n      });\n    }\n\n    return items;\n  },\n  _renderField: function () {\n    var is12HourFormat = !this.option(\"use24HourFormat\");\n\n    this._createHourBox(is12HourFormat);\n\n    this._createMinuteBox();\n\n    if (is12HourFormat) {\n      this._createFormat12Box();\n    }\n\n    return this._createComponent((0, _renderer.default)(\"<div>\").addClass(TIMEVIEW_FIELD_CLASS), _box.default, {\n      direction: \"row\",\n      align: \"center\",\n      crossAlign: \"center\",\n      items: this._getBoxItems(is12HourFormat)\n    }).$element();\n  },\n  _createHourBox: function (is12HourFormat) {\n    var _this2 = this;\n\n    var editor = this._hourBox = this._createComponent((0, _renderer.default)(\"<div>\"), _number_box.default, (0, _extend.extend)({\n      min: -1,\n      max: is12HourFormat ? 12 : 24,\n      value: this._getValue().getHours(),\n      onValueChanged: this._onHourBoxValueChanged.bind(this),\n      onKeyboardHandled: function (opts) {\n        return _this2._keyboardHandler(opts);\n      }\n    }, this._getNumberBoxConfig()));\n\n    editor.setAria(\"label\", \"hours\");\n  },\n  _isPM: function () {\n    return !this.option(\"use24HourFormat\") && 1 === this._format12.option(\"value\");\n  },\n  _onHourBoxValueChanged: function (args) {\n    var currentValue = this._getValue();\n\n    var newValue = new Date(currentValue);\n\n    var newHours = this._convertMaxHourToMin(args.value);\n\n    if (this._isPM()) {\n      newHours += 12;\n    }\n\n    newValue.setHours(newHours);\n\n    _ui.default.normalizeTime(newValue);\n\n    this.option(\"value\", newValue);\n  },\n  _convertMaxHourToMin: function (hours) {\n    var maxHoursValue = this.option(\"use24HourFormat\") ? 24 : 12;\n    return (maxHoursValue + hours) % maxHoursValue;\n  },\n  _createMinuteBox: function () {\n    var _this3 = this;\n\n    var editor = this._minuteBox = this._createComponent((0, _renderer.default)(\"<div>\"), _number_box.default, (0, _extend.extend)({\n      min: -1,\n      max: 60,\n      value: this._getValue().getMinutes(),\n      onKeyboardHandled: function (opts) {\n        return _this3._keyboardHandler(opts);\n      },\n      onValueChanged: function (_ref) {\n        var value = _ref.value,\n            component = _ref.component;\n        var newMinutes = (60 + value) % 60;\n        component.option(\"value\", newMinutes);\n        var time = new Date(_this3._getValue());\n        time.setMinutes(newMinutes);\n\n        _ui.default.normalizeTime(time);\n\n        _this3.option(\"value\", time);\n      }\n    }, this._getNumberBoxConfig()));\n\n    editor.setAria(\"label\", \"minutes\");\n  },\n  _createFormat12Box: function () {\n    var _this4 = this;\n\n    var periodNames = _date.default.getPeriodNames();\n\n    var editor = this._format12 = this._createComponent((0, _renderer.default)(\"<div>\").addClass(TIMEVIEW_FORMAT12_CLASS), _select_box.default, {\n      items: [{\n        value: TIMEVIEW_FORMAT12_AM,\n        text: periodNames[0]\n      }, {\n        value: TIMEVIEW_FORMAT12_PM,\n        text: periodNames[1]\n      }],\n      valueExpr: \"value\",\n      displayExpr: \"text\",\n      onKeyboardHandled: function (opts) {\n        return _this4._keyboardHandler(opts);\n      },\n      onValueChanged: function (_ref2) {\n        var value = _ref2.value;\n\n        var hours = _this4._getValue().getHours();\n\n        var time = new Date(_this4._getValue());\n        var newHours = (hours + 12 * value) % 24;\n        time.setHours(newHours);\n\n        _this4.option(\"value\", time);\n      },\n      value: this._getValue().getHours() >= 12 ? TIMEVIEW_FORMAT12_PM : TIMEVIEW_FORMAT12_AM,\n      stylingMode: this.option(\"stylingMode\")\n    });\n\n    editor.setAria(\"label\", \"type\");\n  },\n  _refreshFormat12: function () {\n    if (this.option(\"use24HourFormat\")) {\n      return;\n    }\n\n    var value = this._getValue();\n\n    var hours = value.getHours();\n    var isPM = hours >= 12;\n    var newValue = isPM ? TIMEVIEW_FORMAT12_PM : TIMEVIEW_FORMAT12_AM;\n\n    this._silentEditorValueUpdate(this._format12, newValue);\n  },\n  _silentEditorValueUpdate: function (editor, value) {\n    if (editor) {\n      editor._suppressValueChangeAction();\n\n      editor.option(\"value\", value);\n\n      editor._resumeValueChangeAction();\n    }\n  },\n  _getNumberBoxConfig: function () {\n    return {\n      showSpinButtons: true,\n      displayValueFormatter: function (value) {\n        return (value < 10 ? \"0\" : \"\") + value;\n      },\n      stylingMode: this.option(\"stylingMode\")\n    };\n  },\n  _normalizeHours: function (hours) {\n    return this.option(\"use24HourFormat\") ? hours : hours % 12 || 12;\n  },\n  _updateField: function () {\n    var hours = this._normalizeHours(this._getValue().getHours());\n\n    this._silentEditorValueUpdate(this._hourBox, hours);\n\n    this._silentEditorValueUpdate(this._minuteBox, this._getValue().getMinutes());\n\n    this._refreshFormat12();\n  },\n  _updateTime: function () {\n    if (this.option(\"_showClock\")) {\n      this._updateClock();\n    }\n\n    this._updateField();\n  },\n  _visibilityChanged: function (visible) {\n    if (visible) {\n      this._updateTime();\n    }\n  },\n  _optionChanged: function (args) {\n    switch (args.name) {\n      case \"value\":\n        this._updateTime();\n\n        this.callBase(args);\n        break;\n\n      case \"_arrowOffset\":\n        break;\n\n      case \"use24HourFormat\":\n      case \"_showClock\":\n      case \"stylingMode\":\n        this._invalidate();\n\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  }\n});\n\n(0, _component_registrator.default)(\"dxTimeView\", TimeView);\nvar _default = TimeView;\nexports.default = _default;\nmodule.exports = exports.default;","map":{"version":3,"sources":["C:/Users/CapiniaC/Desktop/Collection/Work/project/security/node_modules/devextreme/ui/date_box/ui.time_view.js"],"names":["exports","default","_renderer","_interopRequireDefault","require","_editor","_number_box","_select_box","_box","_extend","_component_registrator","_date","_ui","obj","__esModule","TIMEVIEW_CLASS","TIMEVIEW_CLOCK_CLASS","TIMEVIEW_FIELD_CLASS","TIMEVIEW_HOURARROW_CLASS","TIMEVIEW_TIME_SEPARATOR_CLASS","TIMEVIEW_FORMAT12_CLASS","TIMEVIEW_FORMAT12_AM","TIMEVIEW_FORMAT12_PM","TIMEVIEW_MINUTEARROW_CLASS","rotateArrow","$arrow","angle","offset","cssRotate","css","TimeView","inherit","_getDefaultOptions","extend","callBase","value","Date","now","use24HourFormat","_showClock","_arrowOffset","stylingMode","_defaultOptionsRules","concat","device","platform","options","_getValue","option","_init","$element","addClass","_render","_renderBox","_updateTime","$box","appendTo","items","push","ratio","shrink","baseSize","template","_renderClock","bind","_renderField","_createComponent","height","width","direction","_","__","container","_$hourArrow","_$minuteArrow","$container","append","setAria","_updateClock","time","hourArrowAngle","getHours","getMinutes","minuteArrowAngle","_getBoxItems","is12HourFormat","_this","_hourBox","text","getTimeSeparator","_minuteBox","_format12","_createHourBox","_createMinuteBox","_createFormat12Box","align","crossAlign","_this2","editor","min","max","onValueChanged","_onHourBoxValueChanged","onKeyboardHandled","opts","_keyboardHandler","_getNumberBoxConfig","_isPM","args","currentValue","newValue","newHours","_convertMaxHourToMin","setHours","normalizeTime","hours","maxHoursValue","_this3","_ref","component","newMinutes","setMinutes","_this4","periodNames","getPeriodNames","valueExpr","displayExpr","_ref2","_refreshFormat12","isPM","_silentEditorValueUpdate","_suppressValueChangeAction","_resumeValueChangeAction","showSpinButtons","displayValueFormatter","_normalizeHours","_updateField","_visibilityChanged","visible","_optionChanged","name","_invalidate","_default","module"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/date_box/ui.time_view.js)\r\n * Version: 20.2.6\r\n * Build date: Tue Mar 16 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nexports.default = void 0;\r\nvar _renderer = _interopRequireDefault(require(\"../../core/renderer\"));\r\nvar _editor = _interopRequireDefault(require(\"../editor/editor\"));\r\nvar _number_box = _interopRequireDefault(require(\"../number_box\"));\r\nvar _select_box = _interopRequireDefault(require(\"../select_box\"));\r\nvar _box = _interopRequireDefault(require(\"../box\"));\r\nvar _extend = require(\"../../core/utils/extend\");\r\nvar _component_registrator = _interopRequireDefault(require(\"../../core/component_registrator\"));\r\nvar _date = _interopRequireDefault(require(\"../../localization/date\"));\r\nvar _ui = _interopRequireDefault(require(\"./ui.date_utils\"));\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar TIMEVIEW_CLASS = \"dx-timeview\";\r\nvar TIMEVIEW_CLOCK_CLASS = \"dx-timeview-clock\";\r\nvar TIMEVIEW_FIELD_CLASS = \"dx-timeview-field\";\r\nvar TIMEVIEW_HOURARROW_CLASS = \"dx-timeview-hourarrow\";\r\nvar TIMEVIEW_TIME_SEPARATOR_CLASS = \"dx-timeview-time-separator\";\r\nvar TIMEVIEW_FORMAT12_CLASS = \"dx-timeview-format12\";\r\nvar TIMEVIEW_FORMAT12_AM = -1;\r\nvar TIMEVIEW_FORMAT12_PM = 1;\r\nvar TIMEVIEW_MINUTEARROW_CLASS = \"dx-timeview-minutearrow\";\r\nvar rotateArrow = function($arrow, angle, offset) {\r\n    cssRotate($arrow, angle, offset)\r\n};\r\nvar cssRotate = function($arrow, angle, offset) {\r\n    $arrow.css(\"transform\", \"rotate(\" + angle + \"deg) translate(0,\" + offset + \"px)\")\r\n};\r\nvar TimeView = _editor.default.inherit({\r\n    _getDefaultOptions: function() {\r\n        return (0, _extend.extend)(this.callBase(), {\r\n            value: new Date(Date.now()),\r\n            use24HourFormat: true,\r\n            _showClock: true,\r\n            _arrowOffset: 0,\r\n            stylingMode: void 0\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: {\r\n                platform: \"android\"\r\n            },\r\n            options: {\r\n                _arrowOffset: 15\r\n            }\r\n        }, {\r\n            device: {\r\n                platform: \"generic\"\r\n            },\r\n            options: {\r\n                _arrowOffset: 5\r\n            }\r\n        }])\r\n    },\r\n    _getValue: function() {\r\n        return this.option(\"value\") || new Date\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this.$element().addClass(TIMEVIEW_CLASS)\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._renderBox();\r\n        this._updateTime()\r\n    },\r\n    _renderBox: function() {\r\n        var $box = (0, _renderer.default)(\"<div>\").appendTo(this.$element());\r\n        var items = [];\r\n        if (this.option(\"_showClock\")) {\r\n            items.push({\r\n                ratio: 1,\r\n                shrink: 0,\r\n                baseSize: \"auto\",\r\n                template: this._renderClock.bind(this)\r\n            })\r\n        }\r\n        items.push({\r\n            ratio: 0,\r\n            shrink: 0,\r\n            baseSize: 50,\r\n            template: this._renderField.bind(this)\r\n        });\r\n        this._createComponent($box, _box.default, {\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            direction: \"col\",\r\n            items: items\r\n        })\r\n    },\r\n    _renderClock: function(_, __, container) {\r\n        this._$hourArrow = (0, _renderer.default)(\"<div>\").addClass(TIMEVIEW_HOURARROW_CLASS);\r\n        this._$minuteArrow = (0, _renderer.default)(\"<div>\").addClass(TIMEVIEW_MINUTEARROW_CLASS);\r\n        var $container = (0, _renderer.default)(container);\r\n        $container.addClass(TIMEVIEW_CLOCK_CLASS).append(this._$hourArrow).append(this._$minuteArrow);\r\n        this.setAria(\"role\", \"presentation\", $container)\r\n    },\r\n    _updateClock: function() {\r\n        var time = this._getValue();\r\n        var hourArrowAngle = time.getHours() / 12 * 360 + time.getMinutes() / 60 * 30;\r\n        var minuteArrowAngle = time.getMinutes() / 60 * 360;\r\n        rotateArrow(this._$hourArrow, hourArrowAngle, this.option(\"_arrowOffset\"));\r\n        rotateArrow(this._$minuteArrow, minuteArrowAngle, this.option(\"_arrowOffset\"))\r\n    },\r\n    _getBoxItems: function(is12HourFormat) {\r\n        var _this = this;\r\n        var items = [{\r\n            ratio: 0,\r\n            shrink: 0,\r\n            baseSize: \"auto\",\r\n            template: function() {\r\n                return _this._hourBox.$element()\r\n            }\r\n        }, {\r\n            ratio: 0,\r\n            shrink: 0,\r\n            baseSize: \"auto\",\r\n            template: (0, _renderer.default)(\"<div>\").addClass(TIMEVIEW_TIME_SEPARATOR_CLASS).text(_date.default.getTimeSeparator())\r\n        }, {\r\n            ratio: 0,\r\n            shrink: 0,\r\n            baseSize: \"auto\",\r\n            template: function() {\r\n                return _this._minuteBox.$element()\r\n            }\r\n        }];\r\n        if (is12HourFormat) {\r\n            items.push({\r\n                ratio: 0,\r\n                shrink: 0,\r\n                baseSize: \"auto\",\r\n                template: function() {\r\n                    return _this._format12.$element()\r\n                }\r\n            })\r\n        }\r\n        return items\r\n    },\r\n    _renderField: function() {\r\n        var is12HourFormat = !this.option(\"use24HourFormat\");\r\n        this._createHourBox(is12HourFormat);\r\n        this._createMinuteBox();\r\n        if (is12HourFormat) {\r\n            this._createFormat12Box()\r\n        }\r\n        return this._createComponent((0, _renderer.default)(\"<div>\").addClass(TIMEVIEW_FIELD_CLASS), _box.default, {\r\n            direction: \"row\",\r\n            align: \"center\",\r\n            crossAlign: \"center\",\r\n            items: this._getBoxItems(is12HourFormat)\r\n        }).$element()\r\n    },\r\n    _createHourBox: function(is12HourFormat) {\r\n        var _this2 = this;\r\n        var editor = this._hourBox = this._createComponent((0, _renderer.default)(\"<div>\"), _number_box.default, (0, _extend.extend)({\r\n            min: -1,\r\n            max: is12HourFormat ? 12 : 24,\r\n            value: this._getValue().getHours(),\r\n            onValueChanged: this._onHourBoxValueChanged.bind(this),\r\n            onKeyboardHandled: function(opts) {\r\n                return _this2._keyboardHandler(opts)\r\n            }\r\n        }, this._getNumberBoxConfig()));\r\n        editor.setAria(\"label\", \"hours\")\r\n    },\r\n    _isPM: function() {\r\n        return !this.option(\"use24HourFormat\") && 1 === this._format12.option(\"value\")\r\n    },\r\n    _onHourBoxValueChanged: function(args) {\r\n        var currentValue = this._getValue();\r\n        var newValue = new Date(currentValue);\r\n        var newHours = this._convertMaxHourToMin(args.value);\r\n        if (this._isPM()) {\r\n            newHours += 12\r\n        }\r\n        newValue.setHours(newHours);\r\n        _ui.default.normalizeTime(newValue);\r\n        this.option(\"value\", newValue)\r\n    },\r\n    _convertMaxHourToMin: function(hours) {\r\n        var maxHoursValue = this.option(\"use24HourFormat\") ? 24 : 12;\r\n        return (maxHoursValue + hours) % maxHoursValue\r\n    },\r\n    _createMinuteBox: function() {\r\n        var _this3 = this;\r\n        var editor = this._minuteBox = this._createComponent((0, _renderer.default)(\"<div>\"), _number_box.default, (0, _extend.extend)({\r\n            min: -1,\r\n            max: 60,\r\n            value: this._getValue().getMinutes(),\r\n            onKeyboardHandled: function(opts) {\r\n                return _this3._keyboardHandler(opts)\r\n            },\r\n            onValueChanged: function(_ref) {\r\n                var value = _ref.value,\r\n                    component = _ref.component;\r\n                var newMinutes = (60 + value) % 60;\r\n                component.option(\"value\", newMinutes);\r\n                var time = new Date(_this3._getValue());\r\n                time.setMinutes(newMinutes);\r\n                _ui.default.normalizeTime(time);\r\n                _this3.option(\"value\", time)\r\n            }\r\n        }, this._getNumberBoxConfig()));\r\n        editor.setAria(\"label\", \"minutes\")\r\n    },\r\n    _createFormat12Box: function() {\r\n        var _this4 = this;\r\n        var periodNames = _date.default.getPeriodNames();\r\n        var editor = this._format12 = this._createComponent((0, _renderer.default)(\"<div>\").addClass(TIMEVIEW_FORMAT12_CLASS), _select_box.default, {\r\n            items: [{\r\n                value: TIMEVIEW_FORMAT12_AM,\r\n                text: periodNames[0]\r\n            }, {\r\n                value: TIMEVIEW_FORMAT12_PM,\r\n                text: periodNames[1]\r\n            }],\r\n            valueExpr: \"value\",\r\n            displayExpr: \"text\",\r\n            onKeyboardHandled: function(opts) {\r\n                return _this4._keyboardHandler(opts)\r\n            },\r\n            onValueChanged: function(_ref2) {\r\n                var value = _ref2.value;\r\n                var hours = _this4._getValue().getHours();\r\n                var time = new Date(_this4._getValue());\r\n                var newHours = (hours + 12 * value) % 24;\r\n                time.setHours(newHours);\r\n                _this4.option(\"value\", time)\r\n            },\r\n            value: this._getValue().getHours() >= 12 ? TIMEVIEW_FORMAT12_PM : TIMEVIEW_FORMAT12_AM,\r\n            stylingMode: this.option(\"stylingMode\")\r\n        });\r\n        editor.setAria(\"label\", \"type\")\r\n    },\r\n    _refreshFormat12: function() {\r\n        if (this.option(\"use24HourFormat\")) {\r\n            return\r\n        }\r\n        var value = this._getValue();\r\n        var hours = value.getHours();\r\n        var isPM = hours >= 12;\r\n        var newValue = isPM ? TIMEVIEW_FORMAT12_PM : TIMEVIEW_FORMAT12_AM;\r\n        this._silentEditorValueUpdate(this._format12, newValue)\r\n    },\r\n    _silentEditorValueUpdate: function(editor, value) {\r\n        if (editor) {\r\n            editor._suppressValueChangeAction();\r\n            editor.option(\"value\", value);\r\n            editor._resumeValueChangeAction()\r\n        }\r\n    },\r\n    _getNumberBoxConfig: function() {\r\n        return {\r\n            showSpinButtons: true,\r\n            displayValueFormatter: function(value) {\r\n                return (value < 10 ? \"0\" : \"\") + value\r\n            },\r\n            stylingMode: this.option(\"stylingMode\")\r\n        }\r\n    },\r\n    _normalizeHours: function(hours) {\r\n        return this.option(\"use24HourFormat\") ? hours : hours % 12 || 12\r\n    },\r\n    _updateField: function() {\r\n        var hours = this._normalizeHours(this._getValue().getHours());\r\n        this._silentEditorValueUpdate(this._hourBox, hours);\r\n        this._silentEditorValueUpdate(this._minuteBox, this._getValue().getMinutes());\r\n        this._refreshFormat12()\r\n    },\r\n    _updateTime: function() {\r\n        if (this.option(\"_showClock\")) {\r\n            this._updateClock()\r\n        }\r\n        this._updateField()\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this._updateTime()\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"value\":\r\n                this._updateTime();\r\n                this.callBase(args);\r\n                break;\r\n            case \"_arrowOffset\":\r\n                break;\r\n            case \"use24HourFormat\":\r\n            case \"_showClock\":\r\n            case \"stylingMode\":\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\n(0, _component_registrator.default)(\"dxTimeView\", TimeView);\r\nvar _default = TimeView;\r\nexports.default = _default;\r\nmodule.exports = exports.default;\r\n"]},"metadata":{},"sourceType":"script"}